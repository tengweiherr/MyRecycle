{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useState } from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NativeBaseProvider, FormControl, Input, VStack, Center, Image, HStack, Select, CheckIcon, WarningOutlineIcon, TextArea, Text, Icon, ScrollView, Modal, Box, Heading } from \"native-base\";\nimport { AuthContext, LoadingContext } from \"../context/context\";\nimport SelectDropdown from 'react-native-select-dropdown';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AuthScreen = function AuthScreen() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var _useState5 = useState(\"recycler\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      role = _useState6[0],\n      setRole = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      password = _useState8[0],\n      setPassword = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      state = _useState10[0],\n      setState = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isError = _useState12[0],\n      setIsError = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      message = _useState14[0],\n      setMessage = _useState14[1];\n\n  var _useState15 = useState(true),\n      _useState16 = _slicedToArray(_useState15, 2),\n      isLogin = _useState16[0],\n      setIsLogin = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      emailValidation = _useState18[0],\n      setEmailValidation = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      passwordValidation = _useState20[0],\n      setPasswordValidation = _useState20[1];\n\n  var _useContext = useContext(AuthContext),\n      signIn = _useContext.signIn;\n\n  var _useContext2 = useContext(LoadingContext),\n      setIsLoading = _useContext2.setIsLoading;\n\n  var states = ['Johor', 'Kedah', 'Kelantan', 'Malacca', 'N9', 'Pahang', 'Penang', 'Perak', 'Perlis', 'Sabah', 'Sarawak', 'Selangor', 'Terengganu', 'Kuala Lumpur', 'Labuan', 'Putrajaya'];\n\n  var validateEmail = function validateEmail(text) {\n    var reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\n\n    if (reg.test(text) === false) {\n      setEmailValidation(\"Incorrect email format\");\n      return false;\n    } else {\n      setEmail(text);\n      setEmailValidation(\"\");\n    }\n  };\n\n  var validatePassword = function validatePassword(text) {\n    var reg = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\n\n    if (reg.test(text) === false) {\n      setPasswordValidation(\"Password must contain at least 8 characters, including at least 1 number, 1 lowercase and 1 uppercase character.\");\n      return false;\n    } else {\n      setPassword(text);\n      setPasswordValidation(\"\");\n    }\n  };\n\n  var onChangeHandler = function onChangeHandler() {\n    setIsLogin(!isLogin);\n    setMessage('');\n  };\n\n  var onLoggedIn = function onLoggedIn(userData) {\n    fetch(\"http://192.168.100.31:3000/\" + 'private', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': \"Bearer \" + userData.token\n      }\n    }).then(function _callee(res) {\n      var jsonRes;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(res.json());\n\n            case 3:\n              jsonRes = _context.sent;\n\n              if (res.status === 200) {\n                setMessage(jsonRes.message);\n                signIn(userData);\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n              ;\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var onSubmitHandler = function onSubmitHandler() {\n    var ac = new AbortController();\n    setIsLoading(true);\n\n    if (emailValidation === \"\" && passwordValidation === \"\") {\n      var payload = {\n        email: email,\n        name: name,\n        password: password,\n        role: role,\n        state: state\n      };\n      fetch(\"http://192.168.100.31:3000/\" + (\"\" + (isLogin ? 'login' : 'signup')), {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      }).then(function _callee2(res) {\n        var jsonRes;\n        return _regeneratorRuntime.async(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(res.json());\n\n              case 3:\n                jsonRes = _context2.sent;\n\n                if (res.status !== 200) {\n                  setIsError(true);\n                  setMessage(jsonRes.message);\n                } else {\n                  onLoggedIn(jsonRes);\n                  setIsError(false);\n                  setMessage(jsonRes.message);\n                }\n\n                setIsLoading(false);\n                _context2.next = 11;\n                break;\n\n              case 8:\n                _context2.prev = 8;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 11:\n                ;\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 8]], Promise);\n      }).catch(function (err) {\n        console.log(err);\n      });\n    }\n\n    return function () {\n      return ac.abort();\n    };\n  };\n\n  var getMessage = function getMessage() {\n    var status = isError ? \"Error: \" : \"Success: \";\n    return status + message;\n  };\n\n  return _jsx(ImageBackground, {\n    source: require(\"../public/assets/bg-1-100.jpg\"),\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: _jsxs(VStack, {\n      w: \"full\",\n      h: \"full\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      p: \"5\",\n      space: 5,\n      children: [_jsx(Image, {\n        source: require(\"../public/assets/logo.png\"),\n        alt: \"logo\",\n        style: {\n          width: 120,\n          height: 120\n        }\n      }), _jsx(Heading, {\n        fontSize: 24,\n        bold: true,\n        textAlign: \"center\",\n        children: isLogin ? 'Login' : 'Sign Up'\n      }), _jsxs(VStack, {\n        w: \"full\",\n        p: \"5\",\n        space: 2,\n        children: [_jsxs(FormControl, {\n          isRequired: true,\n          isInvalid: emailValidation !== \"\",\n          children: [_jsx(Input, {\n            variant: \"unstyled\",\n            style: styles.input,\n            placeholder: \"Email\",\n            autoCapitalize: \"none\",\n            onChangeText: function onChangeText(text) {\n              return validateEmail(text);\n            }\n          }), emailValidation !== \"\" && _jsx(FormControl.ErrorMessage, {\n            style: {\n              fontSize: 12,\n              height: 22,\n              alignSelf: \"flex-start\",\n              marginLeft: 10,\n              color: \"red\"\n            },\n            children: emailValidation\n          })]\n        }), !isLogin && _jsx(FormControl, {\n          isRequired: true,\n          children: _jsx(Input, {\n            variant: \"unstyled\",\n            style: styles.input,\n            placeholder: \"Name\",\n            onChangeText: setName\n          })\n        }), _jsxs(FormControl, {\n          isRequired: true,\n          isInvalid: passwordValidation !== \"\",\n          children: [_jsx(Input, {\n            variant: \"unstyled\",\n            secureTextEntry: true,\n            style: styles.input,\n            placeholder: \"Password\",\n            onChangeText: function onChangeText(text) {\n              return validatePassword(text);\n            }\n          }), passwordValidation !== \"\" && _jsx(FormControl.ErrorMessage, {\n            style: {\n              fontSize: 12,\n              height: 52,\n              alignSelf: \"flex-start\",\n              marginLeft: 10,\n              color: \"red\"\n            },\n            children: passwordValidation\n          })]\n        }), !isLogin && _jsx(SelectDropdown, {\n          data: states,\n          onSelect: function onSelect(selectedItem, index) {\n            console.log(selectedItem, index);\n            setState(selectedItem);\n          },\n          buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n            return selectedItem;\n          },\n          rowTextForSelection: function rowTextForSelection(item, index) {\n            return item;\n          },\n          defaultValueByIndex: 0,\n          buttonStyle: styles.input,\n          buttonTextStyle: {\n            textAlign: \"left\",\n            height: 22\n          }\n        }), _jsx(Text, {\n          style: [{\n            color: isError ? 'red' : 'green'\n          }],\n          children: message ? getMessage() : null\n        })]\n      }), _jsxs(VStack, {\n        w: \"full\",\n        p: \"5\",\n        children: [_jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: onSubmitHandler,\n          children: _jsx(Text, {\n            fontSize: 20,\n            bold: true,\n            color: \"#fff\",\n            children: \"Done\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.buttonAlt,\n          onPress: onChangeHandler,\n          children: _jsx(Text, {\n            fontSize: 20,\n            bold: true,\n            children: isLogin ? 'Sign Up' : 'Login'\n          })\n        })]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  image: {\n    width: '100%',\n    alignItems: 'center'\n  },\n  form: {\n    flex: 1,\n    justifyContent: 'space-between',\n    paddingBottom: '5%'\n  },\n  input: {\n    width: '100%',\n    borderWidth: 1.5,\n    borderColor: '#1FAA8F',\n    borderRadius: 30,\n    padding: 16,\n    fontSize: 16,\n    minHeight: 54\n  },\n  button: {\n    width: '100%',\n    backgroundColor: '#1FAA8F',\n    height: 40,\n    borderRadius: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  buttonAlt: {\n    width: '100%',\n    borderWidth: 1.5,\n    height: 40,\n    borderRadius: 50,\n    borderColor: '#E9F4F1',\n    backgroundColor: '#E9F4F1',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 5\n  }\n});\nexport default (function () {\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(Center, {\n      flex: 1,\n      children: _jsx(AuthScreen, {})\n    })\n  });\n});","map":{"version":3,"sources":["/Users/weiherr/Desktop/FYP/MyRecycle/mobile-app/screens/AuthScreen.js"],"names":["React","useContext","useState","NativeBaseProvider","FormControl","Input","VStack","Center","Image","HStack","Select","CheckIcon","WarningOutlineIcon","TextArea","Text","Icon","ScrollView","Modal","Box","Heading","AuthContext","LoadingContext","SelectDropdown","AuthScreen","email","setEmail","name","setName","role","setRole","password","setPassword","state","setState","isError","setIsError","message","setMessage","isLogin","setIsLogin","emailValidation","setEmailValidation","passwordValidation","setPasswordValidation","signIn","setIsLoading","states","validateEmail","text","reg","test","validatePassword","onChangeHandler","onLoggedIn","userData","fetch","method","headers","token","then","res","json","jsonRes","status","console","log","catch","err","onSubmitHandler","ac","AbortController","payload","body","JSON","stringify","abort","getMessage","require","width","height","styles","input","fontSize","alignSelf","marginLeft","color","selectedItem","index","item","textAlign","button","buttonAlt","StyleSheet","create","image","alignItems","form","flex","justifyContent","paddingBottom","borderWidth","borderColor","borderRadius","padding","minHeight","backgroundColor","marginVertical"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { ImageBackground, StyleSheet, TouchableOpacity, Button } from 'react-native';\nimport { NativeBaseProvider, FormControl, Input, VStack, Center, Image, HStack, Select, CheckIcon, WarningOutlineIcon, TextArea, Text, Icon, ScrollView, Modal, Box, Heading } from \"native-base\";\nimport { AuthContext, LoadingContext } from '../context/context';\nimport { API_URL } from \"@env\";\nimport SelectDropdown from 'react-native-select-dropdown';\n\nconst AuthScreen = () => {\n\n    const [email, setEmail] = useState('');\n    const [name, setName] = useState('');\n    const [role, setRole] = useState(\"recycler\");\n    const [password, setPassword] = useState('');\n    const [state, setState] = useState('');\n\n    const [isError, setIsError] = useState(false);\n    const [message, setMessage] = useState('');\n    const [isLogin, setIsLogin] = useState(true);\n\n    const [emailValidation, setEmailValidation] = useState('');\n    const [passwordValidation, setPasswordValidation] = useState('');\n\n    const { signIn } = useContext(AuthContext);\n    const { setIsLoading } = useContext(LoadingContext);\n\n    const states = ['Johor', 'Kedah', 'Kelantan', 'Malacca', 'N9', 'Pahang', 'Penang', 'Perak', 'Perlis', 'Sabah', 'Sarawak', 'Selangor', 'Terengganu', 'Kuala Lumpur', 'Labuan', 'Putrajaya'];\n\n    const validateEmail = (text) => {\n        let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\n        if (reg.test(text) === false) {\n          setEmailValidation(\"Incorrect email format\");\n        //   setEmail(text);\n          return false;\n        }\n        else {\n          setEmail(text);\n          setEmailValidation(\"\");\n        }\n    }\n\n    const validatePassword = (text) => {\n        let reg = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\n        if (reg.test(text) === false) {\n          setPasswordValidation(\"Password must contain at least 8 characters, including at least 1 number, 1 lowercase and 1 uppercase character.\");\n        //   setEmail(text);\n          return false;\n        }\n        else {\n          setPassword(text);\n          setPasswordValidation(\"\");\n        }\n    }\n\n    const onChangeHandler = () => {\n        setIsLogin(!isLogin);\n        setMessage('');\n    };\n\n    const onLoggedIn = (userData) => {\n        fetch( API_URL + 'private', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${userData.token}`, \n            },\n        })\n        .then(async res => { \n            try {\n                const jsonRes = await res.json();\n                if (res.status === 200) {\n                    setMessage(jsonRes.message);\n                    signIn(userData);\n                }\n            } catch (err) {\n                console.log(err);\n            };\n        })\n        .catch(err => {\n            console.log(err);\n        });\n    }\n\n    const onSubmitHandler = () => {\n\n        const ac = new AbortController();\n\n        setIsLoading(true);\n\n        if(emailValidation === \"\" && passwordValidation === \"\"){\n            const payload = {\n                email,\n                name,\n                password,\n                role,\n                state\n            };\n        \n            fetch( API_URL + `${isLogin ? 'login' : 'signup'}`, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(payload),\n            })\n            .then(async res => { \n                try {\n                    const jsonRes = await res.json();\n                    if (res.status !== 200) {\n                        setIsError(true);\n                        setMessage(jsonRes.message);\n                    } else {\n                        onLoggedIn(jsonRes);\n                        setIsError(false);\n                        setMessage(jsonRes.message);                 \n                    }\n                    setIsLoading(false);\n                } catch (err) {\n                    console.log(err);\n                };\n            })\n            .catch(err => {\n                console.log(err);\n            });\n        }\n\n        return () => ac.abort();\n    };\n\n    const getMessage = () => {\n        const status = isError ? `Error: ` : `Success: `;\n        return status + message;\n    }\n\n    return (\n        <ImageBackground source={require('../public/assets/bg-1-100.jpg')} style={{width:\"100%\", height:\"100%\"}}>\n            <VStack w=\"full\" h=\"full\" justifyContent=\"center\" alignItems=\"center\" p=\"5\" space={5}>\n                <Image source={require(\"../public/assets/logo.png\")} alt=\"logo\" style={{width:120, height:120}}/>\n                <Heading fontSize={24} bold textAlign=\"center\">{isLogin ? 'Login' : 'Sign Up'}</Heading>\n\n                <VStack w=\"full\" p=\"5\" space={2}>\n                    <FormControl isRequired isInvalid={emailValidation !== \"\"}>\n                        <Input variant=\"unstyled\" style={styles.input} placeholder=\"Email\" autoCapitalize=\"none\" onChangeText={(text)=>validateEmail(text)} />\n                        {emailValidation !== \"\" && \n                        <FormControl.ErrorMessage style={{fontSize:12, height:22, alignSelf:\"flex-start\", marginLeft:10, color:\"red\"}}>{emailValidation}</FormControl.ErrorMessage>}\n                    </FormControl>\n\n                    {!isLogin &&\n                    <FormControl isRequired>\n                        <Input variant=\"unstyled\" style={styles.input} placeholder=\"Name\" onChangeText={setName} />\n                    </FormControl>}\n\n                    <FormControl isRequired isInvalid={passwordValidation !== \"\"}>\n                        <Input variant=\"unstyled\" secureTextEntry={true} style={styles.input} placeholder=\"Password\" onChangeText={(text)=>validatePassword(text)}></Input>\n                        {passwordValidation !== \"\" && \n                        <FormControl.ErrorMessage style={{fontSize:12, height:52, alignSelf:\"flex-start\", marginLeft:10, color:\"red\"}}>{passwordValidation}</FormControl.ErrorMessage>}\n                    </FormControl>\n\n  \n                {!isLogin && \n                    <SelectDropdown\n                        data={states}\n                        onSelect={(selectedItem, index) => {\n                            console.log(selectedItem, index)\n                            setState(selectedItem);\n                        }}\n                        buttonTextAfterSelection={(selectedItem, index) => {\n                            // text represented after item is selected\n                            // if data array is an array of objects then return selectedItem.property to render after item is selected\n                            return selectedItem\n                        }}\n                        rowTextForSelection={(item, index) => {\n                            // text represented for each item in dropdown\n                            // if data array is an array of objects then return item.property to represent item in dropdown\n                            return item\n                        }}\n                        defaultValueByIndex={0}\n                        buttonStyle={styles.input}\n                        buttonTextStyle={{textAlign:\"left\", height:22}}\n                    />}\n                <Text style={[{color: isError ? 'red' : 'green'}]}>{message ? getMessage() : null}</Text>\n                </VStack>\n\n                <VStack w=\"full\" p=\"5\">\n                    <TouchableOpacity style={styles.button} onPress={onSubmitHandler}>\n                        <Text fontSize={20} bold color=\"#fff\">Done</Text>\n                    </TouchableOpacity>\n                    <TouchableOpacity style={styles.buttonAlt} onPress={onChangeHandler}>\n                        <Text fontSize={20} bold>{isLogin ? 'Sign Up' : 'Login'}</Text>\n                    </TouchableOpacity>\n                </VStack>\n\n            </VStack>\n        </ImageBackground> \n    );\n};\n\nconst styles = StyleSheet.create({\n    image: {\n        width: '100%',\n        alignItems: 'center',\n    },  \n    form: {\n        flex: 1,\n        justifyContent: 'space-between',\n        paddingBottom: '5%',\n    },\n    input: {\n        width: '100%',\n        borderWidth: 1.5,\n        borderColor: '#1FAA8F',\n        borderRadius: 30,\n        padding: 16,\n        fontSize: 16, \n        minHeight: 54,\n    },\n    button: {\n        width: '100%',\n        backgroundColor: '#1FAA8F',\n        height: 40,\n        borderRadius: 50,\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginVertical: 5,\n    },\n    buttonAlt: {\n        width: '100%',\n        borderWidth: 1.5,\n        height: 40,\n        borderRadius: 50,\n        borderColor: '#E9F4F1',\n        backgroundColor: '#E9F4F1',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginVertical: 5,\n    }\n});\n\nexport default () => {\n    return (\n      <NativeBaseProvider>\n        <Center flex={1}>\n          <AuthScreen />\n        </Center>\n      </NativeBaseProvider>\n    )\n  };"]},"metadata":{},"sourceType":"module"}