{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useRef, useContext } from \"react\";\nimport { Center, VStack, HStack, Pressable, NativeBaseProvider, Fab, Icon, Box, Text, FlatList, Spinner } from \"native-base\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useIsFocused, useNavigation, useRoute } from '@react-navigation/native';\nimport { AntDesign, Ionicons, Entypo } from \"@expo/vector-icons\";\nimport API_URL from \"../../API_URL\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { LoadingContext } from \"../../context/context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var Report = function Report() {\n  var Navigation = useNavigation();\n  var isFocused = useIsFocused();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      userData = _useState6[0],\n      setUserData = _useState6[1];\n\n  var _useState7 = useState({\n    status: \"Pending\",\n    id: null\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      payload = _useState8[0],\n      setPayload = _useState8[1];\n\n  var _useContext = useContext(LoadingContext),\n      setIsLoading = _useContext.setIsLoading;\n\n  var getUserData = function getUserData() {\n    var value;\n    return _regeneratorRuntime.async(function getUserData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 4:\n            value = _context.sent;\n\n            if (value !== null) {\n              setUserData(JSON.parse(value));\n              setPayload(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  id: JSON.parse(value).id\n                });\n              });\n            }\n\n            setIsLoading(false);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  };\n\n  useEffect(function () {\n    getUserData();\n  }, []);\n  useEffect(function () {\n    setIsLoading(true);\n    fetch(API_URL + 'report/' + payload.id + \"/\" + payload.status, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (results) {\n      setData(results);\n      setIsLoading(false);\n    }).catch(function (err) {\n      setIsLoading(false);\n      setError(err);\n    });\n  }, [payload, isFocused]);\n  return _jsx(_Fragment, {\n    children: error ? _jsx(Text, {\n      children: \"Error fetching data... Check your network connection!\"\n    }) : _jsxs(_Fragment, {\n      children: [_jsx(Fab, {\n        position: \"absolute\",\n        size: \"sm\",\n        backgroundColor: \"#1FAA8F\",\n        icon: _jsx(Icon, {\n          color: \"white\",\n          as: _jsx(AntDesign, {\n            name: \"plus\"\n          }),\n          size: \"sm\",\n          onPress: function onPress() {\n            return Navigation.navigate('Submit Report');\n          }\n        })\n      }), _jsxs(Box, {\n        w: \"full\",\n        children: [_jsxs(ScrollView, {\n          horizontal: true,\n          scrollEventThrottle: 1,\n          showsHorizontalScrollIndicator: false,\n          height: 50,\n          contentInset: {\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 20\n          },\n          contentContainerStyle: {\n            paddingRight: Platform.OS === 'android' ? 20 : 0\n          },\n          children: [_jsx(TouchableOpacity, {\n            style: payload.status == \"Pending\" ? styles.chipsItemActive : styles.chipsItem,\n            onPress: function onPress() {\n              return setPayload(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  status: \"Pending\"\n                });\n              });\n            },\n            children: _jsx(Text, {\n              children: \"Pending\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: payload.status == \"Verified\" ? styles.chipsItemActive : styles.chipsItem,\n            onPress: function onPress() {\n              return setPayload(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  status: \"Verified\"\n                });\n              });\n            },\n            children: _jsx(Text, {\n              children: \"Verified\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: payload.status == \"In Progress\" ? styles.chipsItemActive : styles.chipsItem,\n            onPress: function onPress() {\n              return setPayload(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  status: \"In Progress\"\n                });\n              });\n            },\n            children: _jsx(Text, {\n              children: \"In Progress\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: payload.status == \"Solved\" ? styles.chipsItemActive : styles.chipsItem,\n            onPress: function onPress() {\n              return setPayload(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  status: \"Solved\"\n                });\n              });\n            },\n            children: _jsx(Text, {\n              children: \"Solved\"\n            })\n          }), _jsx(TouchableOpacity, {\n            style: payload.status == \"Rejected\" ? styles.chipsItemRejected : styles.chipsItem,\n            onPress: function onPress() {\n              return setPayload(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  status: \"Rejected\"\n                });\n              });\n            },\n            children: _jsx(Text, {\n              children: \"Rejected\"\n            })\n          })]\n        }), _jsx(_Fragment, {\n          children: data.length === 0 ? _jsx(Text, {\n            p: \"4\",\n            children: \"No report found.\"\n          }) : _jsx(FlatList, {\n            data: data,\n            inverted: true,\n            renderItem: function renderItem(_ref) {\n              var item = _ref.item;\n              return _jsx(Box, {\n                borderBottomWidth: \"1\",\n                _dark: {\n                  borderColor: \"gray.600\"\n                },\n                borderColor: \"coolGray.200\",\n                pl: \"4\",\n                pr: \"5\",\n                py: \"2\",\n                children: _jsx(Pressable, {\n                  onPress: function onPress() {\n                    return Navigation.navigate('Tracking Report', {\n                      item: item\n                    });\n                  },\n                  children: _jsx(HStack, {\n                    space: 3,\n                    justifyContent: \"space-between\",\n                    children: _jsxs(VStack, {\n                      space: 1,\n                      children: [_jsx(Text, {\n                        _dark: {\n                          color: \"warmGray.50\"\n                        },\n                        color: \"coolGray.800\",\n                        bold: true,\n                        fontSize: \"md\",\n                        children: item.title\n                      }), _jsxs(HStack, {\n                        w: \"xs\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"center\",\n                        children: [_jsxs(Text, {\n                          color: \"coolGray.600\",\n                          _dark: {\n                            color: \"warmGray.200\"\n                          },\n                          children: [\"Report ID: \", item.id]\n                        }), _jsx(Text, {\n                          color: \"coolGray.600\",\n                          _dark: {\n                            color: \"warmGray.200\"\n                          },\n                          mr: \"-4\",\n                          children: item.date.split('T')[0]\n                        })]\n                      })]\n                    })\n                  })\n                })\n              });\n            },\n            keyExtractor: function keyExtractor(item) {\n              return parseInt(item.id);\n            }\n          })\n        })]\n      })]\n    })\n  });\n};\nexport default (function () {\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(Center, {\n      flex: 0,\n      p: \"3\",\n      children: _jsx(Report, {})\n    })\n  });\n});\nvar styles = StyleSheet.create({\n  overlay: {\n    flex: 1,\n    justifyContent: 'flex-end'\n  },\n  container: {\n    shadowColor: '#171717',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 8,\n    elevation: 20,\n    backgroundColor: '#E9F4F1',\n    borderTopRightRadius: 40,\n    borderTopLeftRadius: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingTop: 12,\n    paddingBottom: 28\n  },\n  chipsIcon: {\n    marginRight: 5\n  },\n  chipsItem: {\n    flexDirection: \"row\",\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 8,\n    paddingHorizontal: 20,\n    marginHorizontal: 10,\n    height: 35,\n    elevation: 10\n  },\n  chipsItemActive: {\n    flexDirection: \"row\",\n    backgroundColor: '#4AD1B7',\n    borderRadius: 20,\n    padding: 8,\n    paddingHorizontal: 20,\n    marginHorizontal: 10,\n    height: 35,\n    elevation: 10\n  },\n  chipsItemRejected: {\n    flexDirection: \"row\",\n    backgroundColor: '#FF7B52',\n    borderRadius: 20,\n    padding: 8,\n    paddingHorizontal: 20,\n    marginHorizontal: 10,\n    height: 35,\n    elevation: 10\n  }\n});","map":{"version":3,"sources":["/Users/weiherr/Desktop/FYP/MyRecycle/mobile-app/screens/report/ReportScreen.js"],"names":["React","useState","useEffect","useRef","useContext","Center","VStack","HStack","Pressable","NativeBaseProvider","Fab","Icon","Box","Text","FlatList","Spinner","useIsFocused","useNavigation","useRoute","AntDesign","Ionicons","Entypo","API_URL","AsyncStorage","LoadingContext","Report","Navigation","isFocused","data","setData","error","setError","userData","setUserData","status","id","payload","setPayload","setIsLoading","getUserData","getItem","value","JSON","parse","prevState","console","log","fetch","method","headers","then","response","json","results","catch","err","navigate","top","left","bottom","right","paddingRight","Platform","OS","styles","chipsItemActive","chipsItem","chipsItemRejected","length","item","borderColor","color","title","date","split","parseInt","StyleSheet","create","overlay","flex","justifyContent","container","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","backgroundColor","borderTopRightRadius","borderTopLeftRadius","alignItems","paddingTop","paddingBottom","chipsIcon","marginRight","flexDirection","borderRadius","padding","paddingHorizontal","marginHorizontal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, useContext } from \"react\";\nimport {Center,VStack,HStack,Pressable,NativeBaseProvider,Fab,Icon,Box,Text,FlatList,Spinner} from \"native-base\";\n\nimport { StyleSheet, View, Animated, Modal, ScrollView, TouchableOpacity } from 'react-native';\nimport { useIsFocused, useNavigation, useRoute } from '@react-navigation/native';\nimport { AntDesign, Ionicons, Entypo } from \"@expo/vector-icons\"\nimport API_URL from \"../../API_URL\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { LoadingContext } from \"../../context/context\";\n\nexport const Report = () => {\n\n  const Navigation = useNavigation(); \n  const isFocused = useIsFocused();\n\n  const [data, setData] = useState([]);\n  const [error, setError] = useState(null);\n  const [userData, setUserData] = useState(null);\n  const [payload, setPayload] = useState({\n    status:\"Pending\",\n    id: null\n  });\n\n  const { setIsLoading } = useContext(LoadingContext);\n\n  //get user data\n  const getUserData = async () => {\n    setIsLoading(true);\n    try {\n      const value = await AsyncStorage.getItem('user');\n      if (value !== null) {\n        // We have data!!\n        setUserData(JSON.parse(value));\n        setPayload((prevState)=>({...prevState, id:JSON.parse(value).id}));\n      }\n      setIsLoading(false);\n    } catch (error) {\n      // Error retrieving data\n      console.log(error);\n    }\n  }; \n\n  //get name and email\n  useEffect(() => {\n    getUserData();\n  }, [])\n\n  useEffect(() => {\n\n    setIsLoading(true);\n\n    fetch(API_URL + 'report/' + payload.id + \"/\" + payload.status, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(response => response.json())\n      .then(results => {\n        setData(results);\n        setIsLoading(false);\n      })\n      .catch(err => {\n        setIsLoading(false);\n        setError(err);\n      });\n  }, [payload,isFocused]);\n\n\n  return (\n      <>\n        {error? (\n        <Text>\n          Error fetching data... Check your network connection!\n        </Text>\n        ) : (\n        <>\n        <Fab position=\"absolute\" size=\"sm\" backgroundColor=\"#1FAA8F\" icon={<Icon color=\"white\" as={<AntDesign name=\"plus\" />} size=\"sm\" onPress={()=>Navigation.navigate('Submit Report')}/>} />\n\n        <Box w=\"full\">\n        <ScrollView\n          horizontal\n          scrollEventThrottle={1}\n          showsHorizontalScrollIndicator={false}\n          height={50}\n          contentInset={{ // iOS only\n            top:0,\n            left:0,\n            bottom:0,\n            right:20\n          }}\n          contentContainerStyle={{\n            paddingRight: Platform.OS === 'android' ? 20 : 0\n          }}\n        >\n        \n        <TouchableOpacity style={(payload.status==\"Pending\")? styles.chipsItemActive : styles.chipsItem} onPress={()=>setPayload((prevState)=>({...prevState, status:\"Pending\"}))}>\n          <Text>Pending</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={(payload.status==\"Verified\")? styles.chipsItemActive : styles.chipsItem} onPress={()=>setPayload((prevState)=>({...prevState, status:\"Verified\"}))}>\n          <Text>Verified</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={(payload.status==\"In Progress\")? styles.chipsItemActive : styles.chipsItem} onPress={()=>setPayload((prevState)=>({...prevState, status:\"In Progress\"}))}>\n          <Text>In Progress</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={(payload.status==\"Solved\")? styles.chipsItemActive : styles.chipsItem} onPress={()=>setPayload((prevState)=>({...prevState, status:\"Solved\"}))}>\n          <Text>Solved</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={(payload.status==\"Rejected\")? styles.chipsItemRejected : styles.chipsItem} onPress={()=>setPayload((prevState)=>({...prevState, status:\"Rejected\"}))}>\n          <Text>Rejected</Text>\n        </TouchableOpacity>\n\n        </ScrollView>\n        <>\n          {data.length === 0 ? (\n            <Text p=\"4\">No report found.</Text>\n          ) : (\n            <FlatList\n            data={data}\n            inverted={true}\n            renderItem={({ item }) => (\n              <Box\n                borderBottomWidth=\"1\"\n                _dark={{\n                  borderColor: \"gray.600\",\n                }}\n                borderColor=\"coolGray.200\"\n                pl=\"4\"\n                pr=\"5\"\n                py=\"2\"\n              >\n               {/* <Pressable onPress={()=>handleProductNavigation(item.gtin)}> */}\n               <Pressable onPress={()=> Navigation.navigate('Tracking Report', {item:item})}>\n\n                <HStack space={3} justifyContent=\"space-between\">\n                  <VStack space={1}>\n                    <Text\n                      _dark={{\n                        color: \"warmGray.50\",\n                      }}\n                      color=\"coolGray.800\"\n                      bold\n                      fontSize=\"md\"\n                    >\n                      {item.title}\n                    </Text>\n                    <HStack w=\"xs\" justifyContent=\"space-between\" alignItems=\"center\">\n                    <Text\n                      color=\"coolGray.600\"\n                      _dark={{\n                        color: \"warmGray.200\",\n                      }}\n                    >\n                      Report ID: {item.id}\n                    </Text>\n                    <Text\n                      color=\"coolGray.600\"\n                      _dark={{\n                        color: \"warmGray.200\",\n                      }}\n                      mr=\"-4\"\n                    >\n                      {item.date.split('T')[0]}\n                    </Text>\n                    </HStack>\n                  </VStack>\n                </HStack>\n                </Pressable>\n              </Box>\n\n            )}\n            keyExtractor={(item) => parseInt(item.id)}\n          />\n          )}        \n        </>\n\n\n        </Box>   \n        </>\n        )}\n      </>\n  );\n};\n\nexport default () => {\n  return (\n    <NativeBaseProvider>\n      <Center flex={0} p=\"3\">\n        <Report/>\n      </Center>\n    </NativeBaseProvider>\n  )\n};\n\nconst styles = StyleSheet.create({\n  overlay: {\n    flex: 1,\n    justifyContent: 'flex-end',\n  },\n  container: {\n    shadowColor: '#171717',\n    shadowOffset: {width: 0, height: 0},\n    shadowOpacity: 0.2,\n    shadowRadius: 8,\n    elevation: 20,\n    backgroundColor: '#E9F4F1',\n    borderTopRightRadius: 40,\n    borderTopLeftRadius: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingTop: 12,\n    paddingBottom: 28,\n  },\n  chipsIcon: {\n    marginRight: 5,\n  },\n  chipsItem: {\n    flexDirection:\"row\",\n    backgroundColor:'white', \n    borderRadius:20,\n    padding:8,\n    paddingHorizontal:20, \n    marginHorizontal:10,\n    height:35,\n    elevation: 10,\n  },\n  chipsItemActive: {\n    flexDirection:\"row\",\n    backgroundColor:'#4AD1B7', \n    borderRadius:20,\n    padding:8,\n    paddingHorizontal:20, \n    marginHorizontal:10,\n    height:35,\n    elevation: 10,\n  },\n  chipsItemRejected: {\n    flexDirection:\"row\",\n    backgroundColor:'#FF7B52', \n    borderRadius:20,\n    padding:8,\n    paddingHorizontal:20, \n    marginHorizontal:10,\n    height:35,\n    elevation: 10,\n  },\n\n});"]},"metadata":{},"sourceType":"module"}