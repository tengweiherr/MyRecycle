{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"startIcon\", \"rightIcon\", \"leftIcon\", \"endIcon\", \"spinner\", \"isDisabled\", \"isLoading\", \"spinnerPlacement\"],\n    _excluded2 = [\"_text\", \"_stack\", \"_icon\", \"_spinner\", \"isLoadingText\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { Pressable } from \"../../primitives/Pressable\";\nimport Box from \"../../primitives/Box\";\nimport { HStack } from \"../../primitives/Stack\";\nimport Spinner from \"../../primitives/Spinner\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar ActionsheetItem = function ActionsheetItem(_ref, ref) {\n  var children = _ref.children,\n      startIcon = _ref.startIcon,\n      rightIcon = _ref.rightIcon,\n      leftIcon = _ref.leftIcon,\n      endIcon = _ref.endIcon,\n      spinner = _ref.spinner,\n      isDisabled = _ref.isDisabled,\n      isLoading = _ref.isLoading,\n      _ref$spinnerPlacement = _ref.spinnerPlacement,\n      spinnerPlacement = _ref$spinnerPlacement === void 0 ? 'start' : _ref$spinnerPlacement,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _usePropsResolution = usePropsResolution('ActionsheetItem', props, undefined, {\n    cascadePseudoProps: true\n  }),\n      _text = _usePropsResolution._text,\n      _stack = _usePropsResolution._stack,\n      _icon = _usePropsResolution._icon,\n      _spinner = _usePropsResolution._spinner,\n      isLoadingText = _usePropsResolution.isLoadingText,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n\n  if (endIcon && React.isValidElement(endIcon)) {\n    endIcon = React.Children.map(endIcon, function (child, index) {\n      return React.cloneElement(child, _objectSpread(_objectSpread({\n        key: \"button-end-icon-\".concat(index)\n      }, _icon), child.props));\n    });\n  }\n\n  if (startIcon && React.isValidElement(startIcon)) {\n    startIcon = React.Children.map(startIcon, function (child, index) {\n      return React.cloneElement(child, _objectSpread(_objectSpread({\n        key: \"button-start-icon-\".concat(index)\n      }, _icon), child.props));\n    });\n  }\n\n  var spinnerElement = spinner ? spinner : React.createElement(Spinner, _extends({\n    color: _text === null || _text === void 0 ? void 0 : _text.color\n  }, _spinner));\n\n  var boxChildren = function boxChildren(child) {\n    return child ? React.createElement(Box, {\n      _text: _text\n    }, child) : null;\n  };\n\n  return React.createElement(Pressable, _extends({\n    disabled: isDisabled || isLoading\n  }, resolvedProps, {\n    ref: ref\n  }), React.createElement(HStack, _extends({}, _stack, {\n    test: true\n  }), startIcon && !isLoading ? startIcon : null, isLoading && spinnerPlacement === 'start' ? spinnerElement : null, isLoading ? isLoadingText ? boxChildren(isLoadingText) : null : boxChildren(children), endIcon && !isLoading ? endIcon : null, isLoading && spinnerPlacement === 'end' ? spinnerElement : null));\n};\n\nexport default memo(forwardRef(ActionsheetItem));","map":{"version":3,"sources":["ActionsheetItem.tsx"],"names":["ActionsheetItem","spinnerPlacement","props","resolvedProps","usePropsResolution","cascadePseudoProps","useHasResponsiveProps","startIcon","endIcon","React","key","child","spinnerElement","spinner","_text","color","boxChildren","isDisabled","isLoading","ref","isLoadingText","memo","forwardRef"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Pressable } from '../../primitives/Pressable';\nimport Box from '../../primitives/Box';\nimport { HStack } from '../../primitives/Stack';\nimport Spinner from '../../primitives/Spinner';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport type { IActionsheetItemProps } from './types';\n\nconst ActionsheetItem = (\n  {\n    //@ts-ignore\n    children,\n    startIcon,\n    rightIcon,\n    leftIcon,\n    endIcon,\n    spinner,\n    isDisabled,\n    isLoading,\n    spinnerPlacement = 'start',\n    ...props\n  }: IActionsheetItemProps,\n  ref: any\n) => {\n  const {\n    _text,\n    _stack,\n    _icon,\n    _spinner,\n    isLoadingText,\n    ...resolvedProps\n  } = usePropsResolution('ActionsheetItem', props, undefined, {\n    cascadePseudoProps: true,\n  });\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n  if (endIcon && React.isValidElement(endIcon)) {\n    endIcon = React.Children.map(\n      endIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-end-icon-${index}`,\n          ..._icon,\n          ...child.props,\n        });\n      }\n    );\n  }\n  if (startIcon && React.isValidElement(startIcon)) {\n    startIcon = React.Children.map(\n      startIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-start-icon-${index}`,\n          ..._icon,\n          ...child.props,\n        });\n      }\n    );\n  }\n  const spinnerElement = spinner ? (\n    spinner\n  ) : (\n    <Spinner color={_text?.color} {..._spinner} />\n  );\n\n  const boxChildren = (child: any) => {\n    return child ? <Box _text={_text}>{child}</Box> : null;\n  };\n\n  return (\n    <Pressable disabled={isDisabled || isLoading} {...resolvedProps} ref={ref}>\n      <HStack {..._stack} test={true}>\n        {startIcon && !isLoading ? startIcon : null}\n        {isLoading && spinnerPlacement === 'start' ? spinnerElement : null}\n        {isLoading\n          ? isLoadingText\n            ? boxChildren(isLoadingText)\n            : null\n          : boxChildren(children)}\n\n        {endIcon && !isLoading ? endIcon : null}\n        {isLoading && spinnerPlacement === 'end' ? spinnerElement : null}\n      </HStack>\n    </Pressable>\n  );\n};\n\nexport default memo(forwardRef(ActionsheetItem));\n"]},"metadata":{},"sourceType":"module"}