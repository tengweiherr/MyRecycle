{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport cloneDeep from 'lodash.clonedeep';\nimport React from 'react';\nimport PresenceTransition from \"./PresenceTransition\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar defaultStaggerConfig = {\n  offset: 0,\n  reverse: false\n};\n\nvar Stagger = function Stagger(_ref) {\n  var children = _ref.children,\n      restProps = _objectWithoutProperties(_ref, _excluded);\n\n  if (useHasResponsiveProps(restProps)) {\n    return null;\n  }\n\n  return React.Children.map(children, function (child, index) {\n    var clonedAnimationConfig = cloneDeep(restProps);\n    var animate = clonedAnimationConfig.animate,\n        exit = clonedAnimationConfig.exit;\n\n    if (animate) {\n      var _animate$transition$d, _animate$transition$s;\n\n      if (!animate.transition) {\n        animate.transition = {};\n      }\n\n      animate.transition.delay = (_animate$transition$d = animate.transition.delay) !== null && _animate$transition$d !== void 0 ? _animate$transition$d : 0;\n      var stagger = (_animate$transition$s = animate.transition.stagger) !== null && _animate$transition$s !== void 0 ? _animate$transition$s : defaultStaggerConfig;\n      var offset = stagger.reverse ? (React.Children.count(children) - 1 - index) * stagger.offset : index * stagger.offset;\n      animate.transition.delay = animate.transition.delay + offset;\n    }\n\n    if (exit) {\n      var _exit$transition$dela, _exit$transition$stag;\n\n      if (!exit.transition) {\n        exit.transition = {};\n      }\n\n      exit.transition.delay = (_exit$transition$dela = exit.transition.delay) !== null && _exit$transition$dela !== void 0 ? _exit$transition$dela : 0;\n\n      var _stagger = (_exit$transition$stag = exit.transition.stagger) !== null && _exit$transition$stag !== void 0 ? _exit$transition$stag : defaultStaggerConfig;\n\n      var _offset = _stagger.reverse ? (React.Children.count(children) - 1 - index) * _stagger.offset : index * _stagger.offset;\n\n      exit.transition.delay = exit.transition.delay + _offset;\n    }\n\n    return React.createElement(PresenceTransition, _extends({\n      key: child.key\n    }, clonedAnimationConfig), child);\n  });\n};\n\nexport default Stagger;","map":{"version":3,"sources":["Stagger.tsx"],"names":["defaultStaggerConfig","offset","reverse","Stagger","restProps","useHasResponsiveProps","clonedAnimationConfig","cloneDeep","exit","animate","stagger","React","index","child","key"],"mappings":"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","sourcesContent":["import cloneDeep from 'lodash.clonedeep';\nimport React from 'react';\nimport PresenceTransition from './PresenceTransition';\nimport type { ISupportedTransitions, ITransitionConfig } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\ninterface IStaggerConfig {\n  offset: number;\n  reverse?: boolean;\n}\n\nexport interface IStaggerStyleProps extends ISupportedTransitions {\n  transition?: ITransitionConfig & { stagger?: IStaggerConfig };\n}\n\ninterface IStaggerProps {\n  children: any;\n  /**\n   * Initial styles before the transition starts\n   */\n  initial?: ISupportedTransitions;\n  /**\n   * The styles to which each child should animate to while entering.\n   */\n  animate?: IStaggerStyleProps;\n  /**\n   * The styles to which each child should animate to while exiting.\n   */\n  exit?: IStaggerStyleProps;\n  /**\n   * Determines whether to start the animation\n   */\n  visible?: boolean;\n}\n\nconst defaultStaggerConfig: IStaggerConfig = { offset: 0, reverse: false };\n\nconst Stagger = ({ children, ...restProps }: IStaggerProps) => {\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(restProps)) {\n    return null;\n  }\n  return React.Children.map(children, (child, index) => {\n    const clonedAnimationConfig = cloneDeep(restProps);\n    const { animate, exit } = clonedAnimationConfig;\n\n    if (animate) {\n      if (!animate.transition) {\n        animate.transition = {};\n      }\n      animate.transition.delay = animate.transition.delay ?? 0;\n      const stagger = animate.transition.stagger ?? defaultStaggerConfig;\n      const offset = stagger.reverse\n        ? (React.Children.count(children) - 1 - index) * stagger.offset\n        : index * stagger.offset;\n      animate.transition.delay = animate.transition.delay + offset;\n    }\n\n    if (exit) {\n      if (!exit.transition) {\n        exit.transition = {};\n      }\n      exit.transition.delay = exit.transition.delay ?? 0;\n      const stagger = exit.transition.stagger ?? defaultStaggerConfig;\n      const offset = stagger.reverse\n        ? (React.Children.count(children) - 1 - index) * stagger.offset\n        : index * stagger.offset;\n      exit.transition.delay = exit.transition.delay + offset;\n    }\n\n    return (\n      <PresenceTransition key={child.key} {...clonedAnimationConfig}>\n        {child}\n      </PresenceTransition>\n    );\n  });\n};\n\nexport default Stagger;\n"]},"metadata":{},"sourceType":"module"}