{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nvar PRESS_RETENTION_OFFSET = {\n  top: 20,\n  left: 20,\n  right: 20,\n  bottom: 30\n};\nvar Mixin = _reactNative.Touchable.Mixin;\nvar _touchableHandleStartShouldSetResponder = Mixin.touchableHandleStartShouldSetResponder,\n    _touchableHandleResponderTerminationRequest = Mixin.touchableHandleResponderTerminationRequest,\n    _touchableHandleResponderGrant = Mixin.touchableHandleResponderGrant,\n    _touchableHandleResponderMove = Mixin.touchableHandleResponderMove,\n    _touchableHandleResponderRelease = Mixin.touchableHandleResponderRelease,\n    _touchableHandleResponderTerminate = Mixin.touchableHandleResponderTerminate,\n    touchableGetInitialState = Mixin.touchableGetInitialState;\n\nvar SvgTouchableMixin = _objectSpread(_objectSpread({}, Mixin), {}, {\n  touchableHandleStartShouldSetResponder: function touchableHandleStartShouldSetResponder(e) {\n    var onStartShouldSetResponder = this.props.onStartShouldSetResponder;\n\n    if (onStartShouldSetResponder) {\n      return onStartShouldSetResponder(e);\n    } else {\n      return _touchableHandleStartShouldSetResponder.call(this, e);\n    }\n  },\n  touchableHandleResponderTerminationRequest: function touchableHandleResponderTerminationRequest(e) {\n    var onResponderTerminationRequest = this.props.onResponderTerminationRequest;\n\n    if (onResponderTerminationRequest) {\n      return onResponderTerminationRequest(e);\n    } else {\n      return _touchableHandleResponderTerminationRequest.call(this, e);\n    }\n  },\n  touchableHandleResponderGrant: function touchableHandleResponderGrant(e) {\n    var onResponderGrant = this.props.onResponderGrant;\n\n    if (onResponderGrant) {\n      return onResponderGrant(e);\n    } else {\n      return _touchableHandleResponderGrant.call(this, e);\n    }\n  },\n  touchableHandleResponderMove: function touchableHandleResponderMove(e) {\n    var onResponderMove = this.props.onResponderMove;\n\n    if (onResponderMove) {\n      return onResponderMove(e);\n    } else {\n      return _touchableHandleResponderMove.call(this, e);\n    }\n  },\n  touchableHandleResponderRelease: function touchableHandleResponderRelease(e) {\n    var onResponderRelease = this.props.onResponderRelease;\n\n    if (onResponderRelease) {\n      return onResponderRelease(e);\n    } else {\n      return _touchableHandleResponderRelease.call(this, e);\n    }\n  },\n  touchableHandleResponderTerminate: function touchableHandleResponderTerminate(e) {\n    var onResponderTerminate = this.props.onResponderTerminate;\n\n    if (onResponderTerminate) {\n      return onResponderTerminate(e);\n    } else {\n      return _touchableHandleResponderTerminate.call(this, e);\n    }\n  },\n  touchableHandlePress: function touchableHandlePress(e) {\n    var onPress = this.props.onPress;\n    onPress && onPress(e);\n  },\n  touchableHandleActivePressIn: function touchableHandleActivePressIn(e) {\n    var onPressIn = this.props.onPressIn;\n    onPressIn && onPressIn(e);\n  },\n  touchableHandleActivePressOut: function touchableHandleActivePressOut(e) {\n    var onPressOut = this.props.onPressOut;\n    onPressOut && onPressOut(e);\n  },\n  touchableHandleLongPress: function touchableHandleLongPress(e) {\n    var onLongPress = this.props.onLongPress;\n    onLongPress && onLongPress(e);\n  },\n  touchableGetPressRectOffset: function touchableGetPressRectOffset() {\n    var pressRetentionOffset = this.props.pressRetentionOffset;\n    return pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n  touchableGetHitSlop: function touchableGetHitSlop() {\n    var hitSlop = this.props.hitSlop;\n    return hitSlop;\n  },\n  touchableGetHighlightDelayMS: function touchableGetHighlightDelayMS() {\n    var delayPressIn = this.props.delayPressIn;\n    return delayPressIn || 0;\n  },\n  touchableGetLongPressDelayMS: function touchableGetLongPressDelayMS() {\n    var delayLongPress = this.props.delayLongPress;\n    return delayLongPress === 0 ? 0 : delayLongPress || 500;\n  },\n  touchableGetPressOutDelayMS: function touchableGetPressOutDelayMS() {\n    var delayPressOut = this.props.delayPressOut;\n    return delayPressOut || 0;\n  }\n});\n\nvar touchKeys = Object.keys(SvgTouchableMixin);\nvar touchVals = touchKeys.map(function (key) {\n  return SvgTouchableMixin[key];\n});\nvar numTouchKeys = touchKeys.length;\n\nvar _default = function _default(target) {\n  for (var i = 0; i < numTouchKeys; i++) {\n    var key = touchKeys[i];\n    var val = touchVals[i];\n\n    if (typeof val === 'function') {\n      target[key] = val.bind(target);\n    } else {\n      target[key] = val;\n    }\n  }\n\n  target.state = touchableGetInitialState();\n};\n\nexports.default = _default;","map":{"version":3,"sources":["SvgTouchableMixin.ts"],"names":["PRESS_RETENTION_OFFSET","top","left","right","bottom","Mixin","Touchable","touchableHandleStartShouldSetResponder","touchableHandleResponderTerminationRequest","touchableHandleResponderGrant","touchableHandleResponderMove","touchableHandleResponderRelease","touchableHandleResponderTerminate","touchableGetInitialState","SvgTouchableMixin","onStartShouldSetResponder","onResponderTerminationRequest","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","touchableHandlePress","onPress","touchableHandleActivePressIn","onPressIn","touchableHandleActivePressOut","onPressOut","touchableHandleLongPress","onLongPress","touchableGetPressRectOffset","pressRetentionOffset","touchableGetHitSlop","hitSlop","touchableGetHighlightDelayMS","delayPressIn","touchableGetLongPressDelayMS","delayLongPress","touchableGetPressOutDelayMS","delayPressOut","touchKeys","Object","touchVals","numTouchKeys","i","key","val","target"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport { Touchable, GestureResponderEvent } from 'react-native';\nconst PRESS_RETENTION_OFFSET = { top: 20, left: 20, right: 20, bottom: 30 };\n// @ts-ignore\nconst { Mixin } = Touchable;\nconst {\n  touchableHandleStartShouldSetResponder,\n  touchableHandleResponderTerminationRequest,\n  touchableHandleResponderGrant,\n  touchableHandleResponderMove,\n  touchableHandleResponderRelease,\n  touchableHandleResponderTerminate,\n  touchableGetInitialState,\n} = Mixin;\n\nconst SvgTouchableMixin = {\n  ...Mixin,\n\n  touchableHandleStartShouldSetResponder(e: GestureResponderEvent) {\n    const { onStartShouldSetResponder } = this.props;\n    if (onStartShouldSetResponder) {\n      return onStartShouldSetResponder(e);\n    } else {\n      return touchableHandleStartShouldSetResponder.call(this, e);\n    }\n  },\n\n  touchableHandleResponderTerminationRequest(e: GestureResponderEvent) {\n    const { onResponderTerminationRequest } = this.props;\n    if (onResponderTerminationRequest) {\n      return onResponderTerminationRequest(e);\n    } else {\n      return touchableHandleResponderTerminationRequest.call(this, e);\n    }\n  },\n\n  touchableHandleResponderGrant(e: GestureResponderEvent) {\n    const { onResponderGrant } = this.props;\n    if (onResponderGrant) {\n      return onResponderGrant(e);\n    } else {\n      return touchableHandleResponderGrant.call(this, e);\n    }\n  },\n\n  touchableHandleResponderMove(e: GestureResponderEvent) {\n    const { onResponderMove } = this.props;\n    if (onResponderMove) {\n      return onResponderMove(e);\n    } else {\n      return touchableHandleResponderMove.call(this, e);\n    }\n  },\n\n  touchableHandleResponderRelease(e: GestureResponderEvent) {\n    const { onResponderRelease } = this.props;\n    if (onResponderRelease) {\n      return onResponderRelease(e);\n    } else {\n      return touchableHandleResponderRelease.call(this, e);\n    }\n  },\n\n  touchableHandleResponderTerminate(e: GestureResponderEvent) {\n    const { onResponderTerminate } = this.props;\n    if (onResponderTerminate) {\n      return onResponderTerminate(e);\n    } else {\n      return touchableHandleResponderTerminate.call(this, e);\n    }\n  },\n\n  touchableHandlePress(e: GestureResponderEvent) {\n    const { onPress } = this.props;\n    onPress && onPress(e);\n  },\n\n  touchableHandleActivePressIn(e: GestureResponderEvent) {\n    const { onPressIn } = this.props;\n    onPressIn && onPressIn(e);\n  },\n\n  touchableHandleActivePressOut(e: GestureResponderEvent) {\n    const { onPressOut } = this.props;\n    onPressOut && onPressOut(e);\n  },\n\n  touchableHandleLongPress(e: GestureResponderEvent) {\n    const { onLongPress } = this.props;\n    onLongPress && onLongPress(e);\n  },\n\n  touchableGetPressRectOffset() {\n    const { pressRetentionOffset } = this.props;\n    return pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n\n  touchableGetHitSlop() {\n    const { hitSlop } = this.props;\n    return hitSlop;\n  },\n\n  touchableGetHighlightDelayMS() {\n    const { delayPressIn } = this.props;\n    return delayPressIn || 0;\n  },\n\n  touchableGetLongPressDelayMS() {\n    const { delayLongPress } = this.props;\n    return delayLongPress === 0 ? 0 : delayLongPress || 500;\n  },\n\n  touchableGetPressOutDelayMS() {\n    const { delayPressOut } = this.props;\n    return delayPressOut || 0;\n  },\n};\n\nconst touchKeys = Object.keys(SvgTouchableMixin);\nconst touchVals = touchKeys.map(key => SvgTouchableMixin[key]);\nconst numTouchKeys = touchKeys.length;\n\nexport default (target: { [x: string]: unknown; state: unknown }) => {\n  for (let i = 0; i < numTouchKeys; i++) {\n    const key = touchKeys[i];\n    const val = touchVals[i];\n    if (typeof val === 'function') {\n      target[key] = val.bind(target);\n    } else {\n      target[key] = val;\n    }\n  }\n  target.state = touchableGetInitialState();\n};\n"]},"metadata":{},"sourceType":"script"}