{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { NativeBaseProvider, Box, Button, ScrollView, Stack, Center, Accordion, Text, Divider, List, Image, PresenceTransition, Pressable, Spacer, HStack, VStack, CheckCircleIcon, Heading, Icon, InfoOutlineIcon, FlatList, SectionList, Spinner } from 'native-base';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { LoadingContext } from \"../../context/context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var ProductDetail = function ProductDetail(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var Navigation = useNavigation();\n  var productgtin = JSON.stringify(useRoute().params.gtin).replace('\"', '').replace('\"', '');\n\n  var _useContext = useContext(LoadingContext),\n      setIsLoading = _useContext.setIsLoading;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState({\n    time: \"\",\n    guide: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      material = _useState4[0],\n      setMaterial = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      guide = _useState6[0],\n      setGuide = _useState6[1];\n\n  useEffect(function () {\n    setIsLoading(true);\n    var ac = new AbortController();\n    fetch(\"http://192.168.100.31:3000/\" + \"product/\" + productgtin, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (results) {\n      setData(results);\n      setIsLoading(false);\n    }).catch(function (err) {\n      console.log(err);\n      setIsLoading(false);\n    });\n    return function () {\n      return ac.abort();\n    };\n  }, []);\n  useEffect(function () {\n    setIsLoading(true);\n    var ac = new AbortController();\n    fetch(\"http://192.168.100.31:3000/\" + \"material\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (results) {\n      for (var index = 0; index < results.length; index++) {\n        if (data.material == results[index].material) {\n          setMaterial(results[index]);\n        }\n      }\n\n      setIsLoading(false);\n    }).catch(function (err) {\n      console.log(err);\n      setIsLoading(false);\n    });\n    return function () {\n      return ac.abort();\n    };\n  }, [data]);\n  useEffect(function () {\n    fetch(\"http://192.168.100.31:3000/\" + 'guide', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (results) {\n      setGuide(results);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }, []);\n\n  var _renderGuide = function _renderGuide() {\n    return guide.map(function (item, index) {\n      return _jsxs(HStack, {\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        width: \"full\",\n        backgroundColor: \"white\",\n        p: \"2\",\n        rounded: \"20\",\n        space: 4,\n        children: [_jsxs(Box, {\n          backgroundColor: \"gray.100\",\n          borderRadius: \"100\",\n          size: \"16\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          children: [item.id === 1 && _jsx(Image, {\n            source: require(\"../../public/assets/recycle-steps/step_1.png\"),\n            alt: \"action-picture\",\n            size: \"16\"\n          }), item.id === 2 && _jsx(Image, {\n            source: require(\"../../public/assets/recycle-steps/step_2.png\"),\n            alt: \"action-picture\",\n            size: \"16\"\n          }), item.id === 3 && _jsx(Image, {\n            source: require(\"../../public/assets/recycle-steps/step_3.png\"),\n            alt: \"action-picture\",\n            size: \"16\"\n          }), item.id === 4 && _jsx(Image, {\n            source: require(\"../../public/assets/recycle-steps/step_4.png\"),\n            alt: \"action-picture\",\n            size: \"16\"\n          }), item.id === 5 && _jsx(Image, {\n            source: require(\"../../public/assets/recycle-steps/step_5.png\"),\n            alt: \"action-picture\",\n            size: \"16\"\n          })]\n        }), _jsx(VStack, {\n          w: \"4/6\",\n          space: 1,\n          children: _jsx(Text, {\n            fontSize: \"xs\",\n            children: item.content\n          })\n        })]\n      }, \"guide-\" + index);\n    });\n  };\n\n  return _jsx(_Fragment, {\n    children: _jsx(ImageBackground, {\n      source: require(\"../../public/assets/bg-1-100.jpg\"),\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      children: _jsx(_Fragment, {\n        children: data ? _jsx(_Fragment, {\n          children: _jsxs(VStack, {\n            space: 2,\n            alignContent: \"center\",\n            justifyContent: \"center\",\n            style: {\n              width: \"100%\",\n              height: \"100%\"\n            },\n            p: \"5\",\n            children: [_jsx(ScrollView, {\n              children: _jsxs(VStack, {\n                pt: \"5\",\n                children: [_jsx(HStack, {\n                  space: 1,\n                  alignContent: \"center\",\n                  justifyContent: \"center\",\n                  children: data.recyclable == \"yes\" ? _jsxs(_Fragment, {\n                    children: [_jsx(CheckCircleIcon, {\n                      size: \"6\",\n                      mt: \"1\",\n                      color: \"#1FAA8F\",\n                      mr: \"2\"\n                    }), _jsx(Heading, {\n                      fontSize: \"2xl\",\n                      color: \"#1FAA8F\",\n                      bold: true,\n                      children: \"Recyclable\"\n                    })]\n                  }) : _jsxs(_Fragment, {\n                    children: [_jsx(CheckCircleIcon, {\n                      size: \"6\",\n                      mt: \"1\",\n                      color: \"red.500\",\n                      mr: \"2\"\n                    }), _jsx(Text, {\n                      fontSize: \"2xl\",\n                      color: \"red.500\",\n                      children: \"Not Recyclable\"\n                    })]\n                  })\n                }), _jsx(Text, {\n                  mt: \"5\",\n                  textAlign: \"center\",\n                  bold: true,\n                  fontSize: \"md\",\n                  children: data.productName\n                }), _jsx(Text, {\n                  mb: \"5\",\n                  textAlign: \"center\",\n                  children: data.gtin\n                }), _jsxs(Text, {\n                  mb: \"1\",\n                  textAlign: \"center\",\n                  bold: true,\n                  children: [\"Material: \", data.material]\n                }), _jsxs(Text, {\n                  mb: \"5\",\n                  textAlign: \"center\",\n                  bold: true,\n                  children: [\"Category: \", material.category ? material.category : \"-\"]\n                }), _jsx(Box, {\n                  children: data.recyclable == \"yes\" ? _jsxs(Accordion, {\n                    allowMultiple: true,\n                    style: {\n                      borderWidth: 0\n                    },\n                    children: [_jsxs(Accordion.Item, {\n                      children: [_jsxs(Accordion.Summary, {\n                        _expanded: {\n                          backgroundColor: \"transparent\"\n                        },\n                        children: [_jsx(Text, {\n                          children: \"How to recycle this?\"\n                        }), _jsx(Accordion.Icon, {\n                          size: \"4\",\n                          color: \"#1FAA8F\"\n                        })]\n                      }), _jsx(Accordion.Details, {\n                        children: _jsx(Box, {\n                          backgroundColor: \"#F1F1F1\",\n                          p: \"2\",\n                          px: \"3\",\n                          rounded: \"xl\",\n                          children: _jsxs(VStack, {\n                            width: \"100%\",\n                            space: 2,\n                            children: [guide ? _renderGuide() : _jsx(_Fragment, {}), material.guide ? _jsxs(VStack, {\n                              justifyContent: \"flex-start\",\n                              width: \"full\",\n                              backgroundColor: \"#ffef42\",\n                              p: \"3\",\n                              rounded: \"20\",\n                              space: 1,\n                              children: [_jsx(Text, {\n                                fontSize: \"xs\",\n                                bold: true,\n                                children: \"Special Guide\"\n                              }), _jsx(Text, {\n                                fontSize: \"xs\",\n                                children: material.guide\n                              })]\n                            }) : _jsx(_Fragment, {})]\n                          })\n                        })\n                      })]\n                    }), _jsxs(Accordion.Item, {\n                      children: [_jsxs(Accordion.Summary, {\n                        _expanded: {\n                          backgroundColor: \"transparent\"\n                        },\n                        children: [_jsx(Text, {\n                          children: \"What happens if you failed to recycle this item?\"\n                        }), _jsx(Accordion.Icon, {\n                          size: \"4\",\n                          color: \"#1FAA8F\"\n                        })]\n                      }), _jsx(Accordion.Details, {\n                        children: _jsxs(Box, {\n                          backgroundColor: \"#F1F1F1\",\n                          p: \"3\",\n                          rounded: \"xl\",\n                          children: [data.material == \"Steel\" ? _jsx(_Fragment, {}) : _jsx(_Fragment, {}), _jsxs(Text, {\n                            p: \"1\",\n                            children: [data.material, \"\\u2019s biodegradable duration is \", _jsx(Text, {\n                              bold: true,\n                              color: \"red.600\",\n                              children: material.time\n                            }), \". It means that it takes this amount of time to decompose. Failing to recycle it will harm the environment.\"]\n                          })]\n                        })\n                      })]\n                    })]\n                  }) : _jsxs(Accordion, {\n                    allowMultiple: true,\n                    defaultIndex: [2],\n                    style: {\n                      borderWidth: 0\n                    },\n                    children: [_jsxs(Accordion.Item, {\n                      children: [_jsxs(Accordion.Summary, {\n                        _expanded: {\n                          backgroundColor: \"transparent\"\n                        },\n                        children: [_jsx(Text, {\n                          children: \"What happens to non-recyclables?\"\n                        }), _jsx(Accordion.Icon, {\n                          size: \"4\",\n                          color: \"#1FAA8F\"\n                        })]\n                      }), _jsx(Accordion.Details, {\n                        children: _jsx(Box, {\n                          backgroundColor: \"#F1F1F1\",\n                          p: \"3\",\n                          rounded: \"xl\",\n                          children: _jsxs(Text, {\n                            p: \"1\",\n                            children: [\"All non-recyclables usually end up in landfills. It will take \", _jsx(Text, {\n                              bold: true,\n                              color: \"red.600\",\n                              children: \"hundreds or thousands of years\"\n                            }), \" to decompose. As these materials start to degrade, they leak harmful chemicals back into the environment, making their impact on the planet doubly worse.\"]\n                          })\n                        })\n                      })]\n                    }), _jsxs(Accordion.Item, {\n                      children: [_jsxs(Accordion.Summary, {\n                        _expanded: {\n                          backgroundColor: \"transparent\"\n                        },\n                        children: [_jsx(Text, {\n                          children: \"What can I do with non-recyclables?\"\n                        }), _jsx(Accordion.Icon, {\n                          size: \"4\",\n                          color: \"#1FAA8F\"\n                        })]\n                      }), _jsx(Accordion.Details, {\n                        children: _jsx(Box, {\n                          backgroundColor: \"#F1F1F1\",\n                          p: \"3\",\n                          rounded: \"xl\",\n                          children: _jsxs(Text, {\n                            p: \"1\",\n                            children: [\"Clean them up and put them gently into household or public garbage bins. Please be alerted that it\\u2019s important to buy carefully, use and \", _jsx(Text, {\n                              bold: true,\n                              color: \"red.600\",\n                              children: \"reuse\"\n                            }), \", and find ways to \", _jsx(Text, {\n                              bold: true,\n                              color: \"red.600\",\n                              children: \"reduce\"\n                            }), \" waste wherever possible.\"]\n                          })\n                        })\n                      })]\n                    })]\n                  })\n                }), _jsxs(HStack, {\n                  p: \"3\",\n                  mt: \"5\",\n                  space: 3,\n                  justifyContent: \"flex-start\",\n                  alignItems: \"flex-start\",\n                  children: [_jsx(InfoOutlineIcon, {\n                    size: \"xs\",\n                    color: \"yellow.500\"\n                  }), _jsxs(VStack, {\n                    children: [_jsx(Text, {\n                      fontSize: \"xs\",\n                      width: \"xs\",\n                      children: \"Please be informed that this information is only applicable to the content of the product. For the packaging of the product, please follow the sorting guide based on the material.\"\n                    }), _jsx(Pressable, {\n                      onPress: function onPress() {\n                        return Navigation.navigate('GeneralWaste');\n                      },\n                      children: _jsx(Text, {\n                        fontSize: \"xs\",\n                        color: \"#1FAA8F\",\n                        italic: true,\n                        children: \"See here\"\n                      })\n                    })]\n                  })]\n                })]\n              })\n            }), data.recyclable == \"yes\" ? _jsx(Button, {\n              block: true,\n              backgroundColor: \"#1FAA8F\",\n              style: {\n                borderRadius: 20,\n                borderColor: \"#1FAA8F\",\n                borderWidth: 2\n              },\n              onPress: function onPress() {\n                return Navigation.navigate('Explore', {\n                  category: material.category\n                });\n              },\n              children: _jsx(Text, {\n                bold: true,\n                color: \"white\",\n                children: \"Search Collector\"\n              })\n            }) : _jsx(_Fragment, {}), _jsx(Button, {\n              bordered: true,\n              block: true,\n              style: {\n                borderRadius: 20,\n                backgroundColor: \"transparent\",\n                borderColor: \"#1FAA8F\",\n                borderWidth: 2\n              },\n              onPress: function onPress() {\n                return Navigation.pop();\n              },\n              children: _jsx(Text, {\n                bold: true,\n                children: \"Close\"\n              })\n            })]\n          })\n        }) : _jsxs(VStack, {\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          w: \"full\",\n          h: \"full\",\n          space: 5,\n          p: \"5\",\n          children: [_jsx(Image, {\n            source: require(\"../../public/assets/not_found.png\"),\n            alt: \"Image not found\",\n            w: \"200\",\n            h: \"150\"\n          }), _jsx(Heading, {\n            children: \"Product does not exist.\"\n          }), _jsxs(Text, {\n            bold: true,\n            children: [\"GTIN: \", productgtin]\n          }), _jsx(Text, {\n            textAlign: \"center\",\n            children: \"But you can do us a favor!\"\n          }), _jsx(Text, {\n            textAlign: \"center\",\n            mt: \"-3\",\n            children: \"Submit the product information to us so the next person searching for this can have the information.\"\n          }), _jsx(Button, {\n            w: \"full\",\n            backgroundColor: \"#1FAA8F\",\n            style: {\n              borderRadius: 20,\n              borderColor: \"#1FAA8F\",\n              borderWidth: 2\n            },\n            onPress: function onPress() {\n              return Navigation.navigate('Submit Product', {\n                productgtin: productgtin\n              });\n            },\n            children: _jsx(Text, {\n              bold: true,\n              color: \"white\",\n              children: \"Submit product\"\n            })\n          })]\n        })\n      })\n    })\n  });\n};\nexport default (function () {\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(Center, {\n      flex: 1,\n      children: _jsx(ProductDetail, {})\n    })\n  });\n});","map":{"version":3,"sources":["/Users/weiherr/Desktop/FYP/MyRecycle/mobile-app/screens/product/ProductDetailScreen.js"],"names":["React","useState","useEffect","useContext","NativeBaseProvider","Box","Button","ScrollView","Stack","Center","Accordion","Text","Divider","List","Image","PresenceTransition","Pressable","Spacer","HStack","VStack","CheckCircleIcon","Heading","Icon","InfoOutlineIcon","FlatList","SectionList","Spinner","useNavigation","useRoute","LoadingContext","ProductDetail","route","navigation","Navigation","productgtin","JSON","stringify","params","gtin","replace","setIsLoading","data","setData","time","guide","material","setMaterial","setGuide","ac","AbortController","fetch","method","headers","then","response","json","results","catch","err","console","log","abort","index","length","_renderGuide","map","item","id","require","content","width","height","recyclable","productName","category","borderWidth","backgroundColor","navigate","borderRadius","borderColor","pop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,kBAAT,EAA6BC,GAA7B,EAAkCC,MAAlC,EAA0CC,UAA1C,EAAsDC,KAAtD,EAA6DC,MAA7D,EAAqEC,SAArE,EAAgFC,IAAhF,EAAsFC,OAAtF,EAA+FC,IAA/F,EAAqGC,KAArG,EAA4GC,kBAA5G,EAAgIC,SAAhI,EAA2IC,MAA3I,EAAmJC,MAAnJ,EAA2JC,MAA3J,EAAmKC,eAAnK,EAAoLC,OAApL,EAA6LC,IAA7L,EAAmMC,eAAnM,EAAoNC,QAApN,EAA8NC,WAA9N,EAA2OC,OAA3O,QAA0P,aAA1P;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,0BAAxC;;;AAIA,SAASC,cAAT;;;;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAA2B;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AAEtD,MAAMC,UAAU,GAAGN,aAAa,EAAhC;AAEA,MAAMO,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAeR,QAAQ,GAAGS,MAAX,CAAkBC,IAAjC,EAAuCC,OAAvC,CAA+C,GAA/C,EAAmD,EAAnD,EAAuDA,OAAvD,CAA+D,GAA/D,EAAmE,EAAnE,CAApB;;AAEA,oBAAyBpC,UAAU,CAAC0B,cAAD,CAAnC;AAAA,MAAQW,YAAR,eAAQA,YAAR;;AAEA,kBAAwBvC,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOwC,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAAgCzC,QAAQ,CAAC;AACvC0C,IAAAA,IAAI,EAAC,EADkC;AAEvCC,IAAAA,KAAK,EAAC;AAFiC,GAAD,CAAxC;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,WAAjB;;AAIA,mBAA0B7C,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAO2C,KAAP;AAAA,MAAcG,QAAd;;AAEF7C,EAAAA,SAAS,CAAC,YAAM;AAEZsC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,QAAMQ,EAAE,GAAG,IAAIC,eAAJ,EAAX;AAEAC,IAAAA,KAAK,8CAAsBhB,WAAtB,EAAqC;AACxCiB,MAAAA,MAAM,EAAE,KADgC;AAExCC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAF+B,KAArC,CAAL,CAMGC,IANH,CAMQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KANhB,EAOGF,IAPH,CAOQ,UAAAG,OAAO,EAAI;AACfd,MAAAA,OAAO,CAACc,OAAD,CAAP;AACAhB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAVH,EAWGiB,KAXH,CAWS,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAlB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAdH;AAeE,WAAO;AAAA,aAAMQ,EAAE,CAACa,KAAH,EAAN;AAAA,KAAP;AACH,GAtBM,EAsBJ,EAtBI,CAAT;AAwBE3D,EAAAA,SAAS,CAAC,YAAM;AAEdsC,IAAAA,YAAY,CAAC,IAAD,CAAZ;AAEA,QAAMQ,EAAE,GAAG,IAAIC,eAAJ,EAAX;AAEAC,IAAAA,KAAK,6CAAuB;AAC1BC,MAAAA,MAAM,EAAE,KADkB;AAE1BC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFiB,KAAvB,CAAL,CAMGC,IANH,CAMQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KANhB,EAOGF,IAPH,CAOQ,UAAAG,OAAO,EAAI;AACf,WAAK,IAAIM,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGN,OAAO,CAACO,MAApC,EAA4CD,KAAK,EAAjD,EAAqD;AACnD,YAAIrB,IAAI,CAACI,QAAL,IAAiBW,OAAO,CAACM,KAAD,CAAP,CAAejB,QAApC,EAA8C;AAC5CC,UAAAA,WAAW,CAACU,OAAO,CAACM,KAAD,CAAR,CAAX;AACD;AACF;;AACDtB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAdH,EAeGiB,KAfH,CAeS,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAlB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAlBH;AAmBE,WAAO;AAAA,aAAMQ,EAAE,CAACa,KAAH,EAAN;AAAA,KAAP;AACH,GA1BQ,EA0BN,CAACpB,IAAD,CA1BM,CAAT;AA6BAvC,EAAAA,SAAS,CAAC,YAAM;AACdgD,IAAAA,KAAK,CAAC,gCAAU,OAAX,EAAoB;AACvBC,MAAAA,MAAM,EAAE,KADe;AAEvBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFc,KAApB,CAAL,CAMGC,IANH,CAMQ,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KANhB,EAOGF,IAPH,CAOQ,UAAAG,OAAO,EAAI;AACfT,MAAAA,QAAQ,CAACS,OAAD,CAAR;AACD,KATH,EAUGC,KAVH,CAUS,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KAZH;AAaD,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAMM,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,WAAOpB,KAAK,CAACqB,GAAN,CAAU,UAACC,IAAD,EAAOJ,KAAP,EAAiB;AAChC,aACE,MAAC,MAAD;AAAQ,QAAA,UAAU,EAAC,QAAnB;AAA4B,QAAA,cAAc,EAAC,YAA3C;AAAwD,QAAA,KAAK,EAAC,MAA9D;AAAqE,QAAA,eAAe,EAAC,OAArF;AAA6F,QAAA,CAAC,EAAC,GAA/F;AAAmG,QAAA,OAAO,EAAC,IAA3G;AAAgH,QAAA,KAAK,EAAE,CAAvH;AAAA,mBACE,MAAC,GAAD;AAAK,UAAA,eAAe,EAAC,UAArB;AAAgC,UAAA,YAAY,EAAC,KAA7C;AAAmD,UAAA,IAAI,EAAC,IAAxD;AAA6D,UAAA,cAAc,EAAC,QAA5E;AAAqF,UAAA,UAAU,EAAC,QAAhG;AAAA,qBACGI,IAAI,CAACC,EAAL,KAAY,CAAZ,IACC,KAAC,KAAD;AAAO,YAAA,MAAM,EAAEC,OAAO,gDAAtB;AAAwE,YAAA,GAAG,EAAC,gBAA5E;AAA6F,YAAA,IAAI,EAAC;AAAlG,YAFJ,EAIGF,IAAI,CAACC,EAAL,KAAY,CAAZ,IACC,KAAC,KAAD;AAAO,YAAA,MAAM,EAAEC,OAAO,gDAAtB;AAAwE,YAAA,GAAG,EAAC,gBAA5E;AAA6F,YAAA,IAAI,EAAC;AAAlG,YALJ,EAOGF,IAAI,CAACC,EAAL,KAAY,CAAZ,IACC,KAAC,KAAD;AAAO,YAAA,MAAM,EAAEC,OAAO,gDAAtB;AAAwE,YAAA,GAAG,EAAC,gBAA5E;AAA6F,YAAA,IAAI,EAAC;AAAlG,YARJ,EAUGF,IAAI,CAACC,EAAL,KAAY,CAAZ,IACC,KAAC,KAAD;AAAO,YAAA,MAAM,EAAEC,OAAO,gDAAtB;AAAwE,YAAA,GAAG,EAAC,gBAA5E;AAA6F,YAAA,IAAI,EAAC;AAAlG,YAXJ,EAaGF,IAAI,CAACC,EAAL,KAAY,CAAZ,IACC,KAAC,KAAD;AAAO,YAAA,MAAM,EAAEC,OAAO,gDAAtB;AAAwE,YAAA,GAAG,EAAC,gBAA5E;AAA6F,YAAA,IAAI,EAAC;AAAlG,YAdJ;AAAA,UADF,EAkBE,KAAC,MAAD;AAAQ,UAAA,CAAC,EAAC,KAAV;AAAgB,UAAA,KAAK,EAAE,CAAvB;AAAA,oBACE,KAAC,IAAD;AAAM,YAAA,QAAQ,EAAC,IAAf;AAAA,sBAAqBF,IAAI,CAACG;AAA1B;AADF,UAlBF;AAAA,oBAAwIP,KAAxI,CADF;AAwBD,KAzBM,CAAP;AA0BD,GA3BD;;AA6BA,SACE;AAAA,cACA,KAAC,eAAD;AAAiB,MAAA,MAAM,EAAEM,OAAO,oCAAhC;AAAsE,MAAA,KAAK,EAAE;AAACE,QAAAA,KAAK,EAAC,MAAP;AAAeC,QAAAA,MAAM,EAAC;AAAtB,OAA7E;AAAA,gBACA;AAAA,kBACC9B,IAAI,GACL;AAAA,oBACQ,MAAC,MAAD;AAAQ,YAAA,KAAK,EAAE,CAAf;AAAkB,YAAA,YAAY,EAAC,QAA/B;AAAwC,YAAA,cAAc,EAAC,QAAvD;AAAgE,YAAA,KAAK,EAAE;AAAC6B,cAAAA,KAAK,EAAC,MAAP;AAAeC,cAAAA,MAAM,EAAC;AAAtB,aAAvE;AAAsG,YAAA,CAAC,EAAC,GAAxG;AAAA,uBACE,KAAC,UAAD;AAAA,wBACE,MAAC,MAAD;AAAQ,gBAAA,EAAE,EAAC,GAAX;AAAA,2BACE,KAAC,MAAD;AAAQ,kBAAA,KAAK,EAAE,CAAf;AAAkB,kBAAA,YAAY,EAAC,QAA/B;AAAwC,kBAAA,cAAc,EAAC,QAAvD;AAAA,4BACC9B,IAAI,CAAC+B,UAAL,IAAmB,KAAnB,GACD;AAAA,+BACE,KAAC,eAAD;AAAiB,sBAAA,IAAI,EAAC,GAAtB;AAA0B,sBAAA,EAAE,EAAC,GAA7B;AAAiC,sBAAA,KAAK,EAAC,SAAvC;AAAiD,sBAAA,EAAE,EAAC;AAApD,sBADF,EAEE,KAAC,OAAD;AAAS,sBAAA,QAAQ,EAAC,KAAlB;AAAwB,sBAAA,KAAK,EAAC,SAA9B;AAAwC,sBAAA,IAAI,MAA5C;AAAA;AAAA,sBAFF;AAAA,oBADC,GAMD;AAAA,+BACE,KAAC,eAAD;AAAiB,sBAAA,IAAI,EAAC,GAAtB;AAA0B,sBAAA,EAAE,EAAC,GAA7B;AAAiC,sBAAA,KAAK,EAAC,SAAvC;AAAiD,sBAAA,EAAE,EAAC;AAApD,sBADF,EAEE,KAAC,IAAD;AAAM,sBAAA,QAAQ,EAAC,KAAf;AAAqB,sBAAA,KAAK,EAAC,SAA3B;AAAA;AAAA,sBAFF;AAAA;AAPA,kBADF,EAeE,KAAC,IAAD;AAAM,kBAAA,EAAE,EAAC,GAAT;AAAa,kBAAA,SAAS,EAAC,QAAvB;AAAgC,kBAAA,IAAI,MAApC;AAAqC,kBAAA,QAAQ,EAAC,IAA9C;AAAA,4BAAoD/B,IAAI,CAACgC;AAAzD,kBAfF,EAgBE,KAAC,IAAD;AAAM,kBAAA,EAAE,EAAC,GAAT;AAAa,kBAAA,SAAS,EAAC,QAAvB;AAAA,4BAAiChC,IAAI,CAACH;AAAtC,kBAhBF,EAiBE,MAAC,IAAD;AAAM,kBAAA,EAAE,EAAC,GAAT;AAAa,kBAAA,SAAS,EAAC,QAAvB;AAAgC,kBAAA,IAAI,MAApC;AAAA,2CAAgDG,IAAI,CAACI,QAArD;AAAA,kBAjBF,EAkBE,MAAC,IAAD;AAAM,kBAAA,EAAE,EAAC,GAAT;AAAa,kBAAA,SAAS,EAAC,QAAvB;AAAgC,kBAAA,IAAI,MAApC;AAAA,2CAAgDA,QAAQ,CAAC6B,QAAT,GAAoB7B,QAAQ,CAAC6B,QAA7B,GAAwC,GAAxF;AAAA,kBAlBF,EAmBE,KAAC,GAAD;AAAA,4BACGjC,IAAI,CAAC+B,UAAL,IAAmB,KAAnB,GACD,MAAC,SAAD;AAAW,oBAAA,aAAa,MAAxB;AAAyB,oBAAA,KAAK,EAAE;AAACG,sBAAAA,WAAW,EAAC;AAAb,qBAAhC;AAAA,+BACE,MAAC,SAAD,CAAW,IAAX;AAAA,iCACE,MAAC,SAAD,CAAW,OAAX;AAAmB,wBAAA,SAAS,EAAE;AAACC,0BAAAA,eAAe,EAAC;AAAjB,yBAA9B;AAAA,mCACE,KAAC,IAAD;AAAA;AAAA,0BADF,EAEE,KAAC,SAAD,CAAW,IAAX;AAAgB,0BAAA,IAAI,EAAC,GAArB;AAAyB,0BAAA,KAAK,EAAC;AAA/B,0BAFF;AAAA,wBADF,EAKE,KAAC,SAAD,CAAW,OAAX;AAAA,kCACA,KAAC,GAAD;AAAK,0BAAA,eAAe,EAAC,SAArB;AAA+B,0BAAA,CAAC,EAAC,GAAjC;AAAqC,0BAAA,EAAE,EAAC,GAAxC;AAA4C,0BAAA,OAAO,EAAC,IAApD;AAAA,oCACA,MAAC,MAAD;AAAQ,4BAAA,KAAK,EAAC,MAAd;AAAqB,4BAAA,KAAK,EAAE,CAA5B;AAAA,uCACGhC,KAAK,GAAEoB,YAAY,EAAd,GAAmB,mBAD3B,EAEGnB,QAAQ,CAACD,KAAT,GACD,MAAC,MAAD;AAAQ,8BAAA,cAAc,EAAC,YAAvB;AAAoC,8BAAA,KAAK,EAAC,MAA1C;AAAiD,8BAAA,eAAe,EAAC,SAAjE;AAA2E,8BAAA,CAAC,EAAC,GAA7E;AAAiF,8BAAA,OAAO,EAAC,IAAzF;AAA8F,8BAAA,KAAK,EAAE,CAArG;AAAA,yCACE,KAAC,IAAD;AAAM,gCAAA,QAAQ,EAAC,IAAf;AAAoB,gCAAA,IAAI,MAAxB;AAAA;AAAA,gCADF,EAEE,KAAC,IAAD;AAAM,gCAAA,QAAQ,EAAC,IAAf;AAAA,0CAAqBC,QAAQ,CAACD;AAA9B,gCAFF;AAAA,8BADC,GAKC,mBAPJ;AAAA;AADA;AADA,wBALF;AAAA,sBADF,EAoBE,MAAC,SAAD,CAAW,IAAX;AAAA,iCACE,MAAC,SAAD,CAAW,OAAX;AAAmB,wBAAA,SAAS,EAAE;AAC1BgC,0BAAAA,eAAe,EAAC;AADU,yBAA9B;AAAA,mCAGE,KAAC,IAAD;AAAA;AAAA,0BAHF,EAIE,KAAC,SAAD,CAAW,IAAX;AAAgB,0BAAA,IAAI,EAAC,GAArB;AAAyB,0BAAA,KAAK,EAAC;AAA/B,0BAJF;AAAA,wBADF,EAOE,KAAC,SAAD,CAAW,OAAX;AAAA,kCACE,MAAC,GAAD;AAAK,0BAAA,eAAe,EAAC,SAArB;AAA+B,0BAAA,CAAC,EAAC,GAAjC;AAAqC,0BAAA,OAAO,EAAC,IAA7C;AAAA,qCACCnC,IAAI,CAACI,QAAL,IAAiB,OAAjB,GAA0B,mBAA1B,GAAkC,mBADnC,EAEE,MAAC,IAAD;AAAM,4BAAA,CAAC,EAAC,GAAR;AAAA,uCACCJ,IAAI,CAACI,QADN,wCAC4C,KAAC,IAAD;AAAM,8BAAA,IAAI,MAAV;AAAW,8BAAA,KAAK,EAAC,SAAjB;AAAA,wCAA4BA,QAAQ,CAACF;AAArC,8BAD5C;AAAA,4BAFF;AAAA;AADF,wBAPF;AAAA,sBApBF;AAAA,oBADC,GAyCD,MAAC,SAAD;AAAW,oBAAA,aAAa,MAAxB;AAAyB,oBAAA,YAAY,EAAE,CAAC,CAAD,CAAvC;AAA4C,oBAAA,KAAK,EAAE;AAACgC,sBAAAA,WAAW,EAAC;AAAb,qBAAnD;AAAA,+BACE,MAAC,SAAD,CAAW,IAAX;AAAA,iCACE,MAAC,SAAD,CAAW,OAAX;AAAmB,wBAAA,SAAS,EAAE;AAC5BC,0BAAAA,eAAe,EAAC;AADY,yBAA9B;AAAA,mCAGE,KAAC,IAAD;AAAA;AAAA,0BAHF,EAIE,KAAC,SAAD,CAAW,IAAX;AAAgB,0BAAA,IAAI,EAAC,GAArB;AAAyB,0BAAA,KAAK,EAAC;AAA/B,0BAJF;AAAA,wBADF,EAOE,KAAC,SAAD,CAAW,OAAX;AAAA,kCACA,KAAC,GAAD;AAAK,0BAAA,eAAe,EAAC,SAArB;AAA+B,0BAAA,CAAC,EAAC,GAAjC;AAAqC,0BAAA,OAAO,EAAC,IAA7C;AAAA,oCACE,MAAC,IAAD;AAAM,4BAAA,CAAC,EAAC,GAAR;AAAA,yGACgE,KAAC,IAAD;AAAM,8BAAA,IAAI,MAAV;AAAW,8BAAA,KAAK,EAAC,SAAjB;AAAA;AAAA,8BADhE;AAAA;AADF;AADA,wBAPF;AAAA,sBADF,EAgBE,MAAC,SAAD,CAAW,IAAX;AAAA,iCACE,MAAC,SAAD,CAAW,OAAX;AAAmB,wBAAA,SAAS,EAAE;AAC5BA,0BAAAA,eAAe,EAAC;AADY,yBAA9B;AAAA,mCAGE,KAAC,IAAD;AAAA;AAAA,0BAHF,EAIE,KAAC,SAAD,CAAW,IAAX;AAAgB,0BAAA,IAAI,EAAC,GAArB;AAAyB,0BAAA,KAAK,EAAC;AAA/B,0BAJF;AAAA,wBADF,EAOE,KAAC,SAAD,CAAW,OAAX;AAAA,kCACA,KAAC,GAAD;AAAK,0BAAA,eAAe,EAAC,SAArB;AAA+B,0BAAA,CAAC,EAAC,GAAjC;AAAqC,0BAAA,OAAO,EAAC,IAA7C;AAAA,oCACE,MAAC,IAAD;AAAM,4BAAA,CAAC,EAAC,GAAR;AAAA,yLACyI,KAAC,IAAD;AAAM,8BAAA,IAAI,MAAV;AAAW,8BAAA,KAAK,EAAC,SAAjB;AAAA;AAAA,8BADzI,yBACmM,KAAC,IAAD;AAAM,8BAAA,IAAI,MAAV;AAAW,8BAAA,KAAK,EAAC,SAAjB;AAAA;AAAA,8BADnM;AAAA;AADF;AADA,wBAPF;AAAA,sBAhBF;AAAA;AA1CF,kBAnBF,EAoGA,MAAC,MAAD;AAAQ,kBAAA,CAAC,EAAC,GAAV;AAAc,kBAAA,EAAE,EAAC,GAAjB;AAAqB,kBAAA,KAAK,EAAE,CAA5B;AAA+B,kBAAA,cAAc,EAAC,YAA9C;AAA2D,kBAAA,UAAU,EAAC,YAAtE;AAAA,6BACE,KAAC,eAAD;AAAiB,oBAAA,IAAI,EAAC,IAAtB;AAA2B,oBAAA,KAAK,EAAC;AAAjC,oBADF,EAEI,MAAC,MAAD;AAAA,+BACE,KAAC,IAAD;AAAM,sBAAA,QAAQ,EAAC,IAAf;AAAoB,sBAAA,KAAK,EAAC,IAA1B;AAAA;AAAA,sBADF,EAIE,KAAC,SAAD;AAAW,sBAAA,OAAO,EAAE;AAAA,+BAAI3C,UAAU,CAAC4C,QAAX,CAAoB,cAApB,CAAJ;AAAA,uBAApB;AAAA,gCACE,KAAC,IAAD;AAAM,wBAAA,QAAQ,EAAC,IAAf;AAAoB,wBAAA,KAAK,EAAC,SAA1B;AAAoC,wBAAA,MAAM,EAAE,IAA5C;AAAA;AAAA;AADF,sBAJF;AAAA,oBAFJ;AAAA,kBApGA;AAAA;AADF,cADF,EAmHGpC,IAAI,CAAC+B,UAAL,IAAmB,KAAnB,GACC,KAAC,MAAD;AAAQ,cAAA,KAAK,MAAb;AAAc,cAAA,eAAe,EAAC,SAA9B;AAAwC,cAAA,KAAK,EAAE;AAACM,gBAAAA,YAAY,EAAC,EAAd;AAAkBC,gBAAAA,WAAW,EAAC,SAA9B;AAAyCJ,gBAAAA,WAAW,EAAC;AAArD,eAA/C;AAAwG,cAAA,OAAO,EAAE;AAAA,uBAAI1C,UAAU,CAAC4C,QAAX,CAAoB,SAApB,EAA+B;AAACH,kBAAAA,QAAQ,EAAC7B,QAAQ,CAAC6B;AAAnB,iBAA/B,CAAJ;AAAA,eAAjH;AAAA,wBACE,KAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AADF,cADD,GAIE,mBAvHL,EAwHE,KAAC,MAAD;AAAQ,cAAA,QAAQ,MAAhB;AAAiB,cAAA,KAAK,MAAtB;AAAuB,cAAA,KAAK,EAAE;AAACI,gBAAAA,YAAY,EAAC,EAAd;AAAkBF,gBAAAA,eAAe,EAAC,aAAlC;AAAiDG,gBAAAA,WAAW,EAAC,SAA7D;AAAwEJ,gBAAAA,WAAW,EAAC;AAApF,eAA9B;AAAsH,cAAA,OAAO,EAAE;AAAA,uBAAM1C,UAAU,CAAC+C,GAAX,EAAN;AAAA,eAA/H;AAAA,wBACE,KAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAA;AAAA;AADF,cAxHF;AAAA;AADR,UADK,GA+HL,MAAC,MAAD;AAAQ,UAAA,cAAc,EAAC,QAAvB;AAAgC,UAAA,UAAU,EAAC,QAA3C;AAAoD,UAAA,CAAC,EAAC,MAAtD;AAA6D,UAAA,CAAC,EAAC,MAA/D;AAAsE,UAAA,KAAK,EAAE,CAA7E;AAAgF,UAAA,CAAC,EAAC,GAAlF;AAAA,qBACE,KAAC,KAAD;AAAO,YAAA,MAAM,EAAEZ,OAAO,qCAAtB;AAA6D,YAAA,GAAG,EAAC,iBAAjE;AAAmF,YAAA,CAAC,EAAC,KAArF;AAA2F,YAAA,CAAC,EAAC;AAA7F,YADF,EAEE,KAAC,OAAD;AAAA;AAAA,YAFF,EAGE,MAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,iCAAkBlC,WAAlB;AAAA,YAHF,EAIE,KAAC,IAAD;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAA;AAAA,YAJF,EAKE,KAAC,IAAD;AAAM,YAAA,SAAS,EAAC,QAAhB;AAAyB,YAAA,EAAE,EAAC,IAA5B;AAAA;AAAA,YALF,EAME,KAAC,MAAD;AAAQ,YAAA,CAAC,EAAC,MAAV;AAAiB,YAAA,eAAe,EAAC,SAAjC;AAA2C,YAAA,KAAK,EAAE;AAAC4C,cAAAA,YAAY,EAAC,EAAd;AAAkBC,cAAAA,WAAW,EAAC,SAA9B;AAAyCJ,cAAAA,WAAW,EAAC;AAArD,aAAlD;AAA2G,YAAA,OAAO,EAAE;AAAA,qBAAI1C,UAAU,CAAC4C,QAAX,CAAoB,gBAApB,EAAsC;AAAC3C,gBAAAA,WAAW,EAAXA;AAAD,eAAtC,CAAJ;AAAA,aAApH;AAAA,sBACE,KAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AADF,YANF;AAAA;AAhIA;AADA;AADA,IADF;AAiJD,CAlQM;AAqQP,gBAAe,YAAM;AACjB,SACE,KAAC,kBAAD;AAAA,cACE,KAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,CAAd;AAAA,gBACE,KAAC,aAAD;AADF;AADF,IADF;AAOH,CARD","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { NativeBaseProvider, Box, Button, ScrollView, Stack, Center, Accordion, Text, Divider, List, Image, PresenceTransition, Pressable, Spacer, HStack, VStack, CheckCircleIcon, Heading, Icon, InfoOutlineIcon, FlatList, SectionList, Spinner } from 'native-base';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { API_URL } from \"@env\";\n\nimport { ActivityIndicator, ImageBackground } from \"react-native\";\nimport { LoadingContext } from \"../../context/context\";\n\nexport const ProductDetail = ({ route, navigation }) => {\n  \n  const Navigation = useNavigation(); \n\n  const productgtin = JSON.stringify(useRoute().params.gtin).replace('\"','').replace('\"','');\n\n  const { setIsLoading } = useContext(LoadingContext);\n\n  const [data, setData] = useState([]);\n  const [material, setMaterial] = useState({\n    time:\"\",\n    guide:\"\"\n  });\n  const [guide, setGuide] = useState([]);\n\nuseEffect(() => {\n\n    setIsLoading(true);\n\n    const ac = new AbortController();\n\n    fetch(`${API_URL}product/${productgtin}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(response => response.json())\n      .then(results => {\n        setData(results);\n        setIsLoading(false);\n      })\n      .catch(err => {\n        console.log(err);\n        setIsLoading(false);\n      });\n      return () => ac.abort();\n  }, []);\n\n  useEffect(() => {\n\n    setIsLoading(true);\n\n    const ac = new AbortController();\n  \n    fetch(`${API_URL}material`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(response => response.json())\n      .then(results => {\n        for (let index = 0; index < results.length; index++) {\n          if (data.material == results[index].material) {\n            setMaterial(results[index]);\n          }\n        }\n        setIsLoading(false);\n      })\n      .catch(err => {\n        console.log(err);\n        setIsLoading(false);\n      });\n      return () => ac.abort();\n  }, [data]);\n\n  //load recycle guide\n  useEffect(() => {\n    fetch(API_URL + 'guide', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(response => response.json())\n      .then(results => {\n        setGuide(results);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  }, []);  \n\n  const _renderGuide = () => {\n    return guide.map((item, index) => {\n      return (\n        <HStack alignItems=\"center\" justifyContent=\"flex-start\" width=\"full\" backgroundColor=\"white\" p=\"2\" rounded=\"20\" space={4} key={`guide-${index}`}>\n          <Box backgroundColor=\"gray.100\" borderRadius=\"100\" size=\"16\" justifyContent=\"center\" alignItems=\"center\">\n            {item.id === 1 && \n              <Image source={require(\"../../public/assets/recycle-steps/step_1.png\")} alt=\"action-picture\" size=\"16\"/>\n            }\n            {item.id === 2 && \n              <Image source={require(\"../../public/assets/recycle-steps/step_2.png\")} alt=\"action-picture\" size=\"16\"/>\n            }\n            {item.id === 3 && \n              <Image source={require(\"../../public/assets/recycle-steps/step_3.png\")} alt=\"action-picture\" size=\"16\"/>\n            }\n            {item.id === 4 && \n              <Image source={require(\"../../public/assets/recycle-steps/step_4.png\")} alt=\"action-picture\" size=\"16\"/>\n            }\n            {item.id === 5 && \n              <Image source={require(\"../../public/assets/recycle-steps/step_5.png\")} alt=\"action-picture\" size=\"16\"/>\n            }\n          </Box>\n          <VStack w=\"4/6\" space={1}>\n            <Text fontSize=\"xs\">{item.content}</Text>  \n          </VStack>\n        </HStack>\n      )\n    })\n  }\n  \n  return (\n    <>\n    <ImageBackground source={require(\"../../public/assets/bg-1-100.jpg\")} style={{width:\"100%\", height:\"100%\"}}>\n    <>\n    {data ? (\n    <>\n            <VStack space={2} alignContent=\"center\" justifyContent=\"center\" style={{width:\"100%\", height:\"100%\"}} p=\"5\">\n              <ScrollView >\n                <VStack pt=\"5\" >\n                  <HStack space={1} alignContent=\"center\" justifyContent=\"center\">\n                  {data.recyclable == \"yes\" ? (\n                  <>\n                    <CheckCircleIcon size=\"6\" mt=\"1\" color=\"#1FAA8F\" mr=\"2\"/>  \n                    <Heading fontSize=\"2xl\" color=\"#1FAA8F\" bold>Recyclable</Heading>\n                  </>\n                  ) : (\n                  <>\n                    <CheckCircleIcon size=\"6\" mt=\"1\" color=\"red.500\" mr=\"2\"/>  \n                    <Text fontSize=\"2xl\" color=\"red.500\">Not Recyclable</Text>\n                  </>\n                  )}\n\n                  </HStack>  \n                  <Text mt=\"5\" textAlign=\"center\" bold fontSize=\"md\">{data.productName}</Text>\n                  <Text mb=\"5\" textAlign=\"center\">{data.gtin}</Text>\n                  <Text mb=\"1\" textAlign=\"center\" bold>Material: {data.material}</Text>\n                  <Text mb=\"5\" textAlign=\"center\" bold>Category: {material.category ? material.category : \"-\"}</Text>\n                  <Box>\n                    {data.recyclable == \"yes\" ?                  \n                    <Accordion allowMultiple style={{borderWidth:0}}>                    \n                      <Accordion.Item>\n                        <Accordion.Summary _expanded={{backgroundColor:\"transparent\"}}>\n                          <Text>How to recycle this?</Text>\n                          <Accordion.Icon size=\"4\" color=\"#1FAA8F\"/>\n                        </Accordion.Summary>\n                        <Accordion.Details>\n                        <Box backgroundColor=\"#F1F1F1\" p=\"2\" px=\"3\" rounded=\"xl\"> \n                        <VStack width=\"100%\" space={2}>\n                          {guide? _renderGuide() : <></>}\n                          {material.guide ? \n                          <VStack justifyContent=\"flex-start\" width=\"full\" backgroundColor=\"#ffef42\" p=\"3\" rounded=\"20\" space={1}>\n                            <Text fontSize=\"xs\" bold>Special Guide</Text> \n                            <Text fontSize=\"xs\">{material.guide}</Text> \n                          </VStack>\n                          : <></>}\n                        </VStack>\n                        </Box>\n                        </Accordion.Details>\n                      </Accordion.Item>\n                      <Accordion.Item>\n                        <Accordion.Summary _expanded={{\n                            backgroundColor:\"transparent\"\n                          }}>\n                          <Text>What happens if you failed to recycle this item?</Text>\n                          <Accordion.Icon size=\"4\" color=\"#1FAA8F\"/>\n                        </Accordion.Summary>\n                        <Accordion.Details>\n                          <Box backgroundColor=\"#F1F1F1\" p=\"3\" rounded=\"xl\"> \n                          {data.material == \"Steel\"? <></> : <></>}\n                            <Text p=\"1\">\n                            {data.material}’s biodegradable duration is <Text bold color=\"red.600\">{material.time}</Text>. It means that it takes this amount of time to decompose. Failing to recycle it will harm the environment.  \n                            </Text>\n                          </Box>\n                        </Accordion.Details>\n                      </Accordion.Item>\n                    </Accordion>\n\n                    :\n \n                    <Accordion allowMultiple defaultIndex={[2]} style={{borderWidth:0}}>       \n                      <Accordion.Item>\n                        <Accordion.Summary _expanded={{\n                          backgroundColor:\"transparent\"\n                        }}>\n                          <Text>What happens to non-recyclables?</Text>\n                          <Accordion.Icon size=\"4\" color=\"#1FAA8F\"/>\n                        </Accordion.Summary>\n                        <Accordion.Details>\n                        <Box backgroundColor=\"#F1F1F1\" p=\"3\" rounded=\"xl\"> \n                          <Text p=\"1\">\n                            All non-recyclables usually end up in landfills. It will take <Text bold color=\"red.600\">hundreds or thousands of years</Text> to decompose. As these materials start to degrade, they leak harmful chemicals back into the environment, making their impact on the planet doubly worse.\n                          </Text>\n                        </Box>\n                        </Accordion.Details>\n                      </Accordion.Item>             \n                      <Accordion.Item>\n                        <Accordion.Summary _expanded={{\n                          backgroundColor:\"transparent\"\n                        }}>\n                          <Text>What can I do with non-recyclables?</Text>\n                          <Accordion.Icon size=\"4\" color=\"#1FAA8F\"/>\n                        </Accordion.Summary>\n                        <Accordion.Details>\n                        <Box backgroundColor=\"#F1F1F1\" p=\"3\" rounded=\"xl\"> \n                          <Text p=\"1\">\n                          Clean them up and put them gently into household or public garbage bins. Please be alerted that it’s important to buy carefully, use and <Text bold color=\"red.600\">reuse</Text>, and find ways to <Text bold color=\"red.600\">reduce</Text> waste wherever possible.\n                          </Text>\n                        </Box>\n                        </Accordion.Details>\n                      </Accordion.Item>\n                    </Accordion>\n                    \n                    }\n\n\n\n\n                </Box>\n                <HStack p=\"3\" mt=\"5\" space={3} justifyContent=\"flex-start\" alignItems=\"flex-start\">\n                  <InfoOutlineIcon size=\"xs\" color=\"yellow.500\"/>\n                    <VStack>\n                      <Text fontSize=\"xs\" width=\"xs\">\n                      Please be informed that this information is only applicable to the content of the product. For the packaging of the product, please follow the sorting guide based on the material.\n                      </Text>\n                      <Pressable onPress={()=>Navigation.navigate('GeneralWaste')}>\n                        <Text fontSize=\"xs\" color=\"#1FAA8F\" italic={true}>See here</Text>\n                      </Pressable>\n                    </VStack>\n                </HStack>\n                </VStack>\n              </ScrollView>\n              {data.recyclable == \"yes\" ? \n                <Button block backgroundColor=\"#1FAA8F\" style={{borderRadius:20, borderColor:\"#1FAA8F\", borderWidth:2}} onPress={()=>Navigation.navigate('Explore', {category:material.category})}>\n                  <Text bold color=\"white\">Search Collector</Text>\n                </Button>\n               : <></>}\n              <Button bordered block style={{borderRadius:20, backgroundColor:\"transparent\", borderColor:\"#1FAA8F\", borderWidth:2}} onPress={() => Navigation.pop()}>\n                <Text bold>Close</Text>\n              </Button>\n            </VStack>\n    </>):(\n    <VStack justifyContent=\"center\" alignItems=\"center\" w=\"full\" h=\"full\" space={5} p=\"5\">\n      <Image source={require(\"../../public/assets/not_found.png\")} alt=\"Image not found\" w=\"200\" h=\"150\"/>\n      <Heading>Product does not exist.</Heading>\n      <Text bold>GTIN: {productgtin}</Text>\n      <Text textAlign=\"center\">But you can do us a favor!</Text>\n      <Text textAlign=\"center\" mt=\"-3\">Submit the product information to us so the next person searching for this can have the information.</Text>\n      <Button w=\"full\" backgroundColor=\"#1FAA8F\" style={{borderRadius:20, borderColor:\"#1FAA8F\", borderWidth:2}} onPress={()=>Navigation.navigate('Submit Product', {productgtin})}>\n        <Text bold color=\"white\">Submit product</Text>\n      </Button>\n    </VStack>)}\n    </>\n    </ImageBackground>\n    </>\n  );\n};\n\n\nexport default () => {\n    return (\n      <NativeBaseProvider>\n        <Center flex={1}>\n          <ProductDetail/>\n        </Center>\n      </NativeBaseProvider>\n    )\n};"]},"metadata":{},"sourceType":"module"}