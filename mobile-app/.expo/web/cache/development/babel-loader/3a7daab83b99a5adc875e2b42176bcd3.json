{"ast":null,"code":"import React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { NativeBaseProvider, Center, Box, ScrollView, VStack, Heading, HStack, Text, FlatList, Divider } from \"native-base\";\nimport API_URL from \"../../API_URL\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar TrackingReport = function TrackingReport() {\n  var Navigation = useNavigation();\n  var item = useRoute().params.item;\n\n  var _renderImages = function _renderImages() {\n    var images = item.media.split(\",\");\n    return images.map(function (image, index) {\n      return _jsx(Image, {\n        source: {\n          uri: API_URL + \"static/reports/\" + image\n        },\n        alt: \"reports image\",\n        style: {\n          height: 100,\n          width: 100\n        },\n        resizeMode: \"cover\"\n      }, \"report-image-\" + index);\n    });\n  };\n\n  return _jsx(Box, {\n    w: \"full\",\n    h: \"full\",\n    children: _jsx(ImageBackground, {\n      source: require(\"../../public/assets/bg-1-100.jpg\"),\n      style: styles.image,\n      children: _jsxs(ScrollView, {\n        w: \"full\",\n        p: \"3\",\n        children: [_jsxs(VStack, {\n          w: \"full\",\n          backgroundColor: \"#EDF4F2\",\n          p: \"4\",\n          rounded: \"lg\",\n          space: 2,\n          children: [_jsxs(HStack, {\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            mb: \"1\",\n            children: [_jsxs(Heading, {\n              fontSize: \"lg\",\n              color: \"#E8790A\",\n              children: [\"Report ID: \", item.id]\n            }), _jsx(Box, {\n              style: item.status == \"Verified\" ? styles.chipsItemVerified : styles.chipsItem,\n              children: _jsx(Text, {\n                children: item.status.charAt(0).toUpperCase() + item.status.slice(1)\n              })\n            })]\n          }), _jsx(Divider, {\n            color: \"#DFEAE7\"\n          }), _jsxs(VStack, {\n            space: 2,\n            children: [_jsx(Text, {\n              fontSize: \"md\",\n              fontWeight: \"700\",\n              children: item.title\n            }), _jsx(Text, {\n              fontSize: \"xs\",\n              color: \"gray.600\",\n              children: item.date.split('T')[0]\n            }), _jsx(Text, {\n              fontSize: \"xs\",\n              color: \"gray.600\",\n              children: item.location\n            }), _jsx(HStack, {\n              backgroundColor: \"#DFEAE7\",\n              p: \"3\",\n              borderRadius: 3,\n              children: _jsx(Text, {\n                fontSize: \"xs\",\n                children: item.description\n              })\n            })]\n          }), item.media && _jsx(HStack, {\n            alignItems: \"center\",\n            space: 1,\n            children: _renderImages()\n          })]\n        }), _jsxs(VStack, {\n          p: \"1\",\n          py: \"4\",\n          space: 4,\n          style: {\n            marginTop: 16,\n            backgroundColor: \"#F9F9F9\",\n            borderRadius: 8\n          },\n          children: [_jsxs(_Fragment, {\n            children: [item.solved_time && _jsxs(HStack, {\n              space: 5,\n              borderBottomWidth: \"1\",\n              borderBottomColor: \"#E9E9E9\",\n              pb: \"3\",\n              children: [_jsxs(VStack, {\n                w: \"1/4\",\n                children: [_jsx(Text, {\n                  style: item.status == \"Solved\" ? styles.latestState : styles.state,\n                  textAlign: \"right\",\n                  children: item.date.split('T')[0]\n                }), _jsxs(Text, {\n                  style: item.status == \"Solved\" ? styles.latestState : styles.state,\n                  textAlign: \"right\",\n                  children: [item.date.split('T')[1].split(':')[0], \":\", item.date.split('T')[1].split(':')[1]]\n                })]\n              }), _jsxs(VStack, {\n                w: \"2/3\",\n                children: [_jsx(Text, {\n                  style: item.status == \"Solved\" ? styles.latestState : styles.state,\n                  children: \"Your report has been solved. Thank you for reporting.\"\n                }), item.solved_comment ? _jsxs(VStack, {\n                  mt: \"1\",\n                  children: [_jsx(Text, {\n                    fontSize: \"12\",\n                    fontStyle: \"italic\",\n                    children: \"Comment from JPSPN:\"\n                  }), _jsx(Text, {\n                    fontSize: \"12\",\n                    fontStyle: \"italic\",\n                    children: item.solved_comment\n                  })]\n                }) : _jsx(_Fragment, {})]\n              })]\n            }), item.rejected_time && _jsxs(HStack, {\n              space: 5,\n              borderBottomWidth: \"1\",\n              borderBottomColor: \"#E9E9E9\",\n              pb: \"3\",\n              children: [_jsxs(VStack, {\n                w: \"1/4\",\n                children: [_jsx(Text, {\n                  style: item.status == \"Rejected\" ? styles.rejectedState : styles.state,\n                  textAlign: \"right\",\n                  children: item.date.split('T')[0]\n                }), _jsxs(Text, {\n                  style: item.status == \"Rejected\" ? styles.rejectedState : styles.state,\n                  textAlign: \"right\",\n                  children: [item.date.split('T')[1].split(':')[0], \":\", item.date.split('T')[1].split(':')[1]]\n                })]\n              }), _jsxs(VStack, {\n                w: \"2/3\",\n                children: [_jsx(Text, {\n                  style: item.status == \"Rejected\" ? styles.rejectedState : styles.state,\n                  children: \"Your report has been rejected. It is either misreporting or containing incorrect information. Please resubmit it with correct information.\"\n                }), item.rejected_comment ? _jsxs(VStack, {\n                  mt: \"1\",\n                  children: [_jsx(Text, {\n                    fontSize: \"12\",\n                    fontStyle: \"italic\",\n                    children: \"Comment from JPSPN:\"\n                  }), _jsx(Text, {\n                    fontSize: \"12\",\n                    fontStyle: \"italic\",\n                    children: item.rejected_comment\n                  })]\n                }) : _jsx(_Fragment, {})]\n              })]\n            }), item.in_progress_time && _jsxs(HStack, {\n              space: 5,\n              borderBottomWidth: \"1\",\n              borderBottomColor: \"#E9E9E9\",\n              pb: \"3\",\n              children: [_jsxs(VStack, {\n                w: \"1/4\",\n                children: [_jsx(Text, {\n                  style: item.status == \"In Progress\" ? styles.latestState : styles.state,\n                  textAlign: \"right\",\n                  children: item.date.split('T')[0]\n                }), _jsxs(Text, {\n                  style: item.status == \"In Progress\" ? styles.latestState : styles.state,\n                  textAlign: \"right\",\n                  children: [item.date.split('T')[1].split(':')[0], \":\", item.date.split('T')[1].split(':')[1]]\n                })]\n              }), _jsxs(VStack, {\n                w: \"2/3\",\n                children: [_jsx(Text, {\n                  style: item.status == \"In Progress\" ? styles.latestState : styles.state,\n                  children: \"Your report has been accepted and now being in progress. Please wait for further update.\"\n                }), item.in_progress_comment && _jsxs(VStack, {\n                  mt: \"1\",\n                  children: [_jsx(Text, {\n                    fontSize: \"12\",\n                    fontStyle: \"italic\",\n                    children: \"Comment from JPSPN:\"\n                  }), _jsx(Text, {\n                    fontSize: \"12\",\n                    fontStyle: \"italic\",\n                    children: item.in_progress_comment\n                  })]\n                })]\n              })]\n            }), item.verified_time && _jsxs(HStack, {\n              space: 5,\n              borderBottomWidth: \"1\",\n              borderBottomColor: \"#E9E9E9\",\n              pb: \"3\",\n              children: [_jsxs(VStack, {\n                w: \"1/4\",\n                children: [_jsx(Text, {\n                  style: item.status == \"Verified\" ? styles.latestState : styles.state,\n                  textAlign: \"right\",\n                  children: item.date.split('T')[0]\n                }), _jsxs(Text, {\n                  style: item.status == \"Verified\" ? styles.latestState : styles.state,\n                  textAlign: \"right\",\n                  children: [item.date.split('T')[1].split(':')[0], \":\", item.date.split('T')[1].split(':')[1]]\n                })]\n              }), _jsxs(VStack, {\n                w: \"2/3\",\n                children: [_jsx(Text, {\n                  style: item.status == \"Verified\" ? styles.latestState : styles.state,\n                  children: \"Your report has been verified. It is now being forwarded to Head of JPSPN officer for further action.\"\n                }), item.verified_comment ? _jsxs(VStack, {\n                  mt: \"1\",\n                  children: [_jsx(Text, {\n                    fontSize: \"12\",\n                    fontStyle: \"italic\",\n                    children: \"Comment from JPSPN:\"\n                  }), _jsx(Text, {\n                    fontSize: \"12\",\n                    fontStyle: \"italic\",\n                    children: item.verified_comment\n                  })]\n                }) : _jsx(_Fragment, {})]\n              })]\n            })]\n          }), _jsxs(HStack, {\n            space: 5,\n            children: [_jsxs(VStack, {\n              w: \"1/4\",\n              children: [_jsx(Text, {\n                style: item.status == \"Pending\" ? styles.latestState : styles.state,\n                textAlign: \"right\",\n                children: item.date.split('T')[0]\n              }), _jsxs(Text, {\n                style: item.status == \"Pending\" ? styles.latestState : styles.state,\n                textAlign: \"right\",\n                children: [item.date.split('T')[1].split(':')[0], \":\", item.date.split('T')[1].split(':')[1]]\n              })]\n            }), _jsx(Text, {\n              w: \"2/3\",\n              style: item.status == \"Pending\" ? styles.latestState : styles.state,\n              children: \"You have filed the report.\"\n            })]\n          })]\n        })]\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center'\n  },\n  chipsItem: {\n    flexDirection: \"row\",\n    backgroundColor: 'white',\n    borderRadius: 20,\n    padding: 8,\n    paddingHorizontal: 20,\n    marginHorizontal: 10,\n    height: 35,\n    elevation: 10\n  },\n  chipsItemVerified: {\n    flexDirection: \"row\",\n    backgroundColor: '#E8E31F',\n    borderRadius: 20,\n    padding: 8,\n    paddingHorizontal: 20,\n    marginHorizontal: 10,\n    height: 35,\n    elevation: 10\n  },\n  chipsItemInProgress: {\n    flexDirection: \"row\",\n    backgroundColor: '#6DB6F2',\n    borderRadius: 20,\n    padding: 8,\n    paddingHorizontal: 20,\n    marginHorizontal: 10,\n    height: 35,\n    elevation: 10\n  },\n  chipsItemSolved: {\n    flexDirection: \"row\",\n    backgroundColor: '#4AD1B7',\n    borderRadius: 20,\n    padding: 8,\n    paddingHorizontal: 20,\n    marginHorizontal: 10,\n    height: 35,\n    elevation: 10\n  },\n  chipsItemRejected: {\n    flexDirection: \"row\",\n    backgroundColor: '#FF7B52',\n    borderRadius: 20,\n    padding: 8,\n    paddingHorizontal: 20,\n    marginHorizontal: 10,\n    height: 35,\n    elevation: 10\n  },\n  state: {\n    color: \"#7C7C7C\",\n    fontSize: 12\n  },\n  latestState: {\n    color: \"#1FAA8F\",\n    fontWeight: \"700\",\n    fontSize: 12\n  },\n  rejectedState: {\n    color: \"#C42E10\",\n    fontWeight: \"700\",\n    fontSize: 12\n  }\n});\nexport default (function () {\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(Center, {\n      flex: 1,\n      children: _jsx(TrackingReport, {})\n    })\n  });\n});","map":{"version":3,"sources":["/Users/weiherr/Desktop/FYP/MyRecycle/mobile-app/screens/report/TrackingReport.js"],"names":["React","useState","useEffect","useNavigation","useRoute","NativeBaseProvider","Center","Box","ScrollView","VStack","Heading","HStack","Text","FlatList","Divider","API_URL","TrackingReport","Navigation","item","params","_renderImages","images","media","split","map","image","index","uri","height","width","require","styles","id","status","chipsItemVerified","chipsItem","charAt","toUpperCase","slice","title","date","location","description","marginTop","backgroundColor","borderRadius","solved_time","latestState","state","solved_comment","rejected_time","rejectedState","rejected_comment","in_progress_time","in_progress_comment","verified_time","verified_comment","StyleSheet","create","flex","alignItems","flexDirection","padding","paddingHorizontal","marginHorizontal","elevation","chipsItemInProgress","chipsItemSolved","chipsItemRejected","color","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, StyleSheet, ImageBackground, Image } from \"react-native\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { NativeBaseProvider,Center, Box, ScrollView, VStack, Heading, HStack, Text, FlatList, Divider } from \"native-base\";\nimport API_URL from \"../../API_URL\";\n\nconst TrackingReport = () => {\n\n    const Navigation = useNavigation(); \n\n    const item = useRoute().params.item;\n\n    const _renderImages = () => {\n\n      const images = item.media.split(\",\");\n\n      return images.map((image, index) => {\n        return (\n            <Image key={`report-image-${index}`} source={{uri:`${API_URL}static/reports/${image}`}} alt=\"reports image\" style={{height:100, width:100}} resizeMode=\"cover\"/>\n        )\n      })      \n    }\n    \n  return (\n    <Box w=\"full\" h=\"full\">\n        <ImageBackground source={require('../../public/assets/bg-1-100.jpg')} style={styles.image}>\n            <ScrollView w=\"full\" p=\"3\">\n                <VStack w=\"full\" backgroundColor=\"#EDF4F2\" p=\"4\" rounded=\"lg\" space={2}>\n                    <HStack justifyContent=\"space-between\" alignItems=\"center\" mb=\"1\">\n                        <Heading fontSize=\"lg\" color=\"#E8790A\">Report ID: {item.id}</Heading>\n                        <Box style={(item.status==\"Verified\")? styles.chipsItemVerified : styles.chipsItem}>\n                            <Text>{item.status.charAt(0).toUpperCase() + item.status.slice(1)}</Text>\n                        </Box>\n                    </HStack>\n                    <Divider color=\"#DFEAE7\"/>\n                    <VStack space={2}>\n                      <Text fontSize=\"md\" fontWeight=\"700\">{item.title}</Text>\n                      <Text fontSize=\"xs\" color=\"gray.600\">{item.date.split('T')[0]}</Text>\n                      <Text fontSize=\"xs\" color=\"gray.600\">{item.location}</Text>\n                      <HStack backgroundColor=\"#DFEAE7\" p=\"3\" borderRadius={3}>\n                          <Text fontSize=\"xs\">{item.description}</Text>\n                      </HStack>\n                    </VStack>\n                    {item.media &&\n                    <HStack alignItems=\"center\" space={1}>\n                        {/* <Image source={item.media} alt=\"Alternate Text\" style={{width:80, height:80}}/> */}\n                        {_renderImages()}\n                    </HStack>\n                    }\n                </VStack>\n                <VStack p=\"1\" py=\"4\" space={4} style={{marginTop:16, backgroundColor:\"#F9F9F9\", borderRadius:8}}>\n                <>\n                    {item.solved_time && \n                    <HStack space={5} borderBottomWidth=\"1\" borderBottomColor=\"#E9E9E9\" pb=\"3\">\n                        <VStack w=\"1/4\">\n                          <Text style={item.status == \"Solved\" ? styles.latestState : styles.state} textAlign=\"right\">{item.date.split('T')[0]}</Text>\n                          <Text style={item.status == \"Solved\" ? styles.latestState : styles.state} textAlign=\"right\">{item.date.split('T')[1].split(':')[0]}:{item.date.split('T')[1].split(':')[1]}</Text>\n                        </VStack>\n                        <VStack w=\"2/3\" >\n                          <Text style={item.status == \"Solved\" ? styles.latestState : styles.state}>Your report has been solved. Thank you for reporting.</Text>\n                          {item.solved_comment?\n                          <VStack mt=\"1\">\n                            <Text fontSize=\"12\" fontStyle=\"italic\">Comment from JPSPN:</Text>\n                            <Text fontSize=\"12\" fontStyle=\"italic\">{item.solved_comment}</Text>\n                          </VStack>\n                          :<></>}\n                        </VStack>                    \n                    </HStack>}\n                    {item.rejected_time && \n                    <HStack space={5} borderBottomWidth=\"1\" borderBottomColor=\"#E9E9E9\" pb=\"3\">\n                        <VStack w=\"1/4\">\n                          <Text style={item.status == \"Rejected\" ? styles.rejectedState : styles.state} textAlign=\"right\">{item.date.split('T')[0]}</Text>\n                          <Text style={item.status == \"Rejected\" ? styles.rejectedState : styles.state} textAlign=\"right\">{item.date.split('T')[1].split(':')[0]}:{item.date.split('T')[1].split(':')[1]}</Text>\n                        </VStack>\n                        <VStack w=\"2/3\" >\n                          <Text style={item.status == \"Rejected\" ? styles.rejectedState : styles.state}>Your report has been rejected. It is either misreporting or containing incorrect information. Please resubmit it with correct information.</Text>\n                          {item.rejected_comment?\n                          <VStack mt=\"1\">\n                            <Text fontSize=\"12\" fontStyle=\"italic\">Comment from JPSPN:</Text>\n                            <Text fontSize=\"12\" fontStyle=\"italic\">{item.rejected_comment}</Text>\n                          </VStack>\n                          :<></>}\n                        </VStack>                    \n                    </HStack>}\n                    {item.in_progress_time && \n                    <HStack space={5} borderBottomWidth=\"1\" borderBottomColor=\"#E9E9E9\" pb=\"3\">\n                        <VStack w=\"1/4\">\n                          <Text style={item.status == \"In Progress\" ? styles.latestState : styles.state} textAlign=\"right\">{item.date.split('T')[0]}</Text>\n                          <Text style={item.status == \"In Progress\" ? styles.latestState : styles.state} textAlign=\"right\">{item.date.split('T')[1].split(':')[0]}:{item.date.split('T')[1].split(':')[1]}</Text>\n                        </VStack>\n                        <VStack w=\"2/3\" >\n                          <Text style={item.status == \"In Progress\" ? styles.latestState : styles.state}>Your report has been accepted and now being in progress. Please wait for further update.</Text>\n                          {item.in_progress_comment &&\n                          <VStack mt=\"1\">\n                            <Text fontSize=\"12\" fontStyle=\"italic\">Comment from JPSPN:</Text>\n                            <Text fontSize=\"12\" fontStyle=\"italic\">{item.in_progress_comment}</Text>\n                          </VStack>}\n                        </VStack>\n                    </HStack>}\n                    {item.verified_time && \n                    <HStack space={5} borderBottomWidth=\"1\" borderBottomColor=\"#E9E9E9\" pb=\"3\">\n                        <VStack w=\"1/4\">\n                          <Text style={item.status == \"Verified\" ? styles.latestState : styles.state} textAlign=\"right\">{item.date.split('T')[0]}</Text>\n                          <Text style={item.status == \"Verified\" ? styles.latestState : styles.state} textAlign=\"right\">{item.date.split('T')[1].split(':')[0]}:{item.date.split('T')[1].split(':')[1]}</Text>\n                        </VStack>\n                        <VStack w=\"2/3\" >\n                          <Text style={item.status == \"Verified\" ? styles.latestState : styles.state}>Your report has been verified. It is now being forwarded to Head of JPSPN officer for further action.</Text>\n                          {item.verified_comment?\n                          <VStack mt=\"1\">\n                            <Text fontSize=\"12\" fontStyle=\"italic\">Comment from JPSPN:</Text>\n                            <Text fontSize=\"12\" fontStyle=\"italic\">{item.verified_comment}</Text>\n                          </VStack>\n                          :<></>}\n                        </VStack>\n                    </HStack>}\n                    </>\n\n                    <HStack space={5}>\n                        <VStack w=\"1/4\">\n                          <Text style={item.status == \"Pending\" ? styles.latestState : styles.state} textAlign=\"right\">{item.date.split('T')[0]}</Text>\n                          <Text style={item.status == \"Pending\" ? styles.latestState : styles.state} textAlign=\"right\">{item.date.split('T')[1].split(':')[0]}:{item.date.split('T')[1].split(':')[1]}</Text>\n                        </VStack>\n                        <Text w=\"2/3\" style={item.status == \"Pending\" ? styles.latestState : styles.state}>You have filed the report.</Text>\n                    </HStack>\n\n                </VStack>\n\n            </ScrollView>\n        </ImageBackground>\n    </Box>\n  );\n};\n\nconst styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center',\n  },  \n  chipsItem: {\n    flexDirection:\"row\",\n    backgroundColor:'white', \n    borderRadius:20,\n    padding:8,\n    paddingHorizontal:20, \n    marginHorizontal:10,\n    height:35,\n    elevation: 10,\n  },\n  chipsItemVerified: {\n    flexDirection:\"row\",\n    backgroundColor:'#E8E31F', \n    borderRadius:20,\n    padding:8,\n    paddingHorizontal:20, \n    marginHorizontal:10,\n    height:35,\n    elevation: 10,\n  },\n  chipsItemInProgress: {\n    flexDirection:\"row\",\n    backgroundColor:'#6DB6F2', \n    borderRadius:20,\n    padding:8,\n    paddingHorizontal:20, \n    marginHorizontal:10,\n    height:35,\n    elevation: 10,\n  },\n  chipsItemSolved: {\n    flexDirection:\"row\",\n    backgroundColor:'#4AD1B7', \n    borderRadius:20,\n    padding:8,\n    paddingHorizontal:20, \n    marginHorizontal:10,\n    height:35,\n    elevation: 10,\n  },\n  chipsItemRejected: {\n    flexDirection:\"row\",\n    backgroundColor:'#FF7B52', \n    borderRadius:20,\n    padding:8,\n    paddingHorizontal:20, \n    marginHorizontal:10,\n    height:35,\n    elevation: 10,\n  },\n  state:{\n      color:\"#7C7C7C\",\n      fontSize:12\n  },\n  latestState:{\n    color:\"#1FAA8F\",\n    fontWeight:\"700\",\n    fontSize:12\n  },\n  rejectedState:{\n    color:\"#C42E10\",\n    fontWeight:\"700\",\n    fontSize:12\n  },\n});\n\nexport default () => {\n    return (\n      <NativeBaseProvider>\n        <Center flex={1}>\n          <TrackingReport/>\n        </Center>\n      </NativeBaseProvider>\n    )\n  };"]},"metadata":{},"sourceType":"module"}