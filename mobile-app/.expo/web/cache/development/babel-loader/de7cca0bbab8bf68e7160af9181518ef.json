{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"divider\"],\n    _excluded2 = [\"_text\", \"_hover\", \"_focus\", \"_pressed\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { VStack } from \"../Stack\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar List = function List(_ref, ref) {\n  var children = _ref.children,\n      divider = _ref.divider,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _usePropsResolution = usePropsResolution('List', props),\n      _text = _usePropsResolution._text,\n      _hover = _usePropsResolution._hover,\n      _focus = _usePropsResolution._focus,\n      _pressed = _usePropsResolution._pressed,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  children = React.Children.map(children, function (child, ind) {\n    var _child$props, _child$props2, _child$props3, _child$props4;\n\n    return React.cloneElement(child, {\n      index: ind,\n      _text: _objectSpread(_objectSpread({}, _text), (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props._text),\n      _hover: _objectSpread(_objectSpread({}, _hover), (_child$props2 = child.props) === null || _child$props2 === void 0 ? void 0 : _child$props2._hover),\n      _focus: _objectSpread(_objectSpread({}, _focus), (_child$props3 = child.props) === null || _child$props3 === void 0 ? void 0 : _child$props3._focus),\n      _pressed: _objectSpread(_objectSpread({}, _pressed), (_child$props4 = child.props) === null || _child$props4 === void 0 ? void 0 : _child$props4._pressed)\n    });\n  });\n  return React.createElement(VStack, _extends({\n    divider: divider,\n    ref: ref\n  }, resolvedProps), children);\n};\n\nexport default memo(forwardRef(List));","map":{"version":3,"sources":["List.tsx"],"names":["List","props","resolvedProps","usePropsResolution","useHasResponsiveProps","children","index","_text","child","_hover","_focus","_pressed","ref","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,SAAA,MAAA;AAEA,SAAA,kBAAA;AACA,SAAA,qBAAA;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,OAAA,GAAA,EAA4D;AAAA,MAA3D,QAA2D,QAA3D,QAA2D;AAAA,MAA3D,OAA2D,QAA3D,OAA2D;AAAA,MAAnCC,KAAmC;;AACvE,4BAMIE,kBAAkB,CAAA,MAAA,EAPiD,KAOjD,CANtB;AAAA,MAAM,KAAN,uBAAM,KAAN;AAAA,MAAM,MAAN,uBAAM,MAAN;AAAA,MAAM,MAAN,uBAAM,MAAN;AAAA,MAAM,QAAN,uBAAM,QAAN;AAAA,MAKKD,aALL;;AAQA,MAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AAVqE;;AAavEC,EAAAA,QAAQ,GAAG,KAAK,CAAL,QAAA,CAAA,GAAA,CAAA,QAAA,EAA6B,UAAA,KAAA,EAAA,GAAA,EAA6B;AAAA,QAAA,YAAA,EAAA,aAAA,EAAA,aAAA,EAAA,aAAA;;AACnE,WAAO,KAAK,CAAL,YAAA,CAAA,KAAA,EAA0B;AAC/BC,MAAAA,KAAK,EAD0B,GAAA;AAE/BC,MAAAA,KAAK,kCAAE,KAAF,GAAc,CAAA,YAAA,GAAGC,KAAK,CAAR,KAAA,MAAA,IAAA,IAAA,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAGA,YAAAA,CAAH,KAAd,CAF0B;AAG/BC,MAAAA,MAAM,kCAAE,MAAF,GAAe,CAAA,aAAA,GAAGD,KAAK,CAAR,KAAA,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAGA,aAAAA,CAAH,MAAf,CAHyB;AAI/BE,MAAAA,MAAM,kCAAE,MAAF,GAAe,CAAA,aAAA,GAAGF,KAAK,CAAR,KAAA,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAGA,aAAAA,CAAH,MAAf,CAJyB;AAK/BG,MAAAA,QAAQ,kCAAE,QAAF,GAAiB,CAAA,aAAA,GAAGH,KAAK,CAAR,KAAA,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAGA,aAAAA,CAAH,QAAjB;AALuB,KAA1B,CAAP;AADFH,GAAW,CAAXA;AAUA,SACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA;AAAQ,IAAA,OAAO,EAAf,OAAA;AAA0B,IAAA,GAAG,EAAEO;AAA/B,GAAA,EAAA,aAAA,CAAA,EADF,QACE,CADF;AAvBF,CAAA;;AA+BA,eAAeC,IAAI,CAACC,UAAU,CAA9B,IAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { VStack } from '../Stack';\nimport type { IListProps, IListItemProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst List = ({ children, divider, ...props }: IListProps, ref?: any) => {\n  const {\n    _text,\n    _hover,\n    _focus,\n    _pressed,\n    ...resolvedProps\n  } = usePropsResolution('List', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  // add props to children\n  children = React.Children.map(children, (child: any, ind: number) => {\n    return React.cloneElement(child, {\n      index: ind,\n      _text: { ..._text, ...child.props?._text },\n      _hover: { ..._hover, ...child.props?._hover },\n      _focus: { ..._focus, ...child.props?._focus },\n      _pressed: { ..._pressed, ...child.props?._pressed },\n    });\n  });\n\n  return (\n    <VStack divider={divider} ref={ref} {...resolvedProps}>\n      {children}\n    </VStack>\n  );\n};\n\nexport type { IListProps, IListItemProps };\nexport default memo(forwardRef(List));\n"]},"metadata":{},"sourceType":"module"}