{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"isCurrent\", \"_text\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef, memo } from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { HStack } from \"../../primitives/Stack\";\nimport { BreadcrumbItemContext } from \"./Context\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar BreadcrumbItem = function BreadcrumbItem(props, ref) {\n  var children = props.children,\n      isCurrent = props.isCurrent,\n      _text = props._text,\n      remainingProps = _objectWithoutProperties(props, _excluded);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(BreadcrumbItemContext.Provider, {\n    value: {\n      isCurrent: isCurrent\n    }\n  }, React.createElement(HStack, _extends({}, remainingProps, {\n    ref: ref\n  }), React.Children.map(children, function (child, index) {\n    return React.cloneElement(child, _objectSpread(_objectSpread(_objectSpread({\n      'key': \"breadcrumb-item-\".concat(index),\n      '_text': _objectSpread(_objectSpread({}, _text), {}, {\n        fontWeight: 700\n      })\n    }, {\n      isUnderlined: false\n    }), remainingProps), {}, {\n      'aria-current': Platform.OS === 'web' && isCurrent ? 'page' : undefined\n    }));\n  })));\n};\n\nexport default memo(forwardRef(BreadcrumbItem));","map":{"version":3,"sources":["BreadcrumbItem.tsx"],"names":["BreadcrumbItem","remainingProps","useHasResponsiveProps","isCurrent","ref","fontWeight","isUnderlined","Platform","undefined","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,UAAA,EAAA,IAAA,QAAA,OAAA;;AAEA,SAAA,MAAA;AACA,SAAA,qBAAA;AAEA,SAAA,qBAAA;;AAEA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAAA,KAAA,EAAA,GAAA,EAA4C;AACjE,MAAM,QAAN,GADiE,KACjE,CAAM,QAAN;AAAA,MAAM,SAAN,GADiE,KACjE,CAAM,SAAN;AAAA,MAAM,KAAN,GADiE,KACjE,CAAM,KAAN;AAAA,MAAuCC,cAAvC,4BADiE,KACjE;;AAEA,MAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AACD;;AACD,SAEE,KAAA,CAAA,aAAA,CAAC,qBAAD,CAAA,QAAA,EAAA;AAAgC,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAAA,EAAAA;AAAF;AAAvC,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EAAA,cAAA,EAAA;AAA4B,IAAA,GAAG,EAAEC;AAAjC,GAAA,CAAA,EACG,KAAK,CAAL,QAAA,CAAA,GAAA,CAAA,QAAA,EAA6B,UAAA,KAAA,EAAA,KAAA;AAAA,WAC5B,KAAK,CAAL,YAAA,CAAA,KAAA;AACE,aAAA,mBAAA,MAAA,CADwB,KACxB,CADF;AAEE,+CAAS,KAAT;AAEEC,QAAAA,UAAU,EAAE;AAFd;AAFF,OAMK;AACDC,MAAAA,YAAY,EAAE;AADb,KANL,GAA0B,cAA1B;AAUE,sBACEC,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,IAAAA,SAAAA,GAAAA,MAAAA,GAA8CC;AAXlD,OAD4B;AAAA,GAA7B,CADH,CADF,CAFF;AANF,CAAA;;AA8BA,eAAeC,IAAI,CAACC,UAAU,CAA9B,cAA8B,CAAX,CAAnB","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Platform } from 'react-native';\nimport { HStack } from '../../primitives/Stack';\nimport { BreadcrumbItemContext } from './Context';\nimport type { IBreadcrumbItemProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst BreadcrumbItem = (props: IBreadcrumbItemProps, ref?: any) => {\n  const { children, isCurrent, _text, ...remainingProps } = props;\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    // Provider wrapped to use isCurrent prop in children of breadcrumb Item\n    <BreadcrumbItemContext.Provider value={{ isCurrent }}>\n      <HStack {...remainingProps} ref={ref}>\n        {React.Children.map(children, (child: any, index: number) =>\n          React.cloneElement(child, {\n            'key': `breadcrumb-item-${index}`,\n            '_text': {\n              ..._text, //taken out empty _text prop from props\n              fontWeight: 700,\n            },\n            ...{\n              isUnderlined: false,\n            },\n            ...remainingProps,\n            'aria-current':\n              Platform.OS === 'web' && isCurrent ? 'page' : undefined,\n          })\n        )}\n      </HStack>\n    </BreadcrumbItemContext.Provider>\n  );\n};\n\nexport default memo(forwardRef(BreadcrumbItem));\n"]},"metadata":{},"sourceType":"module"}