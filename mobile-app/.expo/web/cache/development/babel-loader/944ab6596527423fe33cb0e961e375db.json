{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"id\", \"initialRouteName\", \"backBehavior\", \"children\", \"screenListeners\", \"screenOptions\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { createNavigatorFactory, TabRouter, useNavigationBuilder } from '@react-navigation/native';\nimport * as React from 'react';\nimport MaterialBottomTabView from \"../views/MaterialBottomTabView\";\n\nfunction MaterialBottomTabNavigator(_ref) {\n  var id = _ref.id,\n      initialRouteName = _ref.initialRouteName,\n      backBehavior = _ref.backBehavior,\n      children = _ref.children,\n      screenListeners = _ref.screenListeners,\n      screenOptions = _ref.screenOptions,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useNavigationBuilder = useNavigationBuilder(TabRouter, {\n    id: id,\n    initialRouteName: initialRouteName,\n    backBehavior: backBehavior,\n    children: children,\n    screenListeners: screenListeners,\n    screenOptions: screenOptions\n  }),\n      state = _useNavigationBuilder.state,\n      descriptors = _useNavigationBuilder.descriptors,\n      navigation = _useNavigationBuilder.navigation,\n      NavigationContent = _useNavigationBuilder.NavigationContent;\n\n  return React.createElement(NavigationContent, null, React.createElement(MaterialBottomTabView, _extends({}, rest, {\n    state: state,\n    navigation: navigation,\n    descriptors: descriptors\n  })));\n}\n\nexport default createNavigatorFactory(MaterialBottomTabNavigator);","map":{"version":3,"sources":["createMaterialBottomTabNavigator.tsx"],"names":["rest","NavigationContent","useNavigationBuilder","id","initialRouteName","backBehavior","children","screenListeners","screenOptions","descriptors","createNavigatorFactory"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,sBAAA,EAAA,SAAA,EAAA,oBAAA,QAAA,0BAAA;AAUA,OAAO,KAAP,KAAA,MAAA,OAAA;AAOA,OAAA,qBAAA;;AAWA,SAAA,0BAAA,CAAA,IAAA,EAQU;AAR0B,MAAA,EAAA,GAQ1B,IAR0B,CAAA,EAAA;AAAA,MAAA,gBAAA,GAQ1B,IAR0B,CAAA,gBAAA;AAAA,MAAA,YAAA,GAQ1B,IAR0B,CAAA,YAAA;AAAA,MAAA,QAAA,GAQ1B,IAR0B,CAAA,QAAA;AAAA,MAAA,eAAA,GAQ1B,IAR0B,CAAA,eAAA;AAAA,MAAA,aAAA,GAQ1B,IAR0B,CAAA,aAAA;AAAA,MAO/BA,IAP+B,4BAQ1B,IAR0B;;AASlC,8BACEE,oBAAoB,CAAA,SAAA,EAMP;AACXC,IAAAA,EADW,EACXA,EADW;AAEXC,IAAAA,gBAFW,EAEXA,gBAFW;AAGXC,IAAAA,YAHW,EAGXA,YAHW;AAIXC,IAAAA,QAJW,EAIXA,QAJW;AAKXC,IAAAA,eALW,EAKXA,eALW;AAMXC,IAAAA,aAAAA,EAAAA;AANW,GANO,CADtB;AAAA,MAAM,KAAN,yBAAM,KAAN;AAAA,MAAM,WAAN,yBAAM,WAAN;AAAA,MAAM,UAAN,yBAAM,UAAN;AAAA,MAAwCP,iBAAxC,yBAAwCA,iBAAxC;;AAgBA,SACE,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,qBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,KAAK,EAFP,KAAA;AAGE,IAAA,UAAU,EAHZ,UAAA;AAIE,IAAA,WAAW,EAAEQ;AAJf,GAAA,CAAA,CADF,CADF;AAUD;;AAED,eAAeC,sBAAsB,CAArC,0BAAqC,CAArC","sourcesContent":["import {\n  createNavigatorFactory,\n  DefaultNavigatorOptions,\n  ParamListBase,\n  TabActionHelpers,\n  TabNavigationState,\n  TabRouter,\n  TabRouterOptions,\n  useNavigationBuilder,\n} from '@react-navigation/native';\nimport * as React from 'react';\n\nimport type {\n  MaterialBottomTabNavigationConfig,\n  MaterialBottomTabNavigationEventMap,\n  MaterialBottomTabNavigationOptions,\n} from '../types';\nimport MaterialBottomTabView from '../views/MaterialBottomTabView';\n\ntype Props = DefaultNavigatorOptions<\n  ParamListBase,\n  TabNavigationState<ParamListBase>,\n  MaterialBottomTabNavigationOptions,\n  MaterialBottomTabNavigationEventMap\n> &\n  TabRouterOptions &\n  MaterialBottomTabNavigationConfig;\n\nfunction MaterialBottomTabNavigator({\n  id,\n  initialRouteName,\n  backBehavior,\n  children,\n  screenListeners,\n  screenOptions,\n  ...rest\n}: Props) {\n  const { state, descriptors, navigation, NavigationContent } =\n    useNavigationBuilder<\n      TabNavigationState<ParamListBase>,\n      TabRouterOptions,\n      TabActionHelpers<ParamListBase>,\n      MaterialBottomTabNavigationOptions,\n      MaterialBottomTabNavigationEventMap\n    >(TabRouter, {\n      id,\n      initialRouteName,\n      backBehavior,\n      children,\n      screenListeners,\n      screenOptions,\n    });\n\n  return (\n    <NavigationContent>\n      <MaterialBottomTabView\n        {...rest}\n        state={state}\n        navigation={navigation}\n        descriptors={descriptors}\n      />\n    </NavigationContent>\n  );\n}\n\nexport default createNavigatorFactory<\n  TabNavigationState<ParamListBase>,\n  MaterialBottomTabNavigationOptions,\n  MaterialBottomTabNavigationEventMap,\n  typeof MaterialBottomTabNavigator\n>(MaterialBottomTabNavigator);\n"]},"metadata":{},"sourceType":"module"}