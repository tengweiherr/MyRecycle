{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar DROPDOWN_MAX_HEIGHT = height * 0.4;\nexport default calculateDropdownHeight = function calculateDropdownHeight(dropdownStyle, rowStyle, dataLength) {\n  if (dropdownStyle && dropdownStyle.height) {\n    return dropdownStyle.height;\n  } else {\n    if (dataLength == 0) {\n      return 150;\n    } else {\n      if (rowStyle && rowStyle.height) {\n        var _height = rowStyle.height * dataLength;\n\n        return _height < DROPDOWN_MAX_HEIGHT ? _height : DROPDOWN_MAX_HEIGHT;\n      } else {\n        var _height2 = 50 * dataLength;\n\n        return _height2 < DROPDOWN_MAX_HEIGHT ? _height2 : DROPDOWN_MAX_HEIGHT;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["/Users/weiherr/Desktop/FYP/MyRecycle/mobile-app/node_modules/react-native-select-dropdown/src/helpers/calculateDropdownHeight.js"],"names":["Dimensions","get","width","height","DROPDOWN_MAX_HEIGHT","calculateDropdownHeight","dropdownStyle","rowStyle","dataLength"],"mappings":";;AACA,sBAA0BA,UAAU,CAACC,GAAX,CAAe,QAAf,CAA1B;AAAA,IAAQC,KAAR,mBAAQA,KAAR;AAAA,IAAeC,MAAf,mBAAeA,MAAf;;AACA,IAAMC,mBAAmB,GAAGD,MAAM,GAAG,GAArC;AAEA,eAAeE,uBAAuB,GAAG,iCACvCC,aADuC,EAEvCC,QAFuC,EAGvCC,UAHuC,EAIpC;AACH,MAAIF,aAAa,IAAIA,aAAa,CAACH,MAAnC,EAA2C;AACzC,WAAOG,aAAa,CAACH,MAArB;AACD,GAFD,MAEO;AACL,QAAIK,UAAU,IAAI,CAAlB,EAAqB;AACnB,aAAO,GAAP;AACD,KAFD,MAEO;AACL,UAAID,QAAQ,IAAIA,QAAQ,CAACJ,MAAzB,EAAiC;AAC/B,YAAMA,OAAM,GAAGI,QAAQ,CAACJ,MAAT,GAAkBK,UAAjC;;AACA,eAAOL,OAAM,GAAGC,mBAAT,GAA+BD,OAA/B,GAAwCC,mBAA/C;AACD,OAHD,MAGO;AACL,YAAMD,QAAM,GAAG,KAAKK,UAApB;;AACA,eAAOL,QAAM,GAAGC,mBAAT,GAA+BD,QAA/B,GAAwCC,mBAA/C;AACD;AACF;AACF;AACF,CApBD","sourcesContent":["import { Dimensions } from \"react-native\";\nconst { width, height } = Dimensions.get(\"window\");\nconst DROPDOWN_MAX_HEIGHT = height * 0.4;\n\nexport default calculateDropdownHeight = (\n  dropdownStyle,\n  rowStyle,\n  dataLength\n) => {\n  if (dropdownStyle && dropdownStyle.height) {\n    return dropdownStyle.height;\n  } else {\n    if (dataLength == 0) {\n      return 150;\n    } else {\n      if (rowStyle && rowStyle.height) {\n        const height = rowStyle.height * dataLength;\n        return height < DROPDOWN_MAX_HEIGHT ? height : DROPDOWN_MAX_HEIGHT;\n      } else {\n        const height = 50 * dataLength;\n        return height < DROPDOWN_MAX_HEIGHT ? height : DROPDOWN_MAX_HEIGHT;\n      }\n    }\n  }\n};\n"]},"metadata":{},"sourceType":"module"}