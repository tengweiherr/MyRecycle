{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { NativeBaseProvider, Button, FormControl, Input, VStack, Center, Image, HStack, Select, CheckIcon, WarningOutlineIcon, TextArea, Text, Icon, ScrollView, Modal } from \"native-base\";\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport DatePicker from \"react-datepicker\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { AntDesign, Ionicons, Entypo } from \"@expo/vector-icons\";\nimport MapView, { PROVIDER_GOOGLE } from \"react-native-maps\";\nimport Geocoder from 'react-native-geocoding';\nimport * as ImagePicker from 'expo-image-picker';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport API_URL from \"../../API_URL\";\nimport * as Location from 'expo-location';\nimport * as Permissions from \"expo-permissions\";\nimport { LoadingContext } from \"../../context/context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar API_KEY = \"AIzaSyCQoDI7E-OJ9RCK4MN7ykJqISCjIO6DwoU\";\nGeocoder.init(API_KEY);\n\nvar SubmitReport = function SubmitReport() {\n  var Navigation = useNavigation();\n\n  var _useState = useState({\n    title: \"\",\n    category: \"\",\n    date: new Date(),\n    location: \"\",\n    description: \"\",\n    reporter_email: \"\",\n    status: \"Pending\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      formData = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      userData = _useState4[0],\n      setUserData = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errors = _useState6[0],\n      setErrors = _useState6[1];\n\n  var _useState7 = useState(new Date()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      date = _useState8[0],\n      setDate = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showModal = _useState10[0],\n      setShowModal = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      image = _useState12[0],\n      setImage = _useState12[1];\n\n  var mapRef = useRef(null);\n\n  var _useContext = useContext(LoadingContext),\n      setIsLoading = _useContext.setIsLoading;\n\n  var getUserData = function getUserData() {\n    var value;\n    return _regeneratorRuntime.async(function getUserData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 4:\n            value = _context.sent;\n\n            if (value !== null) {\n              setUserData(JSON.parse(value));\n            }\n\n            setIsLoading(false);\n            _context.next = 13;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n            setIsLoading(false);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  };\n\n  useEffect(function () {\n    getUserData();\n  }, []);\n\n  var _useState13 = useState(null),\n      _useState14 = _slicedToArray(_useState13, 2),\n      region = _useState14[0],\n      setRegion = _useState14[1];\n\n  var _useState15 = useState(null),\n      _useState16 = _slicedToArray(_useState15, 2),\n      currentLocation = _useState16[0],\n      setCurrentLocation = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      search = _useState18[0],\n      setSearch = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      address = _useState20[0],\n      setAddress = _useState20[1];\n\n  useEffect(function () {\n    setIsLoading(true);\n\n    (function _callee() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context2.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context2.next = 7;\n                break;\n              }\n\n              console.warn('Permission to access location was denied');\n              return _context2.abrupt(\"return\");\n\n            case 7:\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context2.sent;\n              setRegion(location);\n              setCurrentLocation(location);\n              setIsLoading(false);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var searchAddress = function searchAddress() {\n    Geocoder.from(search).then(function (json) {\n      var location = json.results[0].geometry.location;\n      var target = {\n        latitude: location.lat,\n        longitude: location.lng,\n        latitudeDelta: 0.001,\n        longitudeDelta: 0.001\n      };\n      setAddress(search);\n      mapRef.current.animateToRegion(target, 3 * 1000);\n    }).catch(function (error) {\n      console.warn(error);\n      alert(\"Address not found.\");\n    });\n  };\n\n  var onRegionChange = function onRegionChange(region) {\n    Geocoder.from(region.latitude, region.longitude).then(function (json) {\n      var addressComponent = json.results[0].formatted_address;\n      setAddress(addressComponent);\n    }).catch(function (error) {\n      return console.warn(error);\n    });\n  };\n\n  var handleAddress = function handleAddress() {\n    setData(_objectSpread(_objectSpread({}, formData), {}, {\n      location: address\n    }));\n    setShowModal(false);\n  };\n\n  var validate = function validate() {\n    if (formData.title === \"\") {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        name: 'Title is required'\n      }));\n      return false;\n    } else {\n      setErrors(function (prevState) {\n        var state = _objectSpread({}, prevState);\n\n        state.name = undefined;\n        return state;\n      });\n    }\n\n    ;\n\n    if (formData.category === \"\") {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        category: 'Category is required'\n      }));\n      return false;\n    }\n\n    if (formData.location === \"\") {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        location: 'Location is required'\n      }));\n      return false;\n    }\n\n    if (formData.description === \"\") {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        description: 'Description is required'\n      }));\n      return false;\n    }\n\n    return true;\n  };\n\n  var onSubmit = function onSubmit() {\n    var ac = new AbortController();\n    setIsLoading(true);\n    setData(_objectSpread(_objectSpread({}, formData), {}, {\n      date: date\n    }));\n    var formdata = new FormData();\n    formdata.append(\"title\", formData.title);\n    formdata.append(\"description\", formData.description);\n    formdata.append(\"date\", formData.date.toUTCString());\n    formdata.append(\"category\", formData.category);\n    formdata.append(\"location\", formData.location);\n    formdata.append(\"status\", \"Pending\");\n    formdata.append(\"userId\", userData.id);\n\n    for (var index = 0; index < image.length; index++) {\n      formdata.append(\"media\", {\n        uri: image[index],\n        name: 'image.jpg',\n        type: 'image/jpg'\n      });\n    }\n\n    if (validate()) {\n      fetch(API_URL + 'report', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        body: formdata\n      }).then(function (response) {\n        return response.json();\n      }).then(function (results) {\n        console.log(results);\n        alert(\"Thank you for reporting to us. We will update the progress as soon as we can.\");\n        setIsLoading(false);\n        Navigation.pop();\n      }).catch(function (err) {\n        console.log(err);\n        setIsLoading(false);\n      });\n      console.log(formData);\n    } else {\n      alert('Validation Failed');\n      setIsLoading(false);\n    }\n\n    return function () {\n      return ac.abort();\n    };\n  };\n\n  var onChangeDate = function onChangeDate(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    setDate(currentDate);\n    setData(_objectSpread(_objectSpread({}, formData), {}, {\n      date: currentDate\n    }));\n    console.log(formData);\n  };\n\n  var uploadPhoto = function uploadPhoto() {\n    var result;\n    return _regeneratorRuntime.async(function uploadPhoto$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [1, 1],\n              quality: 1\n            }));\n\n          case 2:\n            result = _context3.sent;\n\n            if (!result.cancelled) {\n              setImage(function (oldArray) {\n                return [].concat(_toConsumableArray(oldArray), [result.uri]);\n              });\n            }\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var takePhoto = function takePhoto() {\n    var result;\n    return _regeneratorRuntime.async(function takePhoto$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              allowsEditing: true,\n              aspect: [1, 1]\n            }));\n\n          case 2:\n            result = _context4.sent;\n\n            if (!result.cancelled) {\n              _context4.next = 5;\n              break;\n            }\n\n            return _context4.abrupt(\"return\");\n\n          case 5:\n            setImage(function (oldArray) {\n              return [].concat(_toConsumableArray(oldArray), [result.uri]);\n            });\n\n          case 6:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(_Fragment, {\n    children: [region && _jsx(Modal, {\n      isOpen: showModal,\n      onClose: function onClose() {\n        return setShowModal(false);\n      },\n      children: _jsxs(Modal.Content, {\n        w: \"5/6\",\n        h: \"5/6\",\n        children: [_jsx(Modal.Header, {\n          children: \"Pick Location\"\n        }), _jsx(Modal.CloseButton, {}), _jsx(Modal.Body, {\n          children: _jsxs(Center, {\n            children: [_jsx(MapView, {\n              ref: mapRef,\n              style: styles.map,\n              provider: PROVIDER_GOOGLE,\n              showsUserLocation: true,\n              showsPointsOfInterest: true,\n              showsMyLocationButton: true,\n              followsUserLocation: true,\n              initialRegion: {\n                latitude: region.coords.latitude,\n                longitude: region.coords.longitude,\n                latitudeDelta: 0.005,\n                longitudeDelta: 0.005\n              },\n              onRegionChangeComplete: onRegionChange\n            }), _jsxs(HStack, {\n              width: \"100%\",\n              space: 5,\n              alignItems: \"center\",\n              px: \"1\",\n              py: \"1\",\n              style: {\n                position: \"absolute\",\n                top: -6\n              },\n              children: [_jsx(Input, {\n                placeholder: \"Search\",\n                variant: \"filled\",\n                width: \"85%\",\n                bg: \"white\",\n                borderRadius: \"10\",\n                py: \"2\",\n                px: \"2\",\n                mr: \"-3\",\n                placeholderTextColor: \"gray.400\",\n                _hover: {\n                  bg: 'gray.200',\n                  borderWidth: 0\n                },\n                borderWidth: \"0\",\n                _web: {\n                  _focus: {\n                    style: {\n                      boxShadow: 'none'\n                    }\n                  }\n                },\n                style: {\n                  shadowColor: '#ccc',\n                  shadowOffset: {\n                    width: 0,\n                    height: 3\n                  },\n                  shadowOpacity: 0.8,\n                  shadowRadius: 5\n                },\n                InputLeftElement: _jsx(Icon, {\n                  ml: \"2\",\n                  size: \"4\",\n                  color: \"gray.500\",\n                  as: _jsx(Ionicons, {\n                    name: \"ios-search\"\n                  })\n                }),\n                onChangeText: function onChangeText(value) {\n                  return setSearch(value);\n                }\n              }), _jsx(Button, {\n                onPress: function onPress() {\n                  return searchAddress();\n                },\n                style: {\n                  borderRadius: 10,\n                  backgroundColor: \"#1FAA8F\"\n                },\n                leftIcon: _jsx(Icon, {\n                  as: AntDesign,\n                  name: \"search1\",\n                  size: \"xs\"\n                })\n              })]\n            }), _jsxs(VStack, {\n              style: {\n                borderRadius: 15,\n                position: \"absolute\",\n                bottom: 28,\n                backgroundColor: \"white\",\n                shadowColor: '#ccc',\n                shadowOffset: {\n                  width: 0,\n                  height: 3\n                },\n                shadowOpacity: 0.8,\n                shadowRadius: 5\n              },\n              width: \"100%\",\n              alignItems: \"center\",\n              size: \"lg\",\n              p: \"3\",\n              children: [_jsx(Text, {\n                color: \"black\",\n                p: \"1\",\n                mb: \"2\",\n                fontSize: \"xs\",\n                children: address\n              }), _jsx(Button, {\n                onPress: handleAddress,\n                style: {\n                  borderRadius: 25,\n                  backgroundColor: \"#1FAA8F\"\n                },\n                width: \"100%\",\n                alignItems: \"center\",\n                children: _jsx(Text, {\n                  fontSize: \"xs\",\n                  color: \"#fff\",\n                  bold: true,\n                  children: \"Set Location\"\n                })\n              })]\n            }), _jsx(Center, {\n              style: {\n                position: \"absolute\"\n              },\n              children: _jsx(Image, {\n                style: {\n                  height: 28,\n                  width: 28\n                },\n                source: require(\"../../public/assets/map_marker.png\"),\n                alt: \"marker\"\n              })\n            })]\n          })\n        })]\n      })\n    }), _jsx(ScrollView, {\n      children: _jsxs(VStack, {\n        width: \"100%\",\n        p: \"5\",\n        space: 3,\n        children: [_jsxs(FormControl, {\n          isRequired: true,\n          isInvalid: 'name' in errors,\n          children: [_jsx(FormControl.Label, {\n            _text: {\n              bold: true\n            },\n            children: \"Title\"\n          }), _jsx(Input, {\n            style: styles.input,\n            backgroundColor: \"#EAEAEA\",\n            p: \"3\",\n            placeholder: \"Title\",\n            onChangeText: function onChangeText(value) {\n              return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                title: value\n              }));\n            }\n          }), errors.name === undefined && _jsx(FormControl.ErrorMessage, {\n            children: errors.name\n          })]\n        }), _jsx(HStack, {\n          children: _jsxs(FormControl, {\n            w: \"100%\",\n            isRequired: true,\n            isInvalid: 'category' in errors,\n            children: [_jsx(FormControl.Label, {\n              _text: {\n                bold: true\n              },\n              children: \"Category\"\n            }), _jsxs(Select, {\n              accessibilityLabel: \"Choose Service\",\n              placeholder: \"Choose Category\",\n              _selectedItem: {\n                bg: \"teal.600\",\n                endIcon: _jsx(CheckIcon, {\n                  size: 5\n                })\n              },\n              mt: \"1\",\n              onValueChange: function onValueChange(value) {\n                return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                  category: value\n                }));\n              },\n              children: [_jsx(Select.Item, {\n                label: \"Environment\",\n                value: \"environment\"\n              }), _jsx(Select.Item, {\n                label: \"Facility\",\n                value: \"facility\"\n              }), _jsx(Select.Item, {\n                label: \"Others\",\n                value: \"others\"\n              })]\n            }), _jsx(FormControl.ErrorMessage, {\n              leftIcon: _jsx(WarningOutlineIcon, {\n                size: \"xs\"\n              }),\n              children: \"Please make a selection!\"\n            })]\n          })\n        }), _jsxs(FormControl, {\n          isRequired: true,\n          isInvalid: 'location' in errors,\n          children: [_jsx(FormControl.Label, {\n            _text: {\n              bold: true\n            },\n            children: \"Location\"\n          }), _jsx(Button, {\n            onPress: function onPress() {\n              return setShowModal(true);\n            },\n            style: styles.input,\n            backgroundColor: \"#EAEAEA\",\n            p: \"3\",\n            children: _jsx(Text, {\n              children: formData.location\n            })\n          }), errors.location === undefined ? _jsx(FormControl.ErrorMessage, {\n            children: errors.location\n          }) : _jsx(_Fragment, {})]\n        }), _jsxs(FormControl, {\n          isRequired: true,\n          isInvalid: 'description' in errors,\n          children: [_jsx(FormControl.Label, {\n            _text: {\n              bold: true\n            },\n            children: \"Description\"\n          }), _jsx(TextArea, {\n            h: \"40\",\n            style: styles.input,\n            backgroundColor: \"#EAEAEA\",\n            p: \"3\",\n            placeholder: \"Description\",\n            onChangeText: function onChangeText(value) {\n              return setData(_objectSpread(_objectSpread({}, formData), {}, {\n                description: value\n              }));\n            }\n          }), errors.description === undefined ? _jsx(FormControl.ErrorMessage, {\n            children: errors.description\n          }) : _jsx(_Fragment, {})]\n        }), _jsxs(HStack, {\n          space: 2,\n          mt: \"3\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          children: [_jsx(Button, {\n            w: \"48%\",\n            style: styles.button,\n            backgroundColor: \"transparent\",\n            onPress: uploadPhoto,\n            children: _jsx(HStack, {\n              space: 2,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              children: _jsx(Text, {\n                bold: true,\n                children: \"Upload Photo\"\n              })\n            })\n          }), _jsx(Button, {\n            w: \"48%\",\n            style: styles.button,\n            backgroundColor: \"transparent\",\n            onPress: takePhoto,\n            children: _jsx(HStack, {\n              space: 2,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              children: _jsx(Text, {\n                bold: true,\n                children: \"Take Photo\"\n              })\n            })\n          })]\n        }), _jsx(HStack, {\n          space: 1,\n          children: image.map(function (e) {\n            return _jsx(Image, {\n              source: {\n                uri: e\n              },\n              alt: \"Alternate Image\",\n              size: \"md\"\n            });\n          })\n        }), _jsx(Button, {\n          block: true,\n          mt: \"5\",\n          backgroundColor: \"#1FAA8F\",\n          style: styles.button,\n          onPress: onSubmit,\n          children: _jsx(Text, {\n            bold: true,\n            color: \"white\",\n            children: \"Submit\"\n          })\n        })]\n      })\n    })]\n  });\n};\n\nexport default (function () {\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(Center, {\n      flex: 0,\n      p: \"3\",\n      children: _jsx(SubmitReport, {})\n    })\n  });\n});\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  button: {\n    borderRadius: 20,\n    borderColor: \"#1FAA8F\",\n    borderWidth: 2\n  },\n  input: {\n    borderRadius: 20,\n    fontSize: 14\n  },\n  datepicker: {\n    width: 130,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  map: {\n    width: 330,\n    height: 490\n  }\n});","map":{"version":3,"sources":["/Users/weiherr/Desktop/FYP/MyRecycle/mobile-app/screens/report/SubmitReport.js"],"names":["NativeBaseProvider","Button","FormControl","Input","VStack","Center","Image","HStack","Select","CheckIcon","WarningOutlineIcon","TextArea","Text","Icon","ScrollView","Modal","React","useState","useRef","useEffect","useContext","DateTimePicker","DatePicker","useNavigation","useRoute","AntDesign","Ionicons","Entypo","MapView","PROVIDER_GOOGLE","Geocoder","ImagePicker","AsyncStorage","API_URL","Location","Permissions","LoadingContext","API_KEY","init","SubmitReport","Navigation","title","category","date","Date","location","description","reporter_email","status","formData","setData","userData","setUserData","errors","setErrors","setDate","showModal","setShowModal","image","setImage","mapRef","setIsLoading","getUserData","getItem","value","JSON","parse","console","log","region","setRegion","currentLocation","setCurrentLocation","search","setSearch","address","setAddress","requestForegroundPermissionsAsync","warn","getCurrentPositionAsync","searchAddress","from","then","json","results","geometry","target","latitude","lat","longitude","lng","latitudeDelta","longitudeDelta","current","animateToRegion","catch","error","alert","onRegionChange","addressComponent","formatted_address","handleAddress","validate","name","prevState","state","undefined","onSubmit","ac","AbortController","formdata","FormData","append","toUTCString","id","index","length","uri","type","fetch","method","headers","body","response","pop","err","abort","onChangeDate","event","selectedDate","currentDate","uploadPhoto","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","oldArray","takePhoto","launchCameraAsync","styles","map","coords","position","top","bg","borderWidth","_focus","style","boxShadow","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","borderRadius","backgroundColor","bottom","require","bold","input","endIcon","button","e","StyleSheet","create","flex","justifyContent","borderColor","fontSize","datepicker","display","alignItems"],"mappings":"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","sourcesContent":["import { NativeBaseProvider, Button, FormControl, Input, VStack, Center, Image, HStack, Select, CheckIcon, WarningOutlineIcon, TextArea, Text, Icon, ScrollView, Modal } from \"native-base\";\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { View, StyleSheet, ImageBackground, TouchableOpacity, Dimensions } from \"react-native\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport DatePicker from \"react-datepicker\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { AntDesign, Ionicons, Entypo } from \"@expo/vector-icons\"\nimport MapView, {PROVIDER_GOOGLE} from \"react-native-maps\";\nimport Geocoder from 'react-native-geocoding';\nimport * as ImagePicker from 'expo-image-picker';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport API_URL from '../../API_URL';\nimport * as Location from 'expo-location';\nimport * as Permissions from \"expo-permissions\";\nimport { LoadingContext } from \"../../context/context\";\n\nconst API_KEY = \"AIzaSyCQoDI7E-OJ9RCK4MN7ykJqISCjIO6DwoU\";\n\nGeocoder.init(API_KEY);\n\nconst SubmitReport = () => {\n\n  // var addressPicked = JSON.stringify(useRoute().params.address).replace('\"','').replace('\"','');\n\n  const Navigation = useNavigation(); \n\n  const [formData, setData] = useState({\n    title:\"\",\n    category:\"\",\n    date: new Date(),\n    location: \"\",\n    description:\"\",\n    reporter_email: \"\",\n    status: \"Pending\"\n  });\n\n  const [userData, setUserData] = useState();\n  const [errors, setErrors] = useState({});\n  const [date, setDate] = useState(new Date());\n  const [showModal, setShowModal] = useState(false);\n  const [image, setImage] = useState([]);\n\n  const mapRef = useRef(null);\n  const { setIsLoading } = useContext(LoadingContext);\n\n  //get user data\n  const getUserData = async () => {\n    setIsLoading(true);\n    try {\n      const value = await AsyncStorage.getItem('user');\n      if (value !== null) {\n        // We have data!!\n        setUserData(JSON.parse(value));\n      }\n      setIsLoading(false);\n    } catch (error) {\n      // Error retrieving data\n      console.log(error);\n      setIsLoading(false);\n    }\n  }; \n\n  //get user data\n  useEffect(() => {\n    getUserData();\n  }, [])\n\n  const [region, setRegion] = useState(null);\n\n  //get current location\n  const [currentLocation, setCurrentLocation] = useState(null);\n\n  //search text\n  const [search, setSearch] = useState(\"\");\n\n  //address to pass\n  const [address, setAddress] = useState(\"\");\n\n  useEffect(() => {\n\n    setIsLoading(true);\n\n    //get current location\n      (async () => {\n        let { status } = await Location.requestForegroundPermissionsAsync();\n        if (status !== 'granted') {\n          console.warn('Permission to access location was denied');\n          return;\n        }\n        let location = await Location.getCurrentPositionAsync({});\n        setRegion(location);\n        setCurrentLocation(location);\n        setIsLoading(false);\n\n      })();\n      \n  }, [])\n\n  //search address\n  const searchAddress = () => {\n\n      //converting text to coordinate\n      Geocoder.from(search)\n  .then(json => {\n    var location = json.results[0].geometry.location;\n          var target = {\n              latitude: location.lat,\n              longitude: location.lng,\n              latitudeDelta: 0.001,\n              longitudeDelta: 0.001,\n            };\n          setAddress(search);\n          //animate the mapview\n          mapRef.current.animateToRegion(target, 3 * 1000);\n  })\n  .catch(error => {\n          console.warn(error);\n          alert(\"Address not found.\");\n      });\n  }\n\n  //on Drag mapview\n  const onRegionChange = (region) => {\n\n      //converting coordinate to text\n      Geocoder.from(region.latitude, region.longitude)\n  .then(json => {\n        var addressComponent = json.results[0].formatted_address;\n          setAddress(addressComponent);\n  })\n  .catch(error => console.warn(error));\n  }\n\n  const handleAddress = () => {\n    setData({ ...formData,location: address});\n    setShowModal(false);\n  }\n\n  //validation\n  const validate = () => {\n    if (formData.title === \"\") {\n      setErrors({ ...errors,\n        name: 'Title is required'\n      });\n      return false;\n    } \n    else {\n      setErrors(prevState =>{ \n        const state = {...prevState};\n        state.name = undefined;\n        return state;\n      });      \n    };\n    if (formData.category === \"\") {\n      setErrors({ ...errors,\n        category: 'Category is required'\n      });\n      return false;\n    }\n    if (formData.location === \"\") {\n      setErrors({ ...errors,\n        location: 'Location is required'\n      });\n      return false;\n    }\n    if (formData.description === \"\") {\n      setErrors({ ...errors,\n        description: 'Description is required'\n      });\n      return false;\n    }\n    // else if (formData.name.length < 3) {\n    //   setErrors({ ...errors,\n    //     name: 'Name is too short'\n    //   });\n    //   return false;\n    // }\n    return true;\n    // if(formData.title !== \"\" && formData.category !== \"\" && formData.location !== \"\" && formData.description !== \"\") return true;\n    // else return false;\n  };\n\n  const onSubmit = () => {\n\n    const ac = new AbortController();\n\n    setIsLoading(true);\n\n    setData({ ...formData,date: date});\n\n    let formdata = new FormData();\n    formdata.append(\"title\", formData.title)\n    formdata.append(\"description\", formData.description)\n    formdata.append(\"date\", formData.date.toUTCString())\n    formdata.append(\"category\", formData.category)\n    formdata.append(\"location\", formData.location)\n    formdata.append(\"status\", \"Pending\")\n    formdata.append(\"userId\", userData.id)\n\n    for (let index = 0 ; index < image.length ; index++) {\n      formdata.append(\"media\", {uri: image[index], name: 'image.jpg', type: 'image/jpg'});\n    }\n  \n    if(validate()){\n  \n      fetch( API_URL + 'report', {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'multipart/form-data',\n          },\n          body: formdata,\n      })\n      .then(response => response.json())\n      .then(results => { \n          console.log(results);\n          alert(\"Thank you for reporting to us. We will update the progress as soon as we can.\");     \n          setIsLoading(false);\n          Navigation.pop();          \n      })\n      .catch(err => {\n          console.log(err);\n          setIsLoading(false);\n      });\n      console.log(formData);\n    }else{\n      alert('Validation Failed');\n      setIsLoading(false);\n    }\n\n    return () => ac.abort();\n\n  };\n\n\nconst onChangeDate = (event, selectedDate) => {\n  const currentDate = selectedDate || date;\n  setDate(currentDate);\n  setData({ ...formData,date: currentDate});\n  console.log(formData);\n};\n\n\nconst uploadPhoto = async () => {\n  // No permissions request is necessary for launching the image library\n  let result = await ImagePicker.launchImageLibraryAsync({\n    mediaTypes: ImagePicker.MediaTypeOptions.All,\n    allowsEditing: true,\n    aspect: [1, 1],\n    quality: 1,\n  });\n\n  if (!result.cancelled) {\n    setImage(oldArray => [...oldArray, result.uri]);\n  }\n\n};\n\nconst takePhoto = async () => {\n\n  let result = await ImagePicker.launchCameraAsync({\n    allowsEditing: true,\n    aspect: [1, 1],\n  });\n\n  if (result.cancelled) {\n    return;\n  }\n\n  setImage(oldArray => [...oldArray, result.uri]);\n\n};\n\n  return (\n    <>\n    {region && \n    <Modal isOpen={showModal} onClose={() => setShowModal(false)}>\n    <Modal.Content w=\"5/6\" h=\"5/6\">\n      <Modal.Header>Pick Location</Modal.Header>\n      <Modal.CloseButton/>\n      <Modal.Body>\n      <Center>\n        <MapView\n        ref={mapRef}\n        style={styles.map}\n        provider={PROVIDER_GOOGLE}\n        showsUserLocation={true}\n        showsPointsOfInterest={true}\n        showsMyLocationButton={true}\n        followsUserLocation={true}\n        initialRegion={{\n          latitude: region.coords.latitude,\n          longitude: region.coords.longitude,\n          latitudeDelta: 0.005,\n          longitudeDelta: 0.005,\n        }}\n        onRegionChangeComplete={onRegionChange}\n        />\n        <HStack width=\"100%\" space={5} alignItems=\"center\" px=\"1\" py=\"1\" style={{position:\"absolute\", top:-6}}>\n            <Input\n            placeholder=\"Search\"\n            variant=\"filled\"\n            width=\"85%\"\n            bg=\"white\"\n            borderRadius=\"10\"\n            py=\"2\"\n            px=\"2\"\n            mr=\"-3\"\n            placeholderTextColor=\"gray.400\"\n            _hover={{ bg: 'gray.200', borderWidth: 0 }}\n            borderWidth=\"0\"\n            _web={{\n                _focus: { style: { boxShadow: 'none' } },\n            }}\n            style={{\n                shadowColor: '#ccc',\n                shadowOffset: { width: 0, height: 3 },\n                shadowOpacity: 0.8,\n                shadowRadius: 5,\n            }}                \n            InputLeftElement={\n                <Icon\n                ml=\"2\"\n                size=\"4\"\n                color=\"gray.500\"\n                as={<Ionicons name=\"ios-search\" />}\n                />\n                \n            }\n            onChangeText={value => setSearch(value)}\n            />\n            <Button onPress={() => searchAddress()} style={{borderRadius:10, backgroundColor:\"#1FAA8F\"}} leftIcon={<Icon as={AntDesign} name=\"search1\" size=\"xs\"/>}></Button>\n\n        </HStack>\n        <VStack \n        style={{\n            borderRadius:15, \n            position:\"absolute\", \n            bottom:28, \n            backgroundColor:\"white\",\n            shadowColor: '#ccc',\n            shadowOffset: { width: 0, height: 3 },\n            shadowOpacity: 0.8,\n            shadowRadius: 5,}} \n        width=\"100%\" alignItems=\"center\" size=\"lg\" p=\"3\">\n            <Text color=\"black\" p=\"1\" mb=\"2\" fontSize=\"xs\">{address}</Text>\n            <Button onPress={handleAddress} style={{borderRadius:25, backgroundColor:\"#1FAA8F\"}} width=\"100%\" alignItems=\"center\">\n              <Text fontSize=\"xs\" color=\"#fff\" bold>Set Location</Text>\n            </Button>\n        </VStack>\n        <Center style={{position:\"absolute\"}}>\n            <Image style={{height:28, width:28}} source={require('../../public/assets/map_marker.png')} alt=\"marker\"/>\n        </Center>\n      </Center>\n      </Modal.Body>\n    </Modal.Content>\n  </Modal>}\n\n    <ScrollView>\n    <VStack width=\"100%\" p=\"5\" space={3}>\n      <FormControl isRequired isInvalid={'name' in errors}>\n        <FormControl.Label _text={{bold: true}}>Title</FormControl.Label>\n        <Input style={styles.input} backgroundColor=\"#EAEAEA\" p=\"3\" placeholder=\"Title\" onChangeText={value => setData({ ...formData,\n        title: value\n      })} />\n        {errors.name === undefined && <FormControl.ErrorMessage>{errors.name}</FormControl.ErrorMessage>}\n      </FormControl>\n      <HStack>\n        {/* <FormControl w=\"50%\" isRequired isInvalid={'date' in errors}>\n          <FormControl.Label _text={{bold: true}}>Date</FormControl.Label>\n            <DateTimePicker\n            // testID=\"dateTimePicker\"\n            value={date}\n            mode=\"datetime\"\n            is24Hour={true}\n            display=\"default\"\n            onChange={onChangeDate}\n            style={styles.datepicker}\n            />\n\n        </FormControl> */}\n\n        <FormControl w=\"100%\" isRequired isInvalid={'category' in errors}>\n        <FormControl.Label _text={{bold: true}}>Category</FormControl.Label>\n        <Select accessibilityLabel=\"Choose Service\" placeholder=\"Choose Category\" _selectedItem={{\n        bg: \"teal.600\",\n        endIcon: <CheckIcon size={5} />\n        }} mt=\"1\"\n        onValueChange={value => setData({ ...formData,category: value})}>\n          <Select.Item label=\"Environment\" value=\"environment\" />\n          <Select.Item label=\"Facility\" value=\"facility\" />\n          <Select.Item label=\"Others\" value=\"others\" />\n        </Select>\n        <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n          Please make a selection!\n        </FormControl.ErrorMessage>\n      </FormControl>\n      </HStack>\n\n      <FormControl isRequired isInvalid={'location' in errors}>\n        <FormControl.Label _text={{bold: true}}>Location</FormControl.Label>\n        <Button onPress={()=>setShowModal(true)} style={styles.input} backgroundColor=\"#EAEAEA\" p=\"3\">\n          <Text>{formData.location}</Text>\n        </Button>\n        {errors.location === undefined ? <FormControl.ErrorMessage>{errors.location}</FormControl.ErrorMessage> : <></>}\n      </FormControl>\n\n      <FormControl isRequired isInvalid={'description' in errors}>\n        <FormControl.Label _text={{bold: true}}>Description</FormControl.Label>\n        <TextArea h=\"40\" style={styles.input} backgroundColor=\"#EAEAEA\" p=\"3\" placeholder=\"Description\" onChangeText={value => setData({ ...formData,\n        description: value\n      })} />\n        {errors.description === undefined ?  <FormControl.ErrorMessage>{errors.description}</FormControl.ErrorMessage> : <></>}\n      </FormControl>\n\n        <HStack space={2} mt=\"3\" alignItems=\"center\" justifyContent=\"center\">\n        <Button w=\"48%\" style={styles.button} backgroundColor=\"transparent\" onPress={uploadPhoto}>\n          <HStack space={2} alignItems=\"center\" justifyContent=\"center\">\n            <Text bold>Upload Photo</Text>\n          </HStack>\n        </Button>\n        <Button w=\"48%\" style={styles.button} backgroundColor=\"transparent\" onPress={takePhoto}>\n          <HStack space={2} alignItems=\"center\" justifyContent=\"center\">\n            <Text bold>Take Photo</Text>\n          </HStack>\n        </Button>\n        </HStack>\n\n        <HStack space={1}>\n          {image.map( e =>\n          <Image source={{uri: e}} alt=\"Alternate Image\" size=\"md\"/>\n          )}\n        </HStack>\n\n      <Button block mt=\"5\" backgroundColor=\"#1FAA8F\" style={styles.button} onPress={onSubmit}>\n        <Text bold color=\"white\">Submit</Text>\n      </Button>\n\n    </VStack>\n    </ScrollView>\n    </>\n  );\n};\n\nexport default () => {\n  return (\n    <NativeBaseProvider>\n      <Center flex={0} p=\"3\">\n        <SubmitReport/>\n      </Center>\n    </NativeBaseProvider>\n  )\n};\n\nconst styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  button: {\n    borderRadius:20, \n    borderColor:\"#1FAA8F\", \n    borderWidth:2,\n  },\n  input: {\n    borderRadius:20, \n    fontSize:14,\n  },\n  datepicker: {\n    width:130,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  map: {\n    width: 330,\n    height: 490,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}