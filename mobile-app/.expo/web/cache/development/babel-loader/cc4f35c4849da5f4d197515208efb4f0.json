{"ast":null,"code":"import _extends2 from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { AccordionContext, AccordionItemContext } from \"./Context\";\nimport Collapse from \"../Collapse\";\nimport { useThemeProps } from \"../../../hooks\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar AccordionDetails = function AccordionDetails(_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useThemeProps = useThemeProps('AccordionDetails', props),\n      newProps = _extends2({}, _useThemeProps);\n\n  var _React$useContext = React.useContext(AccordionItemContext),\n      isOpen = _React$useContext.isOpen;\n\n  var _React$useContext2 = React.useContext(AccordionContext),\n      AnimationProps = _React$useContext2.AnimationProps;\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Collapse, _extends({}, AnimationProps, newProps, {\n    isOpen: isOpen,\n    ref: ref\n  }), children);\n};\n\nexport default React.memo(React.forwardRef(AccordionDetails));","map":{"version":3,"sources":["AccordionDetails.tsx"],"names":["AccordionDetails","props","newProps","useThemeProps","isOpen","React","AnimationProps","useHasResponsiveProps","ref"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,gBAAA,EAAA,oBAAA;AACA,OAAA,QAAA;AAMA,SAAA,aAAA;AACA,SAAA,qBAAA;;AAEA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAA,GAAA,EAGpB;AAAA,MAFH,QAEG,QAFH,QAEG;AAAA,MAFYC,KAEZ;;AACH,uBAAwBE,aAAa,CAAA,kBAAA,EAArC,KAAqC,CAArC;AAAA,MAAWD,QAAX;;AACA,0BAA+CG,KAAK,CAALA,UAAAA,CAA/C,oBAA+CA,CAA/C;AAAA,MAAQD,MAAR,qBAAQA,MAAR;;AAGA,2BAAmDC,KAAK,CAALA,UAAAA,CALhD,gBAKgDA,CAAnD;AAAA,MAAQC,cAAR,sBAAQA,cAAR;;AAIA,MAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AACD;;AACD,SACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EAAA,cAAA,EAAA,QAAA,EAAA;AAA4C,IAAA,MAAM,EAAlD,MAAA;AAA4D,IAAA,GAAG,EAAEC;AAAjE,GAAA,CAAA,EADF,QACE,CADF;AAfF,CAAA;;AAsBA,eAAeH,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,gBAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { AccordionContext, AccordionItemContext } from './Context';\nimport Collapse from '../Collapse';\nimport type {\n  IAccordionDetailsProps,\n  IAccordionContextProps,\n  IAccordionItemContextProps,\n} from './types';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AccordionDetails = (\n  { children, ...props }: IAccordionDetailsProps,\n  ref?: any\n) => {\n  const { ...newProps } = useThemeProps('AccordionDetails', props);\n  const { isOpen }: IAccordionItemContextProps = React.useContext(\n    AccordionItemContext\n  );\n  const { AnimationProps }: IAccordionContextProps = React.useContext(\n    AccordionContext\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Collapse {...AnimationProps} {...newProps} isOpen={isOpen} ref={ref}>\n      {children}\n    </Collapse>\n  );\n};\n\nexport default React.memo(React.forwardRef(AccordionDetails));\n"]},"metadata":{},"sourceType":"module"}