{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"progress\", \"onPress\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated, { useAnimatedProps, useAnimatedStyle } from 'react-native-reanimated';\nvar PROGRESS_EPSILON = 0.05;\nvar Overlay = React.forwardRef(function Overlay(_ref, ref) {\n  var progress = _ref.progress,\n      onPress = _ref.onPress,\n      style = _ref.style,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var animatedStyle = useAnimatedStyle(function () {\n    var _f = function _f() {\n      return {\n        opacity: progress.value,\n        zIndex: progress.value > PROGRESS_EPSILON ? 0 : -1\n      };\n    };\n\n    _f._closure = {\n      progress: progress,\n      PROGRESS_EPSILON: PROGRESS_EPSILON\n    };\n    _f.asString = \"function _f(){const{progress,PROGRESS_EPSILON}=jsThis._closure;{return{opacity:progress.value,zIndex:progress.value>PROGRESS_EPSILON?0:-1};}}\";\n    _f.__workletHash = 1802421920871;\n    _f.__location = \"/Users/weiherr/Desktop/FYP/MyRecycle/mobile-app/node_modules/@react-navigation/drawer/lib/module/views/modern/Overlay.js (14:41)\";\n    _f.__optimalization = 3;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var animatedProps = useAnimatedProps(function () {\n    var _f = function _f() {\n      var active = progress.value > PROGRESS_EPSILON;\n      return {\n        pointerEvents: active ? 'auto' : 'none',\n        accessibilityElementsHidden: !active,\n        importantForAccessibility: active ? 'auto' : 'no-hide-descendants'\n      };\n    };\n\n    _f._closure = {\n      progress: progress,\n      PROGRESS_EPSILON: PROGRESS_EPSILON\n    };\n    _f.asString = \"function _f(){const{progress,PROGRESS_EPSILON}=jsThis._closure;{const active=progress.value>PROGRESS_EPSILON;return{pointerEvents:active?'auto':'none',accessibilityElementsHidden:!active,importantForAccessibility:active?'auto':'no-hide-descendants'};}}\";\n    _f.__workletHash = 1603427272892;\n    _f.__location = \"/Users/weiherr/Desktop/FYP/MyRecycle/mobile-app/node_modules/@react-navigation/drawer/lib/module/views/modern/Overlay.js (22:41)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  return React.createElement(Animated.View, _extends({}, props, {\n    ref: ref,\n    style: [styles.overlay, overlayStyle, animatedStyle, style],\n    animatedProps: animatedProps\n  }), React.createElement(Pressable, {\n    onPress: onPress,\n    style: styles.pressable\n  }));\n});\nvar overlayStyle = Platform.select({\n  web: {\n    WebkitTapHighlightColor: 'transparent'\n  },\n  default: {}\n});\nvar styles = StyleSheet.create({\n  overlay: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  }),\n  pressable: {\n    flex: 1\n  }\n});\nexport default Overlay;","map":{"version":3,"sources":["Overlay.tsx"],"names":["React","PROGRESS_EPSILON","Overlay","props","animatedStyle","useAnimatedStyle","opacity","progress","zIndex","animatedProps","useAnimatedProps","active","pointerEvents","accessibilityElementsHidden","importantForAccessibility","styles","pressable","overlayStyle","web","WebkitTapHighlightColor","default","overlay","StyleSheet","backgroundColor","flex"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAA,OAAA;;;;AAEA,OAAA,QAAA,IAAA,gBAAA,EAAA,gBAAA,QAAA,yBAAA;AAKA,IAAMC,gBAAgB,GAAtB,IAAA;AAOA,IAAMC,OAAO,GAAG,KAAK,CAAL,UAAA,CAAiB,SAAA,OAAA,CAAA,IAAA,EAAA,GAAA,EAG/B;AAFA,MAAA,QAAA,GAEA,IAFA,CAAA,QAAA;AAAA,MAAA,OAAA,GAEA,IAFA,CAAA,OAAA;AAAA,MAAA,KAAA,GAEA,IAFA,CAAA,KAAA;AAAA,MAA+BC,KAA/B,4BAEA,IAFA;;AAGA,MAAMC,aAAa,GAAGC,gBAAgB;AAAA,2BAAO;AAC3C,aAAO;AACLC,QAAAA,OAAO,EAAEC,QAAQ,CADZ,KAAA;AAILC,QAAAA,MAAM,EAAED,QAAQ,CAARA,KAAAA,GAAAA,gBAAAA,GAAAA,CAAAA,GAAwC,CAAC;AAJ5C,OAAP;AADF,KAAsC;;AAAA;AAAA,gBAJlCL,QAIkC;AAAA,wBAJxB;AAIwB;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,MAAtC;AASA,MAAMO,aAAa,GAAGC,gBAAgB;AAAA,2BAAO;AAC3C,UAAMC,MAAM,GAAGJ,QAAQ,CAARA,KAAAA,GAAf,gBAAA;AAEA,aAAO;AACLK,QAAAA,aAAa,EAAED,MAAM,GAAA,MAAA,GADhB,MAAA;AAELE,QAAAA,2BAA2B,EAAE,CAFxB,MAAA;AAGLC,QAAAA,yBAAyB,EAAEH,MAAM,GAAA,MAAA,GAAY;AAHxC,OAAP;AAHF,KAAsC;;AAAA;AAAA,gBA3BxC,QA2BwC;AAAA,wBA3BxC;AA2BwC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,MAAtC;AAUA,SACE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEE,IAAA,GAAG,EAFL,GAAA;AAGE,IAAA,KAAK,EAAE,CAACI,MAAM,CAAP,OAAA,EAAA,YAAA,EAAA,aAAA,EAHT,KAGS,CAHT;AAIE,IAAA,aAAa,EAAEN;AAJjB,GAAA,CAAA,EAME,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AAAW,IAAA,OAAO,EAAlB,OAAA;AAA6B,IAAA,KAAK,EAAEM,MAAM,CAACC;AAA3C,GAAA,CANF,CADF;AAvBF,CAAgB,CAAhB;AAmCA,IAAMC,YAAY,GAAG,QAAQ,CAAR,MAAA,CAAwC;AAC3DC,EAAAA,GAAG,EAAE;AAGHC,IAAAA,uBAAuB,EAAE;AAHtB,GADsD;AAM3DC,EAAAA,OAAO,EAAE;AANkD,CAAxC,CAArB;AASA,IAAML,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BM,EAAAA,OAAO,kCACFC,UAAU,CADN,kBAAF;AAELC,IAAAA,eAAe,EAAE;AAFZ,IADwB;AAK/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE;AADG;AALoB,CAAlB,CAAf;AAUA,eAAA,OAAA","sourcesContent":["import * as React from 'react';\nimport { Platform, Pressable, StyleSheet } from 'react-native';\nimport Animated, {\n  useAnimatedProps,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\n\nconst PROGRESS_EPSILON = 0.05;\n\ntype Props = React.ComponentProps<typeof Animated.View> & {\n  progress: Animated.SharedValue<number>;\n  onPress: () => void;\n};\n\nconst Overlay = React.forwardRef(function Overlay(\n  { progress, onPress, style, ...props }: Props,\n  ref: React.Ref<Animated.View>\n) {\n  const animatedStyle = useAnimatedStyle(() => {\n    return {\n      opacity: progress.value,\n      // We don't want the user to be able to press through the overlay when drawer is open\n      // We can send the overlay behind the screen to avoid it\n      zIndex: progress.value > PROGRESS_EPSILON ? 0 : -1,\n    };\n  });\n\n  const animatedProps = useAnimatedProps(() => {\n    const active = progress.value > PROGRESS_EPSILON;\n\n    return {\n      pointerEvents: active ? 'auto' : 'none',\n      accessibilityElementsHidden: !active,\n      importantForAccessibility: active ? 'auto' : 'no-hide-descendants',\n    } as const;\n  });\n\n  return (\n    <Animated.View\n      {...props}\n      ref={ref}\n      style={[styles.overlay, overlayStyle, animatedStyle, style]}\n      animatedProps={animatedProps}\n    >\n      <Pressable onPress={onPress} style={styles.pressable} />\n    </Animated.View>\n  );\n});\n\nconst overlayStyle = Platform.select<Record<string, string>>({\n  web: {\n    // Disable touch highlight on mobile Safari.\n    // WebkitTapHighlightColor must be used outside of StyleSheet.create because react-native-web will omit the property.\n    WebkitTapHighlightColor: 'transparent',\n  },\n  default: {},\n});\n\nconst styles = StyleSheet.create({\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  pressable: {\n    flex: 1,\n  },\n});\n\nexport default Overlay;\n"]},"metadata":{},"sourceType":"module"}