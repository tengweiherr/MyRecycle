{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"shouldFocusWrap\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useId as $1Hnir$useId, mergeProps as $1Hnir$mergeProps, filterDOMProps as $1Hnir$filterDOMProps, useSlotId as $1Hnir$useSlotId } from \"@react-aria/utils\";\nimport { useLongPress as $1Hnir$useLongPress, usePress as $1Hnir$usePress, useHover as $1Hnir$useHover, isFocusVisible as $1Hnir$isFocusVisible } from \"@react-aria/interactions\";\nimport { useMessageFormatter as $1Hnir$useMessageFormatter } from \"@react-aria/i18n\";\nimport { useOverlayTrigger as $1Hnir$useOverlayTrigger } from \"@react-aria/overlays\";\nimport { useSelectableList as $1Hnir$useSelectableList, useSelectableItem as $1Hnir$useSelectableItem } from \"@react-aria/selection\";\nimport { getItemCount as $1Hnir$getItemCount } from \"@react-stately/collections\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $168583247155ddda$exports = {};\n$parcel$export($168583247155ddda$exports, \"useMenuTrigger\", function () {\n  return $168583247155ddda$export$dc9c12ed27dd1b49;\n});\nvar $9bdd31893c9700c3$exports = {};\nvar $c0398ad35c3639b7$exports = {};\n$c0398ad35c3639b7$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"اضغط مطولاً أو اضغط على Alt + السهم لأسفل لفتح القائمة\\\"}\");\nvar $7af657c4165927c3$exports = {};\n$7af657c4165927c3$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Натиснете продължително или натиснете Alt+ стрелка надолу, за да отворите менюто\\\"}\");\nvar $d95d4da6d531ab81$exports = {};\n$d95d4da6d531ab81$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Dlouhým stiskem nebo stisknutím kláves Alt + šipka dolů otevřete nabídku\\\"}\");\nvar $24ebda9c775dca17$exports = {};\n$24ebda9c775dca17$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Langt tryk eller tryk på Alt + pil ned for at åbne menuen\\\"}\");\nvar $743e0dfca6cab1e9$exports = {};\n$743e0dfca6cab1e9$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Drücken Sie lange oder drücken Sie Alt + Nach-unten, um das Menü zu öffnen\\\"}\");\nvar $a2f41026e05f1c84$exports = {};\n$a2f41026e05f1c84$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Πιέστε παρατεταμένα ή πατήστε Alt + κάτω βέλος για να ανοίξετε το μενού\\\"}\");\nvar $43b800e97c901737$exports = {};\n$43b800e97c901737$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Long press or press Alt + ArrowDown to open menu\\\"}\");\nvar $442f5f6ac211e29f$exports = {};\n$442f5f6ac211e29f$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Mantenga pulsado o pulse Alt + flecha abajo para abrir el menú\\\"}\");\nvar $dff280acfeb2d8ac$exports = {};\n$dff280acfeb2d8ac$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Menüü avamiseks vajutage pikalt või vajutage klahve Alt + allanool\\\"}\");\nvar $51608325613944d7$exports = {};\n$51608325613944d7$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Avaa valikko painamalla pohjassa tai näppäinyhdistelmällä Alt + Alanuoli\\\"}\");\nvar $c4a1b1eabeaa87be$exports = {};\n$c4a1b1eabeaa87be$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Appuyez de manière prolongée ou appuyez sur Alt + Flèche vers le bas pour ouvrir le menu.\\\"}\");\nvar $8c74815cdee18d1b$exports = {};\n$8c74815cdee18d1b$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"לחץ לחיצה ארוכה או הקש Alt + ArrowDown כדי לפתוח את התפריט\\\"}\");\nvar $fd0e9ef6a7fe0ec9$exports = {};\n$fd0e9ef6a7fe0ec9$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Dugo pritisnite ili pritisnite Alt + strelicu prema dolje za otvaranje izbornika\\\"}\");\nvar $a89a74a39eba465a$exports = {};\n$a89a74a39eba465a$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Nyomja meg hosszan, vagy nyomja meg az Alt + lefele nyíl gombot a menü megnyitásához\\\"}\");\nvar $edc7c66594a0ae8a$exports = {};\n$edc7c66594a0ae8a$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Premere a lungo o premere Alt + Freccia giù per aprire il menu\\\"}\");\nvar $f1ab51510712db52$exports = {};\n$f1ab51510712db52$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"長押しまたは Alt+下矢印キーでメニューを開く\\\"}\");\nvar $f9b672d9b82fa3d6$exports = {};\n$f9b672d9b82fa3d6$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"길게 누르거나 Alt + 아래쪽 화살표를 눌러 메뉴 열기\\\"}\");\nvar $a385f3910feda499$exports = {};\n$a385f3910feda499$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Norėdami atidaryti meniu, nuspaudę palaikykite arba paspauskite „Alt + ArrowDown“.\\\"}\");\nvar $4f1bde932c441789$exports = {};\n$4f1bde932c441789$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Lai atvērtu izvēlni, turiet nospiestu vai nospiediet taustiņu kombināciju Alt + lejupvērstā bultiņa\\\"}\");\nvar $914a51a8a594d5be$exports = {};\n$914a51a8a594d5be$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Langt trykk eller trykk Alt + PilNed for å åpne menyen\\\"}\");\nvar $89aaf803103bb500$exports = {};\n$89aaf803103bb500$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Druk lang op Alt + pijl-omlaag of druk op Alt om het menu te openen\\\"}\");\nvar $c685891476dbaaca$exports = {};\n$c685891476dbaaca$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Naciśnij i przytrzymaj lub naciśnij klawisze Alt + Strzałka w dół, aby otworzyć menu\\\"}\");\nvar $885879b9b10c2959$exports = {};\n$885879b9b10c2959$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Pressione e segure ou pressione Alt + Seta para baixo para abrir o menu\\\"}\");\nvar $6b39616688a51692$exports = {};\n$6b39616688a51692$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Prima continuamente ou prima Alt + Seta Para Baixo para abrir o menu\\\"}\");\nvar $f26362aed63f47e2$exports = {};\n$f26362aed63f47e2$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Apăsați lung sau apăsați pe Alt + săgeată în jos pentru a deschide meniul\\\"}\");\nvar $06cbade644558bf0$exports = {};\n$06cbade644558bf0$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Нажмите и удерживайте или нажмите Alt + Стрелка вниз, чтобы открыть меню\\\"}\");\nvar $0a391ff68f9d59b1$exports = {};\n$0a391ff68f9d59b1$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Ponuku otvoríte dlhým stlačením alebo stlačením klávesu Alt + klávesu so šípkou nadol\\\"}\");\nvar $8193cf0e649c7928$exports = {};\n$8193cf0e649c7928$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Za odprtje menija pritisnite in držite gumb ali pritisnite Alt+puščica navzdol\\\"}\");\nvar $f398debcce5a5c55$exports = {};\n$f398debcce5a5c55$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Dugo pritisnite ili pritisnite Alt + strelicu prema dole da otvorite meni\\\"}\");\nvar $9e9fef000aa4c013$exports = {};\n$9e9fef000aa4c013$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Håll nedtryckt eller tryck på Alt + pil nedåt för att öppna menyn\\\"}\");\nvar $c016c8183bbe3d68$exports = {};\n$c016c8183bbe3d68$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Menüyü açmak için uzun basın veya Alt + Aşağı Ok tuşuna basın\\\"}\");\nvar $ca4f6c8462244e62$exports = {};\n$ca4f6c8462244e62$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"Довго або звичайно натисніть комбінацію клавіш Alt і стрілка вниз, щоб відкрити меню\\\"}\");\nvar $2d9960c02ccac927$exports = {};\n$2d9960c02ccac927$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"长按或按 Alt + 向下方向键以打开菜单\\\"}\");\nvar $f1b682a4c8c5631c$exports = {};\n$f1b682a4c8c5631c$exports = JSON.parse(\"{\\\"longPressMessage\\\":\\\"長按或按 Alt+向下鍵以開啟功能表\\\"}\");\n$9bdd31893c9700c3$exports = {\n  \"ar-AE\": $c0398ad35c3639b7$exports,\n  \"bg-BG\": $7af657c4165927c3$exports,\n  \"cs-CZ\": $d95d4da6d531ab81$exports,\n  \"da-DK\": $24ebda9c775dca17$exports,\n  \"de-DE\": $743e0dfca6cab1e9$exports,\n  \"el-GR\": $a2f41026e05f1c84$exports,\n  \"en-US\": $43b800e97c901737$exports,\n  \"es-ES\": $442f5f6ac211e29f$exports,\n  \"et-EE\": $dff280acfeb2d8ac$exports,\n  \"fi-FI\": $51608325613944d7$exports,\n  \"fr-FR\": $c4a1b1eabeaa87be$exports,\n  \"he-IL\": $8c74815cdee18d1b$exports,\n  \"hr-HR\": $fd0e9ef6a7fe0ec9$exports,\n  \"hu-HU\": $a89a74a39eba465a$exports,\n  \"it-IT\": $edc7c66594a0ae8a$exports,\n  \"ja-JP\": $f1ab51510712db52$exports,\n  \"ko-KR\": $f9b672d9b82fa3d6$exports,\n  \"lt-LT\": $a385f3910feda499$exports,\n  \"lv-LV\": $4f1bde932c441789$exports,\n  \"nb-NO\": $914a51a8a594d5be$exports,\n  \"nl-NL\": $89aaf803103bb500$exports,\n  \"pl-PL\": $c685891476dbaaca$exports,\n  \"pt-BR\": $885879b9b10c2959$exports,\n  \"pt-PT\": $6b39616688a51692$exports,\n  \"ro-RO\": $f26362aed63f47e2$exports,\n  \"ru-RU\": $06cbade644558bf0$exports,\n  \"sk-SK\": $0a391ff68f9d59b1$exports,\n  \"sl-SI\": $8193cf0e649c7928$exports,\n  \"sr-SP\": $f398debcce5a5c55$exports,\n  \"sv-SE\": $9e9fef000aa4c013$exports,\n  \"tr-TR\": $c016c8183bbe3d68$exports,\n  \"uk-UA\": $ca4f6c8462244e62$exports,\n  \"zh-CN\": $2d9960c02ccac927$exports,\n  \"zh-TW\": $f1b682a4c8c5631c$exports\n};\n\nfunction $168583247155ddda$export$dc9c12ed27dd1b49(props, state, ref) {\n  var _props$type = props.type,\n      type = _props$type === void 0 ? 'menu' : _props$type,\n      isDisabled = props.isDisabled,\n      _props$trigger = props.trigger,\n      trigger = _props$trigger === void 0 ? 'press' : _props$trigger;\n  var menuTriggerId = $1Hnir$useId();\n\n  var _$1Hnir$useOverlayTri = $1Hnir$useOverlayTrigger({\n    type: type\n  }, state, ref),\n      triggerProps = _$1Hnir$useOverlayTri.triggerProps,\n      overlayProps = _$1Hnir$useOverlayTri.overlayProps;\n\n  var onKeyDown = function onKeyDown(e) {\n    if (isDisabled) return;\n    if (trigger === 'longPress' && !e.altKey) return;\n    if (ref && ref.current) switch (e.key) {\n      case 'Enter':\n      case ' ':\n        if (trigger === 'longPress') return;\n\n      case 'ArrowDown':\n        if (!('continuePropagation' in e)) e.stopPropagation();\n        e.preventDefault();\n        state.toggle('first');\n        break;\n\n      case 'ArrowUp':\n        if (!('continuePropagation' in e)) e.stopPropagation();\n        e.preventDefault();\n        state.toggle('last');\n        break;\n    }\n  };\n\n  var formatMessage = $1Hnir$useMessageFormatter($parcel$interopDefault($9bdd31893c9700c3$exports));\n\n  var _$1Hnir$useLongPress = $1Hnir$useLongPress({\n    accessibilityDescription: formatMessage('longPressMessage'),\n    onLongPressStart: function onLongPressStart() {\n      state.close();\n    },\n    onLongPress: function onLongPress() {\n      state.open('first');\n    }\n  }),\n      longPressProps = _$1Hnir$useLongPress.longPressProps;\n\n  var pressProps = {\n    onPressStart: function onPressStart(e) {\n      if (e.pointerType !== 'touch' && e.pointerType !== 'keyboard' && !isDisabled) state.toggle(e.pointerType === 'virtual' ? 'first' : null);\n    },\n    onPress: function onPress(e) {\n      if (e.pointerType === 'touch' && !isDisabled) state.toggle();\n    }\n  };\n  triggerProps = $1Hnir$mergeProps(triggerProps, trigger === 'press' ? pressProps : longPressProps);\n  return {\n    menuTriggerProps: _objectSpread(_objectSpread({}, triggerProps), {}, {\n      id: menuTriggerId,\n      onKeyDown: onKeyDown\n    }),\n    menuProps: _objectSpread(_objectSpread({}, overlayProps), {}, {\n      'aria-labelledby': menuTriggerId\n    })\n  };\n}\n\nvar $d5336fe17ce95402$exports = {};\n$parcel$export($d5336fe17ce95402$exports, \"useMenu\", function () {\n  return $d5336fe17ce95402$export$38eaa17faae8f579;\n});\n\nfunction $d5336fe17ce95402$export$38eaa17faae8f579(props, state, ref) {\n  var _props$shouldFocusWra = props.shouldFocusWrap,\n      shouldFocusWrap = _props$shouldFocusWra === void 0 ? true : _props$shouldFocusWra,\n      otherProps = _objectWithoutProperties(props, _excluded);\n\n  if (!props['aria-label'] && !props['aria-labelledby']) console.warn('An aria-label or aria-labelledby prop is required for accessibility.');\n  var domProps = $1Hnir$filterDOMProps(props, {\n    labelable: true\n  });\n\n  var _$1Hnir$useSelectable = $1Hnir$useSelectableList(_objectSpread(_objectSpread({}, otherProps), {}, {\n    ref: ref,\n    selectionManager: state.selectionManager,\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    shouldFocusWrap: shouldFocusWrap\n  })),\n      listProps = _$1Hnir$useSelectable.listProps;\n\n  return {\n    menuProps: $1Hnir$mergeProps(domProps, _objectSpread({\n      role: 'menu'\n    }, listProps))\n  };\n}\n\nvar $a2e5df62f93c7633$exports = {};\n$parcel$export($a2e5df62f93c7633$exports, \"useMenuItem\", function () {\n  return $a2e5df62f93c7633$export$9d32628fc2aea7da;\n});\n\nfunction $a2e5df62f93c7633$export$9d32628fc2aea7da(props, state, ref) {\n  var isSelected = props.isSelected,\n      isDisabled = props.isDisabled,\n      key = props.key,\n      onClose = props.onClose,\n      closeOnSelect = props.closeOnSelect,\n      isVirtualized = props.isVirtualized,\n      onAction = props.onAction;\n  var role = 'menuitem';\n  if (state.selectionManager.selectionMode === 'single') role = 'menuitemradio';else if (state.selectionManager.selectionMode === 'multiple') role = 'menuitemcheckbox';\n  var labelId = $1Hnir$useSlotId();\n  var descriptionId = $1Hnir$useSlotId();\n  var keyboardId = $1Hnir$useSlotId();\n  var ariaProps = {\n    'aria-disabled': isDisabled,\n    role: role,\n    'aria-label': props['aria-label'],\n    'aria-labelledby': labelId,\n    'aria-describedby': [descriptionId, keyboardId].filter(Boolean).join(' ') || undefined\n  };\n  if (state.selectionManager.selectionMode !== 'none') ariaProps['aria-checked'] = isSelected;\n\n  if (isVirtualized) {\n    ariaProps['aria-posinset'] = state.collection.getItem(key).index;\n    ariaProps['aria-setsize'] = $1Hnir$getItemCount(state.collection);\n  }\n\n  var onKeyDown = function onKeyDown(e) {\n    if (e.repeat) return;\n\n    switch (e.key) {\n      case ' ':\n        if (!isDisabled && state.selectionManager.selectionMode === 'none' && closeOnSelect !== false && onClose) onClose();\n        break;\n\n      case 'Enter':\n        if (!isDisabled && closeOnSelect !== false && onClose) onClose();\n        break;\n    }\n  };\n\n  var onPressStart = function onPressStart(e) {\n    if (e.pointerType === 'keyboard' && onAction) onAction(key);\n  };\n\n  var onPressUp = function onPressUp(e) {\n    if (e.pointerType !== 'keyboard') {\n      if (onAction) onAction(key);\n      if (onClose && (closeOnSelect !== null && closeOnSelect !== void 0 ? closeOnSelect : state.selectionManager.selectionMode !== 'multiple')) onClose();\n    }\n  };\n\n  var _$1Hnir$useSelectable2 = $1Hnir$useSelectableItem({\n    selectionManager: state.selectionManager,\n    key: key,\n    ref: ref,\n    shouldSelectOnPressUp: true,\n    allowsDifferentPressOrigin: true\n  }),\n      itemProps = _$1Hnir$useSelectable2.itemProps;\n\n  var _$1Hnir$usePress = $1Hnir$usePress({\n    onPressStart: onPressStart,\n    onPressUp: onPressUp,\n    isDisabled: isDisabled\n  }),\n      pressProps = _$1Hnir$usePress.pressProps;\n\n  var _$1Hnir$useHover = $1Hnir$useHover({\n    isDisabled: isDisabled,\n    onHoverStart: function onHoverStart() {\n      if (!$1Hnir$isFocusVisible()) {\n        state.selectionManager.setFocused(true);\n        state.selectionManager.setFocusedKey(key);\n      }\n    }\n  }),\n      hoverProps = _$1Hnir$useHover.hoverProps;\n\n  return {\n    menuItemProps: _objectSpread(_objectSpread({}, ariaProps), $1Hnir$mergeProps(itemProps, pressProps, hoverProps, {\n      onKeyDown: onKeyDown\n    })),\n    labelProps: {\n      id: labelId\n    },\n    descriptionProps: {\n      id: descriptionId\n    },\n    keyboardShortcutProps: {\n      id: keyboardId\n    }\n  };\n}\n\nvar $3e5eb2498db5b506$exports = {};\n$parcel$export($3e5eb2498db5b506$exports, \"useMenuSection\", function () {\n  return $3e5eb2498db5b506$export$73f7a44322579622;\n});\n\nfunction $3e5eb2498db5b506$export$73f7a44322579622(props) {\n  var heading = props.heading,\n      ariaLabel = props['aria-label'];\n  var headingId = $1Hnir$useId();\n  return {\n    itemProps: {\n      role: 'presentation'\n    },\n    headingProps: heading ? {\n      id: headingId,\n      'aria-hidden': true\n    } : {},\n    groupProps: {\n      role: 'group',\n      'aria-label': ariaLabel,\n      'aria-labelledby': heading ? headingId : undefined\n    }\n  };\n}\n\nexport { $168583247155ddda$export$dc9c12ed27dd1b49 as useMenuTrigger, $d5336fe17ce95402$export$38eaa17faae8f579 as useMenu, $a2e5df62f93c7633$export$9d32628fc2aea7da as useMenuItem, $3e5eb2498db5b506$export$73f7a44322579622 as useMenuSection };","map":{"version":3,"sources":["packages/@react-aria/menu/src/useMenuTrigger.ts","packages/@react-aria/menu/intl/*.js","packages/@react-aria/menu/intl/ar-AE.json","packages/@react-aria/menu/intl/bg-BG.json","packages/@react-aria/menu/intl/cs-CZ.json","packages/@react-aria/menu/intl/da-DK.json","packages/@react-aria/menu/intl/de-DE.json","packages/@react-aria/menu/intl/el-GR.json","packages/@react-aria/menu/intl/en-US.json","packages/@react-aria/menu/intl/es-ES.json","packages/@react-aria/menu/intl/et-EE.json","packages/@react-aria/menu/intl/fi-FI.json","packages/@react-aria/menu/intl/fr-FR.json","packages/@react-aria/menu/intl/he-IL.json","packages/@react-aria/menu/intl/hr-HR.json","packages/@react-aria/menu/intl/hu-HU.json","packages/@react-aria/menu/intl/it-IT.json","packages/@react-aria/menu/intl/ja-JP.json","packages/@react-aria/menu/intl/ko-KR.json","packages/@react-aria/menu/intl/lt-LT.json","packages/@react-aria/menu/intl/lv-LV.json","packages/@react-aria/menu/intl/nb-NO.json","packages/@react-aria/menu/intl/nl-NL.json","packages/@react-aria/menu/intl/pl-PL.json","packages/@react-aria/menu/intl/pt-BR.json","packages/@react-aria/menu/intl/pt-PT.json","packages/@react-aria/menu/intl/ro-RO.json","packages/@react-aria/menu/intl/ru-RU.json","packages/@react-aria/menu/intl/sk-SK.json","packages/@react-aria/menu/intl/sl-SI.json","packages/@react-aria/menu/intl/sr-SP.json","packages/@react-aria/menu/intl/sv-SE.json","packages/@react-aria/menu/intl/tr-TR.json","packages/@react-aria/menu/intl/uk-UA.json","packages/@react-aria/menu/intl/zh-CN.json","packages/@react-aria/menu/intl/zh-TW.json","packages/@react-aria/menu/src/useMenu.ts","packages/@react-aria/menu/src/useMenuItem.ts","packages/@react-aria/menu/src/useMenuSection.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,mFAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,6GAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,qGAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,sFAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,uGAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,oGAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,6EAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,2FAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,+FAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,qGAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,sHAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,uFAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,6GAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,iHAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,2FAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,qDAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,4DAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,+GAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,gIAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,mFAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,gGAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,iHAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,oGAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,iGAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,sGAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,qGAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,kHAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,2GAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,sGAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,8FAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,0FAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,iHAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,kDAAX,CAAjB;;ACAA,yBAAc,GAAG,IAAI,CAAC,KAAL,CAAW,+CAAX,CAAjB;AlCkCA,yBAAc,GAAG;AACf,WAAS,yBADM;AAEf,WAAS,yBAFM;AAGf,WAAS,yBAHM;AAIf,WAAS,yBAJM;AAKf,WAAS,yBALM;AAMf,WAAS,yBANM;AAOf,WAAS,yBAPM;AAQf,WAAS,yBARM;AASf,WAAS,yBATM;AAUf,WAAS,yBAVM;AAWf,WAAS,yBAXM;AAYf,WAAS,yBAZM;AAaf,WAAS,yBAbM;AAcf,WAAS,yBAdM;AAef,WAAS,yBAfM;AAgBf,WAAS,yBAhBM;AAiBf,WAAS,yBAjBM;AAkBf,WAAS,yBAlBM;AAmBf,WAAS,yBAnBM;AAoBf,WAAS,yBApBM;AAqBf,WAAS,yBArBM;AAsBf,WAAS,yBAtBM;AAuBf,WAAS,yBAvBM;AAwBf,WAAS,yBAxBM;AAyBf,WAAS,yBAzBM;AA0Bf,WAAS,yBA1BM;AA2Bf,WAAS,yBA3BM;AA4Bf,WAAS,yBA5BM;AA6Bf,WAAS,yBA7BM;AA8Bf,WAAS,yBA9BM;AA+Bf,WAAS,yBA/BM;AAgCf,WAAS,yBAhCM;AAiCf,WAAS,yBAjCM;AAkCf,WAAS;AAlCM,CAAjB;;SDWgB,yC,CAAe,K,EAA6B,K,EAAyB,G,EAA8C;AACjI,oBAII,KAJJ,CAAK,IAAL;AAAA,MACE,IADF,4BACS,MADT;AAAA,MAEE,UAFF,GAII,KAJJ,CACe,UADf;AAAA,uBAII,KAJJ,CAEY,OAFZ;AAAA,MAGE,OAHF,+BAGY,OAHZ;AAMA,MAAI,aAAa,GAAG,YAAK,EAAzB;;AACA,8BAAmC,wBAAiB,CAAC;UAAC;AAAD,GAAD,EAAS,KAAT,EAAgB,GAAhB,CAApD;AAAA,MAAK,YAAL,yBAAK,YAAL;AAAA,MAAmB,YAAnB,yBAAiB,YAAjB;;AAEA,MAAI,SAAS,GAAA,SAAT,SAAS,CAAI,CAAJ,EAAU;AACrB,QAAI,UAAJ,EACE;AAGF,QAAI,OAAO,KAAK,WAAZ,IAAuB,CAAK,CAAC,CAAC,MAAlC,EACE;AAGF,QAAI,GAAG,IAAI,GAAG,CAAC,OAAf,EACE,QAAQ,CAAC,CAAC,GAAV;AACE,WAAK,OAAL;AACA,WAAK,GAAL;AACE,YAAI,OAAO,KAAK,WAAhB,EACE;;AAGJ,WAAK,WAAL;AAEE,YAAE,EAAI,yBAAyB,CAA7B,CAAF,EACE,CAAC,CAAC,eAAF;AAEF,QAAA,CAAC,CAAC,cAAF;AACA,QAAA,KAAK,CAAC,MAAN,CAAa,OAAb;AACA;;AACF,WAAK,SAAL;AACE,YAAE,EAAI,yBAAyB,CAA7B,CAAF,EACE,CAAC,CAAC,eAAF;AAEF,QAAA,CAAC,CAAC,cAAF;AACA,QAAA,KAAK,CAAC,MAAN,CAAa,MAAb;AACA;AArBJ;AAwBH,GAlCD;;AAoCA,MAAI,aAAa,GAAG,0BAAmB,CAAC,sBAAA,CAAA,yBAAA,CAAD,CAAvC;;AACA,6BAAuB,mBAAY,CAAC;AAClC,IAAA,wBAAwB,EAAE,aAAa,CAAC,kBAAD,CADL;AAElC,IAAA,gBAFkC,8BAEf;AACjB,MAAA,KAAK,CAAC,KAAN;AACD,KAJiC;AAKlC,IAAA,WALkC,yBAKpB;AACZ,MAAA,KAAK,CAAC,IAAN,CAAW,OAAX;AACD;AAPiC,GAAD,CAAnC;AAAA,MAAK,cAAL,wBAAK,cAAL;;AAUA,MAAI,UAAU,GAAI;AAChB,IAAA,YADgB,wBACH,CADG,EACA;AAEd,UAAI,CAAC,CAAC,WAAF,KAAkB,OAAlB,IAA6B,CAAC,CAAC,WAAF,KAAkB,UAA/C,IAAyD,CAAK,UAAlE,EAGE,KAAK,CAAC,MAAN,CAAa,CAAC,CAAC,WAAF,KAAkB,SAAlB,GAA8B,OAA9B,GAAwC,IAArD;AAEH,KARe;AAShB,IAAA,OATgB,mBASR,CATQ,EASL;AACT,UAAI,CAAC,CAAC,WAAF,KAAkB,OAAlB,IAAyB,CAAK,UAAlC,EACE,KAAK,CAAC,MAAN;AAEH;AAbe,GAAlB;AAgBA,EAAA,YAAY,GAAG,iBAAU,CAAC,YAAD,EAAe,OAAO,KAAK,OAAZ,GAAsB,UAAtB,GAAmC,cAAlD,CAAzB;AAEA,SAAO;AACL,IAAA,gBAAgB,kCACX,YADW;AAEd,MAAA,EAAE,EAAE,aAFU;iBAGd;AAHc,MADX;AAML,IAAA,SAAS,kCACJ,YADI;AAEP,yBAAmB;AAFZ;AANJ,GAAP;AAWD;;;;;;;SoC1Fe,yC,CAAW,K,EAA2B,K,EAAqB,G,EAAuC;AAChH,8BAGI,KAHJ,CAAK,eAAL;AAAA,MACE,eADF,sCACoB,IADpB;AAAA,MAEK,UAFL,4BAGI,KAHJ;;AAKA,MAAE,CAAG,KAAK,CAAC,YAAD,CAAR,IAAqB,CAAM,KAAK,CAAC,iBAAD,CAAlC,EACE,OAAO,CAAC,IAAR,CAAa,sEAAb;AAGF,MAAI,QAAQ,GAAG,qBAAc,CAAC,KAAD,EAAQ;AAAC,IAAA,SAAS,EAAE;AAAZ,GAAR,CAA7B;;AACA,8BAAkB,wBAAiB,iCAC9B,UAD8B;SAEjC,GAFiC;AAGjC,IAAA,gBAAgB,EAAE,KAAK,CAAC,gBAHS;AAIjC,IAAA,UAAU,EAAE,KAAK,CAAC,UAJe;AAKjC,IAAA,YAAY,EAAE,KAAK,CAAC,YALa;qBAMjC;AANiC,KAAnC;AAAA,MAAK,SAAL,yBAAK,SAAL;;AASA,SAAO;AACL,IAAA,SAAS,EAAE,iBAAU,CAAC,QAAD;AACnB,MAAA,IAAI,EAAE;AADa,OAEhB,SAFgB;AADhB,GAAP;AAMD;;;;;;;SCEe,yC,CAAe,K,EAA0B,K,EAAqB,G,EAA2C;AACvH,MACE,UADF,GAQI,KARJ,CAAK,UAAL;AAAA,MAEE,UAFF,GAQI,KARJ,CACY,UADZ;AAAA,MAGE,GAHF,GAQI,KARJ,CAEY,GAFZ;AAAA,MAIE,OAJF,GAQI,KARJ,CAGK,OAHL;AAAA,MAKE,aALF,GAQI,KARJ,CAIS,aAJT;AAAA,MAME,aANF,GAQI,KARJ,CAKe,aALf;AAAA,MAOE,QAPF,GAQI,KARJ,CAMe,QANf;AAUA,MAAI,IAAI,GAAG,UAAX;AACA,MAAI,KAAK,CAAC,gBAAN,CAAuB,aAAvB,KAAyC,QAA7C,EACE,IAAI,GAAG,eAAP,CADF,KAEO,IAAI,KAAK,CAAC,gBAAN,CAAuB,aAAvB,KAAyC,UAA7C,EACL,IAAI,GAAG,kBAAP;AAGF,MAAI,OAAO,GAAG,gBAAS,EAAvB;AACA,MAAI,aAAa,GAAG,gBAAS,EAA7B;AACA,MAAI,UAAU,GAAG,gBAAS,EAA1B;AAEA,MAAI,SAAS,GAAG;AACd,qBAAiB,UADH;UAEd,IAFc;AAGd,kBAAc,KAAK,CAAC,YAAD,CAHL;AAId,uBAAmB,OAJL;AAKd,wBAAoB,CAAC,aAAD,EAAgB,UAAhB,EAA4B,MAA5B,CAAmC,OAAnC,EAA4C,IAA5C,CAAiD,GAAjD,KAAyD;AAL/D,GAAhB;AAQA,MAAI,KAAK,CAAC,gBAAN,CAAuB,aAAvB,KAAyC,MAA7C,EACE,SAAS,CAAC,cAAD,CAAT,GAA4B,UAA5B;;AAGF,MAAI,aAAJ,EAAmB;AACjB,IAAA,SAAS,CAAC,eAAD,CAAT,GAA6B,KAAK,CAAC,UAAN,CAAiB,OAAjB,CAAyB,GAAzB,EAA8B,KAA3D;AACA,IAAA,SAAS,CAAC,cAAD,CAAT,GAA4B,mBAAY,CAAC,KAAK,CAAC,UAAP,CAAxC;AACD;;AAED,MAAI,SAAS,GAAA,SAAT,SAAS,CAAI,CAAJ,EAAyB;AAGpC,QAAI,CAAC,CAAC,MAAN,EACE;;AAGF,YAAQ,CAAC,CAAC,GAAV;AACE,WAAK,GAAL;AACE,YAAE,CAAG,UAAH,IAAiB,KAAK,CAAC,gBAAN,CAAuB,aAAvB,KAAyC,MAA1D,IAAoE,aAAa,KAAK,KAAtF,IAA+F,OAAjG,EACE,OAAO;AAET;;AACF,WAAK,OAAL;AAEE,YAAE,CAAG,UAAH,IAAiB,aAAa,KAAK,KAAnC,IAA4C,OAA9C,EACE,OAAO;AAET;AAXJ;AAaD,GApBD;;AAsBA,MAAI,YAAY,GAAA,SAAZ,YAAY,CAAI,CAAJ,EAAsB;AACpC,QAAI,CAAC,CAAC,WAAF,KAAkB,UAAlB,IAAgC,QAApC,EACE,QAAQ,CAAC,GAAD,CAAR;AAEH,GAJD;;AAMA,MAAI,SAAS,GAAA,SAAT,SAAS,CAAI,CAAJ,EAAsB;AACjC,QAAI,CAAC,CAAC,WAAF,KAAkB,UAAtB,EAAkC;AAChC,UAAI,QAAJ,EACE,QAAQ,CAAC,GAAD,CAAR;AAKF,UAAI,OAAO,KAAK,aAAa,KAAA,IAAb,IAAA,aAAa,KAAA,KAAA,CAAb,GAAA,aAAA,GAAiB,KAAK,CAAC,gBAAN,CAAuB,aAAvB,KAAyC,UAA/D,CAAX,EACE,OAAO;AAEV;AACF,GAZD;;AAcA,+BAAkB,wBAAiB,CAAC;AAClC,IAAA,gBAAgB,EAAE,KAAK,CAAC,gBADU;SAElC,GAFkC;SAGlC,GAHkC;AAIlC,IAAA,qBAAqB,EAAE,IAJW;AAKlC,IAAA,0BAA0B,EAAE;AALM,GAAD,CAAnC;AAAA,MAAK,SAAL,0BAAK,SAAL;;AAQA,yBAAmB,eAAQ,CAAC;kBAAC,YAAD;eAAe,SAAf;gBAA0B;AAA1B,GAAD,CAA3B;AAAA,MAAK,UAAL,oBAAK,UAAL;;AACA,yBAAmB,eAAQ,CAAC;gBAC1B,UAD0B;AAE1B,IAAA,YAF0B,0BAEX;AACb,UAAE,CAAG,qBAAc,EAAnB,EAAuB;AACrB,QAAA,KAAK,CAAC,gBAAN,CAAuB,UAAvB,CAAkC,IAAlC;AACA,QAAA,KAAK,CAAC,gBAAN,CAAuB,aAAvB,CAAqC,GAArC;AACD;AACF;AAPyB,GAAD,CAA3B;AAAA,MAAK,UAAL,oBAAK,UAAL;;AAUA,SAAO;AACL,IAAA,aAAa,kCACR,SADQ,GAER,iBAAU,CAAC,SAAD,EAAY,UAAZ,EAAwB,UAAxB,EAAoC;iBAAC;AAAD,KAApC,CAFF,CADR;AAKL,IAAA,UAAU,EAAE;AACV,MAAA,EAAE,EAAE;AADM,KALP;AAQL,IAAA,gBAAgB,EAAE;AAChB,MAAA,EAAE,EAAE;AADY,KARb;AAWL,IAAA,qBAAqB,EAAE;AACrB,MAAA,EAAE,EAAE;AADiB;AAXlB,GAAP;AAeD;;;;;;;SClJe,yC,CAAe,K,EAA8C;AAC3E,MAAK,OAAL,GAAyC,KAAzC,CAAK,OAAL;AAAA,MAA4B,SAA5B,GAAyC,KAAzC,CAAc,YAAd;AACA,MAAI,SAAS,GAAG,YAAK,EAArB;AAEA,SAAO;AACL,IAAA,SAAS,EAAE;AACT,MAAA,IAAI,EAAE;AADG,KADN;AAIL,IAAA,YAAY,EAAE,OAAO,GAAG;AAItB,MAAA,EAAE,EAAE,SAJkB;AAKtB,qBAAe;AALO,KAAH,GAMjB,EAVC;AAWL,IAAA,UAAU,EAAE;AACV,MAAA,IAAI,EAAE,OADI;AAEV,oBAAc,SAFJ;AAGV,yBAAmB,OAAO,GAAG,SAAH,GAAe;AAH/B;AAXP,GAAP;AAiBD","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaButtonProps} from '@react-types/button';\nimport {HTMLAttributes, RefObject} from 'react';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {MenuTriggerState} from '@react-stately/menu';\nimport {MenuTriggerType} from '@react-types/menu';\nimport {mergeProps, useId} from '@react-aria/utils';\nimport {useLongPress} from '@react-aria/interactions';\nimport {useMessageFormatter} from '@react-aria/i18n';\nimport {useOverlayTrigger} from '@react-aria/overlays';\n\ninterface MenuTriggerAriaProps {\n  /** The type of menu that the menu trigger opens. */\n  type?: 'menu' | 'listbox',\n  /** Whether menu trigger is disabled. */\n  isDisabled?: boolean,\n  /** How menu is triggered. */\n  trigger?: MenuTriggerType\n}\n\ninterface MenuTriggerAria {\n  /** Props for the menu trigger element. */\n  menuTriggerProps: AriaButtonProps,\n\n  /** Props for the menu. */\n  menuProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a menu trigger.\n * @param props - Props for the menu trigger.\n * @param state - State for the menu trigger.\n */\nexport function useMenuTrigger(props: MenuTriggerAriaProps, state: MenuTriggerState, ref: RefObject<HTMLElement>): MenuTriggerAria {\n  let {\n    type = 'menu' as MenuTriggerAriaProps['type'],\n    isDisabled,\n    trigger = 'press'\n  } = props;\n\n  let menuTriggerId = useId();\n  let {triggerProps, overlayProps} = useOverlayTrigger({type}, state, ref);\n\n  let onKeyDown = (e) => {\n    if (isDisabled) {\n      return;\n    }\n\n    if (trigger === 'longPress' && !e.altKey) {\n      return;\n    }\n\n    if (ref && ref.current) {\n      switch (e.key) {\n        case 'Enter':\n        case ' ':\n          if (trigger === 'longPress') {\n            return;\n          }\n          // fallthrough\n        case 'ArrowDown':\n          // Stop propagation, unless it would already be handled by useKeyboard.\n          if (!('continuePropagation' in e)) {\n            e.stopPropagation();\n          }\n          e.preventDefault();\n          state.toggle('first');\n          break;\n        case 'ArrowUp':\n          if (!('continuePropagation' in e)) {\n            e.stopPropagation();\n          }\n          e.preventDefault();\n          state.toggle('last');\n          break;\n      }\n    }\n  };\n\n  let formatMessage = useMessageFormatter(intlMessages);\n  let {longPressProps} = useLongPress({\n    accessibilityDescription: formatMessage('longPressMessage'),\n    onLongPressStart() {\n      state.close();\n    },\n    onLongPress() {\n      state.open('first');\n    }\n  });\n\n  let pressProps =  {\n    onPressStart(e) {\n      // For consistency with native, open the menu on mouse/key down, but touch up.\n      if (e.pointerType !== 'touch' && e.pointerType !== 'keyboard' && !isDisabled) {\n        // If opened with a screen reader, auto focus the first item.\n        // Otherwise, the menu itself will be focused.\n        state.toggle(e.pointerType === 'virtual' ? 'first' : null);\n      }\n    },\n    onPress(e) {\n      if (e.pointerType === 'touch' && !isDisabled) {\n        state.toggle();\n      }\n    }\n  };\n\n  triggerProps = mergeProps(triggerProps, trigger === 'press' ? pressProps : longPressProps);\n\n  return {\n    menuTriggerProps: {\n      ...triggerProps,\n      id: menuTriggerId,\n      onKeyDown\n    },\n    menuProps: {\n      ...overlayProps,\n      'aria-labelledby': menuTriggerId\n    }\n  };\n}\n","const _temp0 = require(\"./ar-AE.json\");\nconst _temp1 = require(\"./bg-BG.json\");\nconst _temp2 = require(\"./cs-CZ.json\");\nconst _temp3 = require(\"./da-DK.json\");\nconst _temp4 = require(\"./de-DE.json\");\nconst _temp5 = require(\"./el-GR.json\");\nconst _temp6 = require(\"./en-US.json\");\nconst _temp7 = require(\"./es-ES.json\");\nconst _temp8 = require(\"./et-EE.json\");\nconst _temp9 = require(\"./fi-FI.json\");\nconst _temp10 = require(\"./fr-FR.json\");\nconst _temp11 = require(\"./he-IL.json\");\nconst _temp12 = require(\"./hr-HR.json\");\nconst _temp13 = require(\"./hu-HU.json\");\nconst _temp14 = require(\"./it-IT.json\");\nconst _temp15 = require(\"./ja-JP.json\");\nconst _temp16 = require(\"./ko-KR.json\");\nconst _temp17 = require(\"./lt-LT.json\");\nconst _temp18 = require(\"./lv-LV.json\");\nconst _temp19 = require(\"./nb-NO.json\");\nconst _temp20 = require(\"./nl-NL.json\");\nconst _temp21 = require(\"./pl-PL.json\");\nconst _temp22 = require(\"./pt-BR.json\");\nconst _temp23 = require(\"./pt-PT.json\");\nconst _temp24 = require(\"./ro-RO.json\");\nconst _temp25 = require(\"./ru-RU.json\");\nconst _temp26 = require(\"./sk-SK.json\");\nconst _temp27 = require(\"./sl-SI.json\");\nconst _temp28 = require(\"./sr-SP.json\");\nconst _temp29 = require(\"./sv-SE.json\");\nconst _temp30 = require(\"./tr-TR.json\");\nconst _temp31 = require(\"./uk-UA.json\");\nconst _temp32 = require(\"./zh-CN.json\");\nconst _temp33 = require(\"./zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}","{\n  \"longPressMessage\": \"اضغط مطولاً أو اضغط على Alt + السهم لأسفل لفتح القائمة\"\n}\n","{\n  \"longPressMessage\": \"Натиснете продължително или натиснете Alt+ стрелка надолу, за да отворите менюто\"\n}\n","{\n  \"longPressMessage\": \"Dlouhým stiskem nebo stisknutím kláves Alt + šipka dolů otevřete nabídku\"\n}\n","{\n  \"longPressMessage\": \"Langt tryk eller tryk på Alt + pil ned for at åbne menuen\"\n}\n","{\n  \"longPressMessage\": \"Drücken Sie lange oder drücken Sie Alt + Nach-unten, um das Menü zu öffnen\"\n}\n","{\n  \"longPressMessage\": \"Πιέστε παρατεταμένα ή πατήστε Alt + κάτω βέλος για να ανοίξετε το μενού\"\n}\n","{\n  \"longPressMessage\": \"Long press or press Alt + ArrowDown to open menu\"\n}\n","{\n  \"longPressMessage\": \"Mantenga pulsado o pulse Alt + flecha abajo para abrir el menú\"\n}\n","{\n  \"longPressMessage\": \"Menüü avamiseks vajutage pikalt või vajutage klahve Alt + allanool\"\n}\n","{\n  \"longPressMessage\": \"Avaa valikko painamalla pohjassa tai näppäinyhdistelmällä Alt + Alanuoli\"\n}\n","{\n  \"longPressMessage\": \"Appuyez de manière prolongée ou appuyez sur Alt + Flèche vers le bas pour ouvrir le menu.\"\n}\n","{\n  \"longPressMessage\": \"לחץ לחיצה ארוכה או הקש Alt + ArrowDown כדי לפתוח את התפריט\"\n}\n","{\n  \"longPressMessage\": \"Dugo pritisnite ili pritisnite Alt + strelicu prema dolje za otvaranje izbornika\"\n}\n","{\n  \"longPressMessage\": \"Nyomja meg hosszan, vagy nyomja meg az Alt + lefele nyíl gombot a menü megnyitásához\"\n}\n","{\n  \"longPressMessage\": \"Premere a lungo o premere Alt + Freccia giù per aprire il menu\"\n}\n","{\n  \"longPressMessage\": \"長押しまたは Alt+下矢印キーでメニューを開く\"\n}\n","{\n  \"longPressMessage\": \"길게 누르거나 Alt + 아래쪽 화살표를 눌러 메뉴 열기\"\n}\n","{\n  \"longPressMessage\": \"Norėdami atidaryti meniu, nuspaudę palaikykite arba paspauskite „Alt + ArrowDown“.\"\n}\n","{\n  \"longPressMessage\": \"Lai atvērtu izvēlni, turiet nospiestu vai nospiediet taustiņu kombināciju Alt + lejupvērstā bultiņa\"\n}\n","{\n  \"longPressMessage\": \"Langt trykk eller trykk Alt + PilNed for å åpne menyen\"\n}\n","{\n  \"longPressMessage\": \"Druk lang op Alt + pijl-omlaag of druk op Alt om het menu te openen\"\n}\n","{\n  \"longPressMessage\": \"Naciśnij i przytrzymaj lub naciśnij klawisze Alt + Strzałka w dół, aby otworzyć menu\"\n}\n","{\n  \"longPressMessage\": \"Pressione e segure ou pressione Alt + Seta para baixo para abrir o menu\"\n}\n","{\n  \"longPressMessage\": \"Prima continuamente ou prima Alt + Seta Para Baixo para abrir o menu\"\n}\n","{\n  \"longPressMessage\": \"Apăsați lung sau apăsați pe Alt + săgeată în jos pentru a deschide meniul\"\n}\n","{\n  \"longPressMessage\": \"Нажмите и удерживайте или нажмите Alt + Стрелка вниз, чтобы открыть меню\"\n}\n","{\n  \"longPressMessage\": \"Ponuku otvoríte dlhým stlačením alebo stlačením klávesu Alt + klávesu so šípkou nadol\"\n}\n","{\n  \"longPressMessage\": \"Za odprtje menija pritisnite in držite gumb ali pritisnite Alt+puščica navzdol\"\n}\n","{\n  \"longPressMessage\": \"Dugo pritisnite ili pritisnite Alt + strelicu prema dole da otvorite meni\"\n}\n","{\n  \"longPressMessage\": \"Håll nedtryckt eller tryck på Alt + pil nedåt för att öppna menyn\"\n}\n","{\n  \"longPressMessage\": \"Menüyü açmak için uzun basın veya Alt + Aşağı Ok tuşuna basın\"\n}\n","{\n  \"longPressMessage\": \"Довго або звичайно натисніть комбінацію клавіш Alt і стрілка вниз, щоб відкрити меню\"\n}\n","{\n  \"longPressMessage\": \"长按或按 Alt + 向下方向键以打开菜单\"\n}\n","{\n  \"longPressMessage\": \"長按或按 Alt+向下鍵以開啟功能表\"\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaMenuProps} from '@react-types/menu';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {HTMLAttributes, RefObject} from 'react';\nimport {KeyboardDelegate} from '@react-types/shared';\nimport {TreeState} from '@react-stately/tree';\nimport {useSelectableList} from '@react-aria/selection';\n\ninterface MenuAria {\n  /** Props for the menu element. */\n  menuProps: HTMLAttributes<HTMLElement>\n}\n\ninterface AriaMenuOptions<T> extends AriaMenuProps<T> {\n  /** Whether the menu uses virtual scrolling. */\n  isVirtualized?: boolean,\n\n  /**\n   * An optional keyboard delegate implementation for type to select,\n   * to override the default.\n   */\n  keyboardDelegate?: KeyboardDelegate\n}\n\n/**\n * Provides the behavior and accessibility implementation for a menu component.\n * A menu displays a list of actions or options that a user can choose.\n * @param props - Props for the menu.\n * @param state - State for the menu, as returned by `useListState`.\n */\nexport function useMenu<T>(props: AriaMenuOptions<T>, state: TreeState<T>, ref: RefObject<HTMLElement>): MenuAria {\n  let {\n    shouldFocusWrap = true,\n    ...otherProps\n  } = props;\n\n  if (!props['aria-label'] && !props['aria-labelledby']) {\n    console.warn('An aria-label or aria-labelledby prop is required for accessibility.');\n  }\n\n  let domProps = filterDOMProps(props, {labelable: true});\n  let {listProps} = useSelectableList({\n    ...otherProps,\n    ref,\n    selectionManager: state.selectionManager,\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    shouldFocusWrap\n  });\n\n  return {\n    menuProps: mergeProps(domProps, {\n      role: 'menu',\n      ...listProps\n    })\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {getItemCount} from '@react-stately/collections';\nimport {HTMLAttributes, Key, RefObject} from 'react';\nimport {isFocusVisible, useHover, usePress} from '@react-aria/interactions';\nimport {mergeProps, useSlotId} from '@react-aria/utils';\nimport {PressEvent} from '@react-types/shared';\nimport {TreeState} from '@react-stately/tree';\nimport {useSelectableItem} from '@react-aria/selection';\n\ninterface MenuItemAria {\n  /** Props for the menu item element. */\n  menuItemProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the main text element inside the menu item. */\n  labelProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the description text element inside the menu item, if any. */\n  descriptionProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the keyboard shortcut text element inside the item, if any. */\n  keyboardShortcutProps: HTMLAttributes<HTMLElement>\n}\n\ninterface AriaMenuItemProps {\n  /** Whether the menu item is disabled. */\n  isDisabled?: boolean,\n\n  /** Whether the menu item is selected. */\n  isSelected?: boolean,\n\n  /** A screen reader only label for the menu item. */\n  'aria-label'?: string,\n\n  /** The unique key for the menu item. */\n  key?: Key,\n\n  /** Handler that is called when the menu should close after selecting an item. */\n  onClose?: () => void,\n\n  /**\n   * Whether the menu should close when the menu item is selected.\n   * @default true\n   */\n  closeOnSelect?: boolean,\n\n  /** Whether the menu item is contained in a virtual scrolling menu. */\n  isVirtualized?: boolean,\n\n  /** Handler that is called when the user activates the item. */\n  onAction?: (key: Key) => void\n}\n\n/**\n * Provides the behavior and accessibility implementation for an item in a menu.\n * See `useMenu` for more details about menus.\n * @param props - Props for the item.\n * @param state - State for the menu, as returned by `useTreeState`.\n */\nexport function useMenuItem<T>(props: AriaMenuItemProps, state: TreeState<T>, ref: RefObject<HTMLElement>): MenuItemAria {\n  let {\n    isSelected,\n    isDisabled,\n    key,\n    onClose,\n    closeOnSelect,\n    isVirtualized,\n    onAction\n  } = props;\n\n  let role = 'menuitem';\n  if (state.selectionManager.selectionMode === 'single') {\n    role = 'menuitemradio';\n  } else if (state.selectionManager.selectionMode === 'multiple') {\n    role = 'menuitemcheckbox';\n  }\n\n  let labelId = useSlotId();\n  let descriptionId = useSlotId();\n  let keyboardId = useSlotId();\n\n  let ariaProps = {\n    'aria-disabled': isDisabled,\n    role,\n    'aria-label': props['aria-label'],\n    'aria-labelledby': labelId,\n    'aria-describedby': [descriptionId, keyboardId].filter(Boolean).join(' ') || undefined\n  };\n\n  if (state.selectionManager.selectionMode !== 'none') {\n    ariaProps['aria-checked'] = isSelected;\n  }\n\n  if (isVirtualized) {\n    ariaProps['aria-posinset'] = state.collection.getItem(key).index;\n    ariaProps['aria-setsize'] = getItemCount(state.collection);\n  }\n\n  let onKeyDown = (e: KeyboardEvent) => {\n    // Ignore repeating events, which may have started on the menu trigger before moving\n    // focus to the menu item. We want to wait for a second complete key press sequence.\n    if (e.repeat) {\n      return;\n    }\n\n    switch (e.key) {\n      case ' ':\n        if (!isDisabled && state.selectionManager.selectionMode === 'none' && closeOnSelect !== false && onClose) {\n          onClose();\n        }\n        break;\n      case 'Enter':\n        // The Enter key should always close on select, except if overridden.\n        if (!isDisabled && closeOnSelect !== false && onClose) {\n          onClose();\n        }\n        break;\n    }\n  };\n\n  let onPressStart = (e: PressEvent) => {\n    if (e.pointerType === 'keyboard' && onAction) {\n      onAction(key);\n    }\n  };\n\n  let onPressUp = (e: PressEvent) => {\n    if (e.pointerType !== 'keyboard') {\n      if (onAction) {\n        onAction(key);\n      }\n\n      // Pressing a menu item should close by default in single selection mode but not multiple\n      // selection mode, except if overridden by the closeOnSelect prop.\n      if (onClose && (closeOnSelect ?? state.selectionManager.selectionMode !== 'multiple')) {\n        onClose();\n      }\n    }\n  };\n\n  let {itemProps} = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key,\n    ref,\n    shouldSelectOnPressUp: true,\n    allowsDifferentPressOrigin: true\n  });\n\n  let {pressProps} = usePress({onPressStart, onPressUp, isDisabled});\n  let {hoverProps} = useHover({\n    isDisabled,\n    onHoverStart() {\n      if (!isFocusVisible()) {\n        state.selectionManager.setFocused(true);\n        state.selectionManager.setFocusedKey(key);\n      }\n    }\n  });\n\n  return {\n    menuItemProps: {\n      ...ariaProps,\n      ...mergeProps(itemProps, pressProps, hoverProps, {onKeyDown})\n    },\n    labelProps: {\n      id: labelId\n    },\n    descriptionProps: {\n      id: descriptionId\n    },\n    keyboardShortcutProps: {\n      id: keyboardId\n    }\n  };\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {HTMLAttributes, ReactNode} from 'react';\nimport {useId} from '@react-aria/utils';\n\ninterface AriaMenuSectionProps {\n  /** The heading for the section. */\n  heading?: ReactNode,\n  /** An accessibility label for the section. Required if `heading` is not present. */\n  'aria-label'?: string\n}\n\ninterface MenuSectionAria {\n  /** Props for the wrapper list item. */\n  itemProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the heading element, if any. */\n  headingProps: HTMLAttributes<HTMLElement>,\n\n  /** Props for the group element. */\n  groupProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a section in a menu.\n * See `useMenu` for more details about menus.\n * @param props - Props for the section.\n */\nexport function useMenuSection(props: AriaMenuSectionProps): MenuSectionAria {\n  let {heading, 'aria-label': ariaLabel} = props;\n  let headingId = useId();\n\n  return {\n    itemProps: {\n      role: 'presentation'\n    },\n    headingProps: heading ? {\n      // Techincally, menus cannot contain headings according to ARIA.\n      // We hide the heading from assistive technology, and only use it\n      // as a label for the nested group.\n      id: headingId,\n      'aria-hidden': true\n    } : {},\n    groupProps: {\n      role: 'group',\n      'aria-label': ariaLabel,\n      'aria-labelledby': heading ? headingId : undefined\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}