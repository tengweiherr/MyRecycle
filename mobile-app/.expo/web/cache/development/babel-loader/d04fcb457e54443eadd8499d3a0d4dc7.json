{"ast":null,"code":"import { mode, getColorScheme } from \"../tools\";\nvar baseStyle = {\n  px: '2',\n  py: '0.5',\n  alignItems: 'center',\n  _text: {\n    fontSize: 'xs',\n    fontWeight: 'medium'\n  }\n};\n\nfunction variantSolid(props) {\n  var colorScheme = getColorScheme(props);\n  return {\n    bg: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".300\"))(props),\n    _text: {\n      color: mode(\"coolGray.100\", \"coolGray.800\")(props)\n    },\n    borderWidth: '1',\n    borderColor: 'transparent',\n    borderRadius: '2'\n  };\n}\n\nfunction variantSubtle(props) {\n  var colorScheme = getColorScheme(props);\n  return {\n    bg: mode(\"\".concat(colorScheme, \".200\"), \"\".concat(colorScheme, \".700\"))(props),\n    _text: {\n      color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".200\"))(props)\n    },\n    borderWidth: '1',\n    borderRadius: '2',\n    borderColor: 'transparent'\n  };\n}\n\nfunction variantOutline(props) {\n  var colorScheme = getColorScheme(props);\n  return {\n    borderColor: mode(\"\".concat(colorScheme, \".500\"), \"\".concat(colorScheme, \".400\"))(props),\n    _text: {\n      color: mode(\"\".concat(colorScheme, \".500\"), \"\".concat(colorScheme, \".400\"))(props)\n    },\n    borderRadius: '2',\n    borderWidth: '1'\n  };\n}\n\nvar variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline\n};\nvar defaultProps = {\n  variant: 'subtle',\n  colorScheme: 'coolGray'\n};\nexport default {\n  baseStyle: baseStyle,\n  variants: variants,\n  defaultProps: defaultProps\n};","map":{"version":3,"sources":["badge.ts"],"names":["baseStyle","px","py","alignItems","_text","fontSize","fontWeight","colorScheme","getColorScheme","bg","mode","color","borderWidth","borderColor","borderRadius","variants","solid","subtle","outline","variantOutline","defaultProps","variant"],"mappings":"AAAA,SAAA,IAAA,EAAA,cAAA;AAEA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,EAAE,EADc,GAAA;AAEhBC,EAAAA,EAAE,EAFc,KAAA;AAGhBC,EAAAA,UAAU,EAHM,QAAA;AAIhBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAV,IAAA;AAAkBC,IAAAA,UAAU,EAAE;AAA9B;AAJS,CAAlB;;AAOA,SAAA,YAAA,CAAA,KAAA,EAAkD;AAChD,MAAMC,WAAW,GAAGC,cAAc,CAAlC,KAAkC,CAAlC;AACA,SAAO;AACLC,IAAAA,EAAE,EAAEC,IAAI,CAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAJA,MAAI,CAAA,CAAJA,CADC,KACDA,CADC;AAELN,IAAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAED,IAAI,CAAA,cAAA,EAAJA,cAAI,CAAJA,CAAAA,KAAAA;AAAT,KAFF;AAGLE,IAAAA,WAAW,EAHN,GAAA;AAILC,IAAAA,WAAW,EAJN,aAAA;AAKLC,IAAAA,YAAY,EAAE;AALT,GAAP;AAOD;;AAED,SAAA,aAAA,CAAA,KAAA,EAAmD;AACjD,MAAMP,WAAW,GAAGC,cAAc,CAAlC,KAAkC,CAAlC;AACA,SAAO;AACLC,IAAAA,EAAE,EAAEC,IAAI,CAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAJA,MAAI,CAAA,CAAJA,CADC,KACDA,CADC;AAELN,IAAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAED,IAAI,CAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAJA,MAAI,CAAA,CAAJA,CAAAA,KAAAA;AAAT,KAFF;AAGLE,IAAAA,WAAW,EAHN,GAAA;AAILE,IAAAA,YAAY,EAJP,GAAA;AAKLD,IAAAA,WAAW,EAAE;AALR,GAAP;AAOD;;AAED,SAAA,cAAA,CAAA,KAAA,EAAoD;AAClD,MAAMN,WAAW,GAAGC,cAAc,CAAlC,KAAkC,CAAlC;AACA,SAAO;AACLK,IAAAA,WAAW,EAAEH,IAAI,CAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAJA,MAAI,CAAA,CAAJA,CADR,KACQA,CADR;AAELN,IAAAA,KAAK,EAAE;AAAEO,MAAAA,KAAK,EAAED,IAAI,CAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAJA,MAAI,CAAA,CAAJA,CAAAA,KAAAA;AAAT,KAFF;AAGLI,IAAAA,YAAY,EAHP,GAAA;AAILF,IAAAA,WAAW,EAAE;AAJR,GAAP;AAMD;;AAED,IAAMG,QAAQ,GAAG;AACfC,EAAAA,KAAK,EADU,YAAA;AAEfC,EAAAA,MAAM,EAFS,aAAA;AAGfC,EAAAA,OAAO,EAAEC;AAHM,CAAjB;AAMA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EADY,QAAA;AAEnBd,EAAAA,WAAW,EAAE;AAFM,CAArB;AAKA,eAAe;AACbP,EAAAA,SADa,EACbA,SADa;AAEbe,EAAAA,QAFa,EAEbA,QAFa;AAGbK,EAAAA,YAAAA,EAAAA;AAHa,CAAf","sourcesContent":["import { mode, getColorScheme } from '../tools';\n\nconst baseStyle = {\n  px: '2',\n  py: '0.5',\n  alignItems: 'center',\n  _text: { fontSize: 'xs', fontWeight: 'medium' },\n};\n\nfunction variantSolid(props: Record<string, any>) {\n  const colorScheme = getColorScheme(props);\n  return {\n    bg: mode(`${colorScheme}.600`, `${colorScheme}.300`)(props),\n    _text: { color: mode(`coolGray.100`, `coolGray.800`)(props) },\n    borderWidth: '1',\n    borderColor: 'transparent',\n    borderRadius: '2',\n  };\n}\n\nfunction variantSubtle(props: Record<string, any>) {\n  const colorScheme = getColorScheme(props);\n  return {\n    bg: mode(`${colorScheme}.200`, `${colorScheme}.700`)(props),\n    _text: { color: mode(`${colorScheme}.600`, `${colorScheme}.200`)(props) },\n    borderWidth: '1',\n    borderRadius: '2',\n    borderColor: 'transparent',\n  };\n}\n\nfunction variantOutline(props: Record<string, any>) {\n  const colorScheme = getColorScheme(props);\n  return {\n    borderColor: mode(`${colorScheme}.500`, `${colorScheme}.400`)(props),\n    _text: { color: mode(`${colorScheme}.500`, `${colorScheme}.400`)(props) },\n    borderRadius: '2',\n    borderWidth: '1',\n  };\n}\n\nconst variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline,\n};\n\nconst defaultProps = {\n  variant: 'subtle',\n  colorScheme: 'coolGray',\n};\n\nexport default {\n  baseStyle,\n  variants,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"module"}