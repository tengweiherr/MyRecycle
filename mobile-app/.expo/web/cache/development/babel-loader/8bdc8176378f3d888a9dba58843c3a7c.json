{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport omitBy from 'lodash.omitby';\nimport isNil from 'lodash.isnil';\nimport pick from 'lodash.pick';\nimport omit from 'lodash.omit';\nimport get from 'lodash.get';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport var stylingProps = {\n  margin: ['margin', 'm', 'marginTop', 'mt', 'marginRight', 'mr', 'marginBottom', 'mb', 'marginLeft', 'ml', 'marginX', 'mx', 'marginY', 'my'],\n  padding: ['padding', 'p', 'paddingTop', 'pt', 'paddingRight', 'pr', 'paddingBottom', 'pb', 'paddingLeft', 'pl', 'paddingX', 'px', 'paddingY', 'py'],\n  border: ['border', 'borderWidth', 'borderStyle', 'borderColor', 'borderRadius', 'borderTop', 'borderTopWidth', 'borderTopStyle', 'borderTopColor', 'borderTopLeftRadius', 'borderTopRightRadius', 'borderRight', 'borderRightWidth', 'borderRightStyle', 'borderRightColor', 'borderBottom', 'borderBottomWidth', 'borderBottomStyle', 'borderBottomColor', 'borderBottomLeftRadius', 'borderBottomRightRadius', 'borderLeft', 'borderLeftWidth', 'borderLeftStyle', 'borderLeftColor', 'borderX', 'borderY', 'rounded'],\n  layout: ['width', 'w', 'height', 'h', 'display', 'minWidth', 'minW', 'minH', 'minHeight', 'maxWidth', 'maxW', 'maxHeight', 'maxH', 'size', 'verticalAlign', 'overflow', 'overflowX', 'overflowY'],\n  flexbox: ['alignItems', 'alignContent', 'justifyItems', 'justifyContent', 'flexWrap', 'flexDirection', 'flex', 'flexGrow', 'flexShrink', 'flexBasis', 'justifySelf', 'alignSelf', 'order'],\n  position: ['position', 'zIndex', 'top', 'right', 'bottom', 'left'],\n  outline: ['outlineWidth', 'outlineColor', 'outlineStyle'],\n  background: ['bg', 'backgroundColor', 'bgColor']\n};\nexport function omitUndefined(obj) {\n  return omitBy(obj, isNil);\n}\nexport function getRandomString(length) {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n}\n\nfunction orderedPick(obj, values) {\n  var ret = {};\n  Object.keys(obj).forEach(function (key) {\n    if (values.includes(key)) {\n      ret[key] = obj[key];\n    }\n  });\n  return ret;\n}\n\nexport function orderedExtractInObject(parent, values) {\n  return [omitUndefined(orderedPick(parent, values)), omitUndefined(omit(parent, values))];\n}\nexport function extractInObject(parent, values) {\n  return [omitUndefined(pick(parent, values)), omitUndefined(omit(parent, values))];\n}\nexport function getColorFormColorScheme(props) {\n  var theme = props.theme,\n      colorScheme = props.colorScheme,\n      isDisabled = props.isDisabled;\n  var simpleColorScheme = colorScheme.split('.')[0];\n  if (isDisabled) return 'gray.300';else if (simpleColorScheme in theme.colors) {\n    return theme.colors[simpleColorScheme][0] === '#' ? simpleColorScheme : theme.colors[simpleColorScheme][400] || theme.colors[simpleColorScheme][200];\n  } else return 'primary.200';\n}\nexport function getColorScheme(props, customColorScheme) {\n  var theme = props.theme,\n      colorScheme = props.colorScheme;\n  colorScheme = customColorScheme || colorScheme;\n  if (!(colorScheme in theme.colors)) return 'primary';else {\n    if (typeof theme.colors[colorScheme] === 'object') return colorScheme;\n  }\n}\nexport var inValidBreakpointProps = ['style', 'children', 'shadowOffset'];\nexport function hasValidBreakpointFormat(breaks, themeBreakpoints, property) {\n  if (property && inValidBreakpointProps.indexOf(property) !== -1) {\n    return false;\n  } else if (Array.isArray(breaks)) {\n    return breaks.length ? true : false;\n  } else if (typeof breaks === 'object' && breaks !== null) {\n    var keys = Object.keys(breaks);\n    var themeBreakPointKeys = Object.keys(themeBreakpoints);\n\n    for (var i = 0; i < keys.length; i++) {\n      if (themeBreakPointKeys.indexOf(keys[i]) === -1) {\n        return false;\n      }\n    }\n\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function findLastValidBreakpoint(values, themeBreakpoints, currentBreakpoint) {\n  var _valArray$currentBrea;\n\n  var valArray = Array.isArray(values) ? values : Object.keys(themeBreakpoints).map(function (bPoint) {\n    return values[bPoint];\n  });\n  return (_valArray$currentBrea = valArray[currentBreakpoint]) !== null && _valArray$currentBrea !== void 0 ? _valArray$currentBrea : valArray.slice(0, currentBreakpoint + 1).filter(function (v) {\n    return !isNil(v);\n  }).pop();\n}\nexport function getClosestBreakpoint(values, point) {\n  var dimValues = Object.values(values);\n  var index = -1;\n  var breakpointsObj = {};\n\n  for (var i = 0; i < dimValues.length; i++) {\n    breakpointsObj[dimValues[i]] = i;\n  }\n\n  var breakpoints = Object.keys(breakpointsObj);\n\n  for (var _i = 0; _i < breakpoints.length; _i++) {\n    if (parseInt(breakpoints[_i]) === point) {\n      index = breakpointsObj[breakpoints[_i]];\n      break;\n    } else if (parseInt(breakpoints[_i]) > point && _i !== 0) {\n      index = breakpointsObj[breakpoints[_i - 1]];\n      break;\n    } else if (parseInt(breakpoints[_i]) < point && _i === dimValues.length - 1) {\n        index = breakpointsObj[breakpoints[_i]];\n        break;\n      }\n  }\n\n  return index;\n}\nexport var baseFontSize = 16;\nexport var convertAbsoluteToRem = function convertAbsoluteToRem(px) {\n  return \"\".concat(px / baseFontSize, \"rem\");\n};\nexport var convertRemToAbsolute = function convertRemToAbsolute(rem) {\n  return rem * baseFontSize;\n};\nexport var convertToDp = function convertToDp(value) {\n  var numberRegex = /^\\d+$/;\n\n  if (typeof value === 'number') {\n    return value;\n  } else {\n    var isAbsolute = numberRegex.test(value);\n    var isPx = !isAbsolute && value.endsWith('px');\n    var isRem = !isAbsolute && value.endsWith('rem');\n    var isEm = !isAbsolute && value.endsWith('em');\n    var finalDpValue = 0;\n\n    if (isAbsolute || isPx) {\n      finalDpValue = parseFloat(value);\n    } else if (isEm) {\n      finalDpValue = convertRemToAbsolute(parseFloat(value));\n    } else if (isRem) {\n      finalDpValue = convertRemToAbsolute(parseFloat(value));\n    }\n\n    return finalDpValue;\n  }\n};\nexport var platformSpecificSpaceUnits = function platformSpecificSpaceUnits(theme) {\n  var scales = ['space', 'sizes', 'fontSizes'];\n\n  var newTheme = _objectSpread({}, theme);\n\n  var isWeb = Platform.OS === 'web';\n  scales.forEach(function (key) {\n    var scale = get(theme, key, {});\n\n    var newScale = _objectSpread({}, scale);\n\n    for (var scaleKey in scale) {\n      var val = scale[scaleKey];\n\n      if (typeof val !== 'object') {\n        var isAbsolute = typeof val === 'number';\n        var isPx = !isAbsolute && val.endsWith('px');\n        var isRem = !isAbsolute && val.endsWith('rem');\n\n        if (isWeb) {\n          if (isAbsolute) {\n            newScale[scaleKey] = convertAbsoluteToRem(val);\n          }\n        } else {\n            if (isRem) {\n              newScale[scaleKey] = convertRemToAbsolute(parseFloat(val));\n            } else if (isPx) {\n              newScale[scaleKey] = parseFloat(val);\n            }\n          }\n      }\n    }\n\n    newTheme[key] = newScale;\n  });\n  return newTheme;\n};\nexport function isResponsiveAnyProp(props, theme) {\n  if (props) {\n    var keys = Object.keys(props);\n\n    for (var i = 0; i < keys.length; i++) {\n      if (hasValidBreakpointFormat(props[keys[i]], theme.breakpoints, keys[i])) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}","map":{"version":3,"sources":["utils.ts"],"names":["stylingProps","margin","padding","border","layout","flexbox","position","outline","background","omitBy","result","characters","charactersLength","i","Math","ret","Object","key","values","obj","omitUndefined","orderedPick","omit","pick","isDisabled","simpleColorScheme","colorScheme","theme","customColorScheme","inValidBreakpointProps","property","Array","breaks","keys","themeBreakPointKeys","valArray","bPoint","currentBreakpoint","v","isNil","dimValues","index","breakpointsObj","breakpoints","parseInt","baseFontSize","convertAbsoluteToRem","px","convertRemToAbsolute","rem","convertToDp","value","numberRegex","isAbsolute","isPx","isRem","isEm","finalDpValue","parseFloat","platformSpecificSpaceUnits","scales","newTheme","isWeb","Platform","scale","get","newScale","val","hasValidBreakpointFormat","props"],"mappings":"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","sourcesContent":["import omitBy from 'lodash.omitby';\nimport isNil from 'lodash.isnil';\nimport pick from 'lodash.pick';\nimport omit from 'lodash.omit';\nimport get from 'lodash.get';\nimport type { ITheme } from '../index';\nimport { Platform } from 'react-native';\n\nexport const stylingProps = {\n  margin: [\n    'margin',\n    'm',\n    'marginTop',\n    'mt',\n    'marginRight',\n    'mr',\n    'marginBottom',\n    'mb',\n    'marginLeft',\n    'ml',\n    'marginX',\n    'mx',\n    'marginY',\n    'my',\n  ],\n  padding: [\n    'padding',\n    'p',\n    'paddingTop',\n    'pt',\n    'paddingRight',\n    'pr',\n    'paddingBottom',\n    'pb',\n    'paddingLeft',\n    'pl',\n    'paddingX',\n    'px',\n    'paddingY',\n    'py',\n  ],\n  border: [\n    'border',\n    'borderWidth',\n    'borderStyle',\n    'borderColor',\n    'borderRadius',\n    'borderTop',\n    'borderTopWidth',\n    'borderTopStyle',\n    'borderTopColor',\n    'borderTopLeftRadius',\n    'borderTopRightRadius',\n    'borderRight',\n    'borderRightWidth',\n    'borderRightStyle',\n    'borderRightColor',\n    'borderBottom',\n    'borderBottomWidth',\n    'borderBottomStyle',\n    'borderBottomColor',\n    'borderBottomLeftRadius',\n    'borderBottomRightRadius',\n    'borderLeft',\n    'borderLeftWidth',\n    'borderLeftStyle',\n    'borderLeftColor',\n    'borderX',\n    'borderY',\n    'rounded',\n  ],\n  layout: [\n    'width',\n    'w',\n    'height',\n    'h',\n    'display',\n    'minWidth',\n    'minW',\n    'minH',\n    'minHeight',\n    'maxWidth',\n    'maxW',\n    'maxHeight',\n    'maxH',\n    'size',\n    'verticalAlign',\n    'overflow',\n    'overflowX',\n    'overflowY',\n  ],\n  flexbox: [\n    'alignItems',\n    'alignContent',\n    'justifyItems',\n    'justifyContent',\n    'flexWrap',\n    'flexDirection',\n    'flex',\n    'flexGrow',\n    'flexShrink',\n    'flexBasis',\n    'justifySelf',\n    'alignSelf',\n    'order',\n  ],\n  position: ['position', 'zIndex', 'top', 'right', 'bottom', 'left'],\n  outline: ['outlineWidth', 'outlineColor', 'outlineStyle'],\n  background: ['bg', 'backgroundColor', 'bgColor'],\n};\nexport type Dict = Record<string, any>;\nexport function omitUndefined(obj: any) {\n  return omitBy(obj, isNil);\n}\nexport function getRandomString(length: number) {\n  var result = '';\n  var characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n// Inefficient way for pick, but retains order of props.\nfunction orderedPick(obj: any, values: any) {\n  const ret: any = {};\n  Object.keys(obj).forEach((key: string) => {\n    if (values.includes(key)) {\n      ret[key] = obj[key];\n    }\n  });\n  return ret;\n}\nexport function orderedExtractInObject(parent: any, values: Array<string>) {\n  return [\n    omitUndefined(orderedPick(parent, values)),\n    omitUndefined(omit(parent, values)),\n  ];\n}\n/**\n *\n * @param parent The object from which data needs to extracted\n * @param values Keys which needs to be extracted\n * @returns [extractedProps, remainingProps]\n */\nexport function extractInObject(parent: any, values: Array<string>) {\n  return [\n    omitUndefined(pick(parent, values)),\n    omitUndefined(omit(parent, values)),\n  ];\n}\nexport function getColorFormColorScheme(props: Record<string, any>) {\n  const { theme, colorScheme, isDisabled } = props;\n  const simpleColorScheme = colorScheme.split('.')[0];\n  if (isDisabled) return 'gray.300';\n  else if (simpleColorScheme in theme.colors) {\n    return theme.colors[simpleColorScheme][0] === '#'\n      ? simpleColorScheme\n      : theme.colors[simpleColorScheme][400] ||\n          theme.colors[simpleColorScheme][200];\n  } else return 'primary.200';\n}\n\n// TODO: This function can be removed.\nexport function getColorScheme(\n  props: Record<string, any>,\n  customColorScheme?: string\n) {\n  let { theme, colorScheme } = props;\n  colorScheme = customColorScheme || colorScheme;\n  if (!(colorScheme in theme.colors)) return 'primary';\n  else {\n    if (typeof theme.colors[colorScheme] === 'object') return colorScheme;\n  }\n}\nexport const inValidBreakpointProps = ['style', 'children', 'shadowOffset'];\nexport function hasValidBreakpointFormat(\n  breaks: any,\n  themeBreakpoints?: any,\n  property?: string\n) {\n  if (property && inValidBreakpointProps.indexOf(property) !== -1) {\n    return false;\n  } else if (Array.isArray(breaks)) {\n    return breaks.length ? true : false;\n  } else if (typeof breaks === 'object' && breaks !== null) {\n    const keys = Object.keys(breaks);\n    const themeBreakPointKeys = Object.keys(themeBreakpoints);\n    for (let i = 0; i < keys.length; i++) {\n      if (themeBreakPointKeys.indexOf(keys[i]) === -1) {\n        return false;\n      }\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function findLastValidBreakpoint(\n  values: any,\n  themeBreakpoints: any,\n  currentBreakpoint: number\n) {\n  const valArray = Array.isArray(values)\n    ? values\n    : Object.keys(themeBreakpoints).map((bPoint: string) => values[bPoint]);\n  return (\n    valArray[currentBreakpoint] ??\n    valArray\n      .slice(0, currentBreakpoint + 1)\n      .filter((v: any) => !isNil(v))\n      .pop()\n  );\n}\nexport function getClosestBreakpoint(\n  values: Record<string, any>,\n  point: number\n) {\n  const dimValues = Object.values(values);\n  let index = -1;\n  let breakpointsObj: any = {};\n  for (let i = 0; i < dimValues.length; i++) {\n    breakpointsObj[dimValues[i]] = i;\n  }\n  const breakpoints = Object.keys(breakpointsObj);\n  for (let i = 0; i < breakpoints.length; i++) {\n    if (parseInt(breakpoints[i]) === point) {\n      index = breakpointsObj[breakpoints[i]];\n      break;\n    } else if (parseInt(breakpoints[i]) > point && i !== 0) {\n      index = breakpointsObj[breakpoints[i - 1]];\n      break;\n    }\n    // If windowWidth is greater than last available breakpoint clamp it to last index\n    else if (parseInt(breakpoints[i]) < point && i === dimValues.length - 1) {\n      index = breakpointsObj[breakpoints[i]];\n      break;\n    }\n  }\n  return index;\n}\n\nexport const baseFontSize = 16;\n\nexport const convertAbsoluteToRem = (px: number) => {\n  return `${px / baseFontSize}rem`;\n};\n\nexport const convertRemToAbsolute = (rem: number) => {\n  return rem * baseFontSize;\n};\n\nexport const convertToDp = (value: number | string): number => {\n  const numberRegex = /^\\d+$/;\n\n  if (typeof value === 'number') {\n    return value;\n  } else {\n    const isAbsolute = numberRegex.test(value);\n    const isPx = !isAbsolute && value.endsWith('px');\n    const isRem = !isAbsolute && value.endsWith('rem');\n    const isEm = !isAbsolute && value.endsWith('em');\n\n    let finalDpValue = 0;\n\n    if (isAbsolute || isPx) {\n      finalDpValue = parseFloat(value);\n    } else if (isEm) {\n      finalDpValue = convertRemToAbsolute(parseFloat(value));\n    } else if (isRem) {\n      finalDpValue = convertRemToAbsolute(parseFloat(value));\n    }\n\n    return finalDpValue;\n  }\n};\n\n/**\n *\n * @param theme\n * @description\n  - Converts space/sizes/lineHeights/letterSpacings/fontSizes to `rem` on web if the token value specified is an absolute number.\n  - Converts space/sizes/lineHeights/letterSpacings/fontSizes to absolute number on native if the token value specified is in `px` or `rem`\n*/\nexport const platformSpecificSpaceUnits = (theme: ITheme) => {\n  const scales = ['space', 'sizes', 'fontSizes'];\n\n  const newTheme = { ...theme };\n  const isWeb = Platform.OS === 'web';\n  scales.forEach((key) => {\n    const scale = get(theme, key, {});\n    const newScale = { ...scale };\n    for (const scaleKey in scale) {\n      const val = scale[scaleKey];\n      if (typeof val !== 'object') {\n        const isAbsolute = typeof val === 'number';\n        const isPx = !isAbsolute && val.endsWith('px');\n        const isRem = !isAbsolute && val.endsWith('rem');\n\n        // If platform is web, we need to convert absolute unit to rem. e.g. 16 to 1rem\n        if (isWeb) {\n          if (isAbsolute) {\n            newScale[scaleKey] = convertAbsoluteToRem(val);\n          }\n        }\n        // If platform is not web, we need to convert px unit to absolute and rem unit to absolute. e.g. 16px to 16. 1rem to 16.\n        else {\n          if (isRem) {\n            newScale[scaleKey] = convertRemToAbsolute(parseFloat(val));\n          } else if (isPx) {\n            newScale[scaleKey] = parseFloat(val);\n          }\n        }\n      }\n    }\n    //@ts-ignore\n    newTheme[key] = newScale;\n  });\n\n  return newTheme;\n};\nexport function isResponsiveAnyProp(props: Record<string, any>, theme: any) {\n  if (props) {\n    const keys = Object.keys(props);\n    for (let i = 0; i < keys.length; i++) {\n      if (\n        hasValidBreakpointFormat(props[keys[i]], theme.breakpoints, keys[i])\n      ) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}