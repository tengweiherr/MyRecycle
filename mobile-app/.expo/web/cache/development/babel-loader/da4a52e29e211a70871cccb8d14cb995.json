{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport Box from \"../../primitives/Box\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar Circle = function Circle(props, ref) {\n  var resolvedProps = usePropsResolution('Circle', props);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref\n  }));\n};\n\nexport default React.memo(React.forwardRef(Circle));","map":{"version":3,"sources":["Circle.tsx"],"names":["Circle","resolvedProps","usePropsResolution","useHasResponsiveProps","ref","React"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,GAAA;AAEA,SAAA,kBAAA;AACA,SAAA,qBAAA;;AAEA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAA,KAAA,EAAA,GAAA,EAAmC;AAChD,MAAMC,aAAa,GAAGC,kBAAkB,CAAA,QAAA,EADQ,KACR,CAAxC;;AAGA,MAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AACD;;AACD,SAAO,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA,EAAA,EAAA,aAAA,EAAA;AAAwB,IAAA,GAAG,EAAEC;AAA7B,GAAA,CAAA,CAAP;AAPF,CAAA;;AAUA,eAAeC,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,MAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport type { ICircleProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Circle = (props: ICircleProps, ref: any) => {\n  const resolvedProps = usePropsResolution('Circle', props);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box {...resolvedProps} ref={ref} />;\n};\n\nexport default React.memo(React.forwardRef(Circle));\n"]},"metadata":{},"sourceType":"module"}