{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"value\", \"isIndeterminate\", \"max\", \"min\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport get from 'lodash.get';\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { makeStyledComponent } from \"../../../utils/styled\";\nimport { useTheme, useThemeProps } from \"../../../hooks\";\nimport { canUseDom } from \"../../../utils\";\nimport { default as Box } from \"../../primitives/Box\";\nimport { themeTools } from \"../../../theme\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar StyleAnimatedView = makeStyledComponent(Animated.View);\n\nvar CircularProgress = function CircularProgress(_ref, ref) {\n  var value = _ref.value,\n      isIndeterminate = _ref.isIndeterminate,\n      max = _ref.max,\n      min = _ref.min,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var theme = useTheme();\n  var isDomUsable = canUseDom();\n\n  if (min) {\n    value = value - min;\n  }\n\n  var sizeProps;\n  var newProps = useThemeProps('CircularProgress', props);\n\n  var _themeTools$extractIn = themeTools.extractInObject(props, ['size']),\n      _themeTools$extractIn2 = _slicedToArray(_themeTools$extractIn, 2),\n      remainingProps = _themeTools$extractIn2[1];\n\n  if (!newProps.size) {\n    sizeProps = {\n      height: newProps.height,\n      width: newProps.width\n    };\n  } else {\n    sizeProps = {\n      height: newProps.size,\n      width: newProps.size\n    };\n  }\n\n  var themeHeight = get(theme, 'space.' + sizeProps.height);\n  var themeWidth = get(theme, 'space.' + sizeProps.width);\n  var styleSize = {\n    height: themeHeight ? parseInt(themeHeight.slice(themeHeight.Length, -2), 10) : sizeProps.height,\n    width: themeWidth ? parseInt(themeWidth.slice(themeWidth.Length, -2), 10) : sizeProps.width\n  };\n  var defaultThickness = newProps.thickness;\n  var degree = new Animated.Value(0);\n\n  if (isIndeterminate) {\n    if (isDomUsable) {\n      Animated.loop(Animated.timing(degree, {\n        toValue: 1,\n        duration: 600,\n        easing: Easing.linear,\n        useNativeDriver: false\n      })).start();\n    }\n  }\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      viewHeight = _React$useState2[0],\n      setViewHeight = _React$useState2[1];\n\n  var layout = function layout(e) {\n    var height = e.nativeEvent.layout.height;\n    setViewHeight(height);\n  };\n\n  var defaultStyling = _objectSpread({\n    borderBottomLeftRadius: viewHeight / 2,\n    borderBottomRightRadius: viewHeight / 2,\n    borderTopLeftRadius: viewHeight / 2,\n    borderTopRightRadius: viewHeight / 2,\n    borderLeftWidth: defaultThickness,\n    borderBottomWidth: defaultThickness,\n    position: 'absolute',\n    borderLeftColor: 'transparent',\n    borderBottomColor: 'transparent'\n  }, styleSize);\n\n  var styles = StyleSheet.create({\n    firstProgressLayer: _objectSpread(_objectSpread({\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness\n    }, defaultStyling), {}, {\n      transform: [{\n        rotateZ: '-135deg'\n      }]\n    }),\n    secondProgressLayer: _objectSpread(_objectSpread({\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness\n    }, defaultStyling), {}, {\n      transform: [{\n        rotateZ: '45deg'\n      }]\n    }),\n    offsetLayer: _objectSpread(_objectSpread({\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness\n    }, defaultStyling), {}, {\n      borderRadius: viewHeight / 2,\n      transform: [{\n        rotateZ: '-135deg'\n      }]\n    }),\n    animateStyle: _objectSpread(_objectSpread({\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness\n    }, defaultStyling), {}, {\n      transform: [{\n        rotateZ: degree.interpolate({\n          inputRange: [0, 1],\n          outputRange: ['0deg', '360deg']\n        })\n      }]\n    })\n  });\n  var halfSide = (max ? min ? max - min : max : 100) / 2;\n\n  var propStyle = function propStyle(percent, base_degrees) {\n    var rotateBy = base_degrees + percent * 180 / halfSide;\n    return {\n      transform: [{\n        rotateZ: rotateBy + 'deg'\n      }]\n    };\n  };\n\n  var renderThirdLayer = function renderThirdLayer(percent) {\n    if (percent > halfSide) {\n      return React.createElement(Box, {\n        borderTopColor: newProps.color,\n        borderRightColor: newProps.color,\n        style: [styles.secondProgressLayer, propStyle(percent - halfSide, 45)]\n      });\n    } else {\n      return React.createElement(Box, {\n        borderTopColor: newProps.trackColor,\n        borderRightColor: newProps.trackColor,\n        style: styles.offsetLayer\n      });\n    }\n  };\n\n  var firstProgressLayerStyle;\n\n  if (value > halfSide) {\n    firstProgressLayerStyle = propStyle(halfSide, -135);\n  } else {\n    firstProgressLayerStyle = propStyle(value, -135);\n  }\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends({}, sizeProps, {\n    rounded: viewHeight / 2,\n    borderWidth: defaultThickness,\n    borderColor: newProps.trackColor,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, remainingProps, {\n    ref: ref,\n    accessible: true,\n    accessibilityRole: \"progressbar\",\n    accessibilityValue: {\n      min: min,\n      max: max,\n      now: value\n    }\n  }), !isIndeterminate ? React.createElement(React.Fragment, null, React.createElement(Box, {\n    onLayout: layout,\n    borderTopColor: newProps.color,\n    borderRightColor: newProps.color,\n    style: [styles.firstProgressLayer, firstProgressLayerStyle]\n  }), renderThirdLayer(value), React.createElement(Box, {\n    _text: newProps._text\n  }, remainingProps.children)) : React.createElement(StyleAnimatedView, {\n    onLayout: layout,\n    borderTopColor: newProps.color,\n    borderRightColor: newProps.color,\n    style: styles.animateStyle\n  }));\n};\n\nexport default React.memo(React.forwardRef(CircularProgress));","map":{"version":3,"sources":["CircularProgress.tsx"],"names":["default","StyleAnimatedView","makeStyledComponent","Animated","CircularProgress","props","theme","useTheme","isDomUsable","canUseDom","value","newProps","useThemeProps","themeTools","sizeProps","height","width","size","themeHeight","get","themeWidth","styleSize","parseInt","defaultThickness","degree","toValue","duration","easing","Easing","useNativeDriver","React","layout","e","setViewHeight","defaultStyling","borderBottomLeftRadius","viewHeight","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","borderLeftWidth","borderBottomWidth","position","borderLeftColor","borderBottomColor","styles","firstProgressLayer","borderTopWidth","borderRightWidth","transform","rotateZ","secondProgressLayer","offsetLayer","borderRadius","animateStyle","inputRange","outputRange","halfSide","max","min","propStyle","rotateBy","base_degrees","percent","renderThirdLayer","firstProgressLayerStyle","useHasResponsiveProps","now","_text","remainingProps"],"mappings":"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","sourcesContent":["import get from 'lodash.get';\nimport React from 'react';\nimport { Animated, Easing, StyleSheet } from 'react-native';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport { useTheme, useThemeProps } from '../../../hooks';\nimport { canUseDom } from '../../../utils';\nimport { default as Box } from '../../primitives/Box';\nimport type { ICircularProgressProps } from './types';\nimport { themeTools } from '../../../theme';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyleAnimatedView = makeStyledComponent(Animated.View);\n\nconst CircularProgress = (\n  { value, isIndeterminate, max, min, ...props }: ICircularProgressProps,\n  ref: any\n) => {\n  const theme = useTheme();\n\n  const isDomUsable = canUseDom();\n  if (min) {\n    value = value - min;\n  }\n\n  let sizeProps;\n  let newProps = useThemeProps('CircularProgress', props);\n  let [, remainingProps] = themeTools.extractInObject(props, ['size']); // removing size from props so that Box don't accept size passed for CircularProgress\n\n  if (!newProps.size) {\n    sizeProps = {\n      height: newProps.height,\n      width: newProps.width,\n    };\n  } else {\n    sizeProps = { height: newProps.size, width: newProps.size };\n  }\n  // fetching size from theme for passing into style prop\n  const themeHeight = get(theme, 'space.' + sizeProps.height);\n  const themeWidth = get(theme, 'space.' + sizeProps.width);\n\n  const styleSize = {\n    height: themeHeight\n      ? parseInt(themeHeight.slice(themeHeight.Length, -2), 10)\n      : sizeProps.height,\n    width: themeWidth\n      ? parseInt(themeWidth.slice(themeWidth.Length, -2), 10)\n      : sizeProps.width,\n  };\n\n  const defaultThickness = newProps.thickness;\n  const degree: any = new Animated.Value(0);\n  if (isIndeterminate) {\n    if (isDomUsable) {\n      Animated.loop(\n        Animated.timing(degree, {\n          toValue: 1,\n          duration: 600,\n          easing: Easing.linear,\n          useNativeDriver: false,\n        })\n      ).start();\n    }\n  }\n  const [viewHeight, setViewHeight] = React.useState(0);\n  const layout = (e: any) => {\n    let height = e.nativeEvent.layout.height;\n    setViewHeight(height);\n  };\n\n  const defaultStyling: any = {\n    borderBottomLeftRadius: viewHeight / 2,\n    borderBottomRightRadius: viewHeight / 2,\n    borderTopLeftRadius: viewHeight / 2,\n    borderTopRightRadius: viewHeight / 2,\n    borderLeftWidth: defaultThickness,\n    borderBottomWidth: defaultThickness,\n    position: 'absolute',\n    borderLeftColor: 'transparent',\n    borderBottomColor: 'transparent',\n    ...styleSize,\n  };\n  const styles = StyleSheet.create({\n    firstProgressLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [{ rotateZ: '-135deg' }],\n    },\n    secondProgressLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [{ rotateZ: '45deg' }],\n    },\n    offsetLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      borderRadius: viewHeight / 2,\n      transform: [{ rotateZ: '-135deg' }],\n    },\n    animateStyle: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [\n        {\n          rotateZ: degree.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '360deg'],\n          }),\n        },\n      ],\n    },\n  });\n  let halfSide = (max ? (min ? max - min : max) : 100) / 2; // calculating the halfvalue of the progress according to min and max\n\n  const propStyle = (percent: number, base_degrees: number) => {\n    const rotateBy = base_degrees + (percent * 180) / halfSide;\n    return {\n      transform: [{ rotateZ: rotateBy + 'deg' }],\n    };\n  };\n\n  const renderThirdLayer = (percent: number) => {\n    if (percent > halfSide) {\n      return (\n        <Box\n          borderTopColor={newProps.color}\n          borderRightColor={newProps.color}\n          style={[\n            styles.secondProgressLayer,\n            propStyle(percent - halfSide, 45),\n          ]}\n        />\n      );\n    } else {\n      return (\n        <Box\n          borderTopColor={newProps.trackColor}\n          borderRightColor={newProps.trackColor}\n          style={styles.offsetLayer}\n        />\n      );\n    }\n  };\n  let firstProgressLayerStyle;\n  if (value > halfSide) {\n    firstProgressLayerStyle = propStyle(halfSide, -135);\n  } else {\n    firstProgressLayerStyle = propStyle(value, -135);\n  }\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      {...sizeProps}\n      rounded={viewHeight / 2}\n      borderWidth={defaultThickness}\n      borderColor={newProps.trackColor}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      {...remainingProps}\n      ref={ref}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityValue={{\n        min,\n        max,\n        now: value,\n      }}\n    >\n      {!isIndeterminate ? (\n        <>\n          <Box\n            onLayout={layout}\n            borderTopColor={newProps.color}\n            borderRightColor={newProps.color}\n            style={[styles.firstProgressLayer, firstProgressLayerStyle]}\n          />\n          {renderThirdLayer(value)}\n          <Box _text={newProps._text}>{remainingProps.children}</Box>\n        </>\n      ) : (\n        <StyleAnimatedView\n          onLayout={layout}\n          borderTopColor={newProps.color}\n          borderRightColor={newProps.color}\n          style={styles.animateStyle}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(CircularProgress));\n"]},"metadata":{},"sourceType":"module"}