{"ast":null,"code":"import { getColorFormColorScheme, getColorScheme, mode } from \"../tools\";\n\nfunction baseStyle(props) {\n  var activeColor = getColorFormColorScheme(props);\n  return {\n    activeTabStyle: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      mb: '-2px',\n      flexDirection: 'row',\n      _text: {\n        fontSize: 'sm',\n        fontWeight: 'bold'\n      }\n    },\n    inactiveTabStyle: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      mb: '-2px',\n      flexDirection: 'row',\n      _text: {\n        color: mode('gray.500', 'gray.400')(props),\n        fontSize: 'sm',\n        fontWeight: 'bold'\n      }\n    },\n    activeIconProps: {\n      color: activeColor,\n      name: 'home',\n      mx: 2\n    },\n    inactiveIconProps: {\n      name: 'home',\n      mx: 2\n    }\n  };\n}\n\nvar sizes = {\n  sm: {\n    activeTabStyle: {\n      _text: {\n        fontSize: 'sm'\n      },\n      py: 2,\n      px: 3\n    },\n    inactiveTabStyle: {\n      _text: {\n        fontSize: 'sm'\n      },\n      py: 2,\n      px: 3\n    }\n  },\n  md: {\n    activeTabStyle: {\n      _text: {\n        fontSize: 'md'\n      },\n      py: 3,\n      px: 4\n    },\n    inactiveTabStyle: {\n      _text: {\n        fontSize: 'md'\n      },\n      py: 3,\n      px: 4\n    }\n  },\n  lg: {\n    activeTabStyle: {\n      _text: {\n        fontSize: 'lg'\n      },\n      py: 4,\n      px: 5\n    },\n    inactiveTabStyle: {\n      _text: {\n        fontSize: 'lg'\n      },\n      py: 4,\n      px: 5\n    }\n  }\n};\n\nfunction variantOutline(props) {\n  var activeColor = getColorFormColorScheme(props);\n  var colorScheme = props.colorScheme,\n      status = props.status;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    activeTabStyle: {\n      borderColor: activeColor,\n      _text: {\n        color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".200\"))(props)\n      },\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      },\n      borderBottomWidth: 2\n    },\n    inactiveTabStyle: {\n      borderColor: 'transparent',\n      borderBottomWidth: 2,\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      }\n    },\n    tabBarStyle: {\n      borderBottomWidth: 2,\n      borderColor: mode('muted.200', 'muted.500')(props)\n    }\n  };\n}\n\nfunction variantFilled(props) {\n  var activeColor = getColorFormColorScheme(props);\n  var colorScheme = props.colorScheme,\n      status = props.status;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    activeTabStyle: {\n      borderColor: activeColor,\n      _text: {\n        color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".200\"))(props)\n      },\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      },\n      borderBottomWidth: 2,\n      bg: mode(\"\".concat(colorScheme, \".100\"), \"\".concat(colorScheme, \".700\"))(props)\n    },\n    inactiveTabStyle: {\n      borderColor: 'transparent',\n      borderBottomWidth: 2,\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      }\n    },\n    tabBarStyle: {\n      borderBottomWidth: 2,\n      borderColor: mode('muted.200', 'muted.500')(props)\n    }\n  };\n}\n\nfunction variantFilledOutline(props) {\n  var activeColor = getColorFormColorScheme(props);\n  var colorScheme = props.colorScheme,\n      status = props.status;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    activeTabStyle: {\n      borderColor: activeColor,\n      _text: {\n        color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".200\"))(props)\n      },\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      },\n      borderBottomWidth: 2\n    },\n    inactiveTabStyle: {\n      borderColor: 'transparent',\n      borderBottomWidth: 2,\n      _hover: {\n        bg: mode(\"\".concat(colorScheme, \".50\"), \"\".concat(colorScheme, \".800\"))(props)\n      }\n    },\n    tabBarStyle: {\n      borderBottomWidth: 2,\n      borderColor: mode('muted.200', 'muted.500')(props),\n      bg: mode(\"\".concat(colorScheme, \".100\"), \"\".concat(colorScheme, \".700\"))(props)\n    }\n  };\n}\n\nvar variants = {\n  'outline': variantOutline,\n  'filled': variantFilled,\n  'filled-outline': variantFilledOutline\n};\nvar defaultProps = {\n  size: 'md',\n  variant: 'outline',\n  colorScheme: 'primary'\n};\nexport default {\n  baseStyle: baseStyle,\n  variants: variants,\n  sizes: sizes,\n  defaultProps: defaultProps\n};","map":{"version":3,"sources":["tabs.ts"],"names":["activeColor","getColorFormColorScheme","activeTabStyle","justifyContent","alignItems","mb","flexDirection","_text","fontSize","fontWeight","inactiveTabStyle","color","mode","activeIconProps","name","mx","inactiveIconProps","sizes","sm","py","px","md","lg","status","colorScheme","getColorScheme","borderColor","_hover","bg","borderBottomWidth","tabBarStyle","variants","defaultProps","size","variant","baseStyle"],"mappings":"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","sourcesContent":["import { getColorFormColorScheme, getColorScheme, mode } from '../tools';\n\nfunction baseStyle(props: Record<string, any>) {\n  const activeColor = getColorFormColorScheme(props);\n  return {\n    activeTabStyle: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      mb: '-2px',\n      flexDirection: 'row',\n      _text: { fontSize: 'sm', fontWeight: 'bold' },\n    },\n    inactiveTabStyle: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      mb: '-2px',\n      flexDirection: 'row',\n      _text: {\n        color: mode('gray.500', 'gray.400')(props),\n        fontSize: 'sm',\n        fontWeight: 'bold',\n      },\n    },\n    activeIconProps: {\n      color: activeColor,\n      name: 'home',\n      mx: 2,\n    },\n    inactiveIconProps: {\n      name: 'home',\n      mx: 2,\n    },\n  };\n}\n\nconst sizes = {\n  sm: {\n    activeTabStyle: {\n      _text: { fontSize: 'sm' },\n      py: 2,\n      px: 3,\n    },\n    inactiveTabStyle: {\n      _text: { fontSize: 'sm' },\n      py: 2,\n      px: 3,\n    },\n  },\n  md: {\n    activeTabStyle: {\n      _text: { fontSize: 'md' },\n      py: 3,\n      px: 4,\n    },\n    inactiveTabStyle: {\n      _text: { fontSize: 'md' },\n      py: 3,\n      px: 4,\n    },\n  },\n  lg: {\n    activeTabStyle: {\n      _text: { fontSize: 'lg' },\n      py: 4,\n      px: 5,\n    },\n    inactiveTabStyle: {\n      _text: { fontSize: 'lg' },\n      py: 4,\n      px: 5,\n    },\n  },\n};\n\nfunction variantOutline(props: Record<string, any>) {\n  const activeColor = getColorFormColorScheme(props);\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    activeTabStyle: {\n      borderColor: activeColor,\n      _text: {\n        color: mode(`${colorScheme}.600`, `${colorScheme}.200`)(props),\n      },\n      _hover: {\n        bg: mode(`${colorScheme}.50`, `${colorScheme}.800`)(props),\n      },\n      borderBottomWidth: 2,\n    },\n    inactiveTabStyle: {\n      borderColor: 'transparent',\n      borderBottomWidth: 2,\n      _hover: {\n        bg: mode(`${colorScheme}.50`, `${colorScheme}.800`)(props),\n      },\n    },\n    tabBarStyle: {\n      borderBottomWidth: 2,\n      borderColor: mode('muted.200', 'muted.500')(props),\n    },\n  };\n}\n\nfunction variantFilled(props: Record<string, any>) {\n  const activeColor = getColorFormColorScheme(props);\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    activeTabStyle: {\n      borderColor: activeColor,\n      _text: { color: mode(`${colorScheme}.600`, `${colorScheme}.200`)(props) },\n      _hover: {\n        bg: mode(`${colorScheme}.50`, `${colorScheme}.800`)(props),\n      },\n      borderBottomWidth: 2,\n      bg: mode(`${colorScheme}.100`, `${colorScheme}.700`)(props),\n    },\n    inactiveTabStyle: {\n      borderColor: 'transparent',\n      borderBottomWidth: 2,\n      _hover: {\n        bg: mode(`${colorScheme}.50`, `${colorScheme}.800`)(props),\n      },\n    },\n    tabBarStyle: {\n      borderBottomWidth: 2,\n      borderColor: mode('muted.200', 'muted.500')(props),\n    },\n  };\n}\n\n// function variantEnclosed(props: Record<string, any>) {\n//   const activeColor = getColorFormColorScheme(props);\n//   return {\n//     activeTabStyle: {\n//       borderTopWidth: 2,\n//       borderLeftWidth: 2,\n//       borderRightWidth: 2,\n//       borderColor: activeColor,\n//     },\n//     inactiveTabStyle: {\n//       borderColor: 'muted.200',\n//       borderBottomWidth: 2,\n//     },\n//     tabBarStyle: {},\n//   };\n// }\n\nfunction variantFilledOutline(props: Record<string, any>) {\n  const activeColor = getColorFormColorScheme(props);\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    activeTabStyle: {\n      borderColor: activeColor,\n      _text: { color: mode(`${colorScheme}.600`, `${colorScheme}.200`)(props) },\n      _hover: {\n        bg: mode(`${colorScheme}.50`, `${colorScheme}.800`)(props),\n      },\n      borderBottomWidth: 2,\n    },\n    inactiveTabStyle: {\n      borderColor: 'transparent',\n      borderBottomWidth: 2,\n      _hover: {\n        bg: mode(`${colorScheme}.50`, `${colorScheme}.800`)(props),\n      },\n    },\n    tabBarStyle: {\n      borderBottomWidth: 2,\n      borderColor: mode('muted.200', 'muted.500')(props),\n      bg: mode(`${colorScheme}.100`, `${colorScheme}.700`)(props),\n    },\n  };\n}\n\n// function varientSoftRounded(props: Record<string, any>) {\n//   const activeColor = getColorFormColorScheme(props);\n//   return {\n//     activeTabStyle: {\n//       borderRadius: 'full',\n//       bg: transparentize(activeColor, 0.7)(props.theme),\n//       color: 'white',\n//     },\n//     inactiveTabStyle: {},\n//     tabBarStyle: {},\n//   };\n// }\n\n// function varientSolidRounded(props: Record<string, any>) {\n//   const activeColor = getColorFormColorScheme(props);\n//   return {\n//     activeTabStyle: {\n//       borderRadius: 'full',\n//       bg: activeColor,\n//       color: 'white',\n//     },\n//     inactiveTabStyle: {},\n//     tabBarStyle: {},\n//   };\n// }\n\n// function varientSolidBox(props: Record<string, any>) {\n//   const activeColor = getColorFormColorScheme(props);\n//   return {\n//     activeTabStyle: {\n//       bg: activeColor,\n//       color: 'white',\n//     },\n//     inactiveTabStyle: {},\n//     tabBarStyle: {},\n//   };\n// }\n\nconst variants = {\n  'outline': variantOutline,\n  'filled': variantFilled,\n  'filled-outline': variantFilledOutline,\n  // 'soft-rounded': varientSoftRounded,\n  // 'solid-rounded': varientSolidRounded,\n  // 'solid-box': varientSolidBox,\n};\n\nconst defaultProps = {\n  size: 'md',\n  variant: 'outline',\n  colorScheme: 'primary',\n};\n\nexport default {\n  baseStyle,\n  variants,\n  sizes,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"module"}