{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, useRef, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport MapView, { PROVIDER_GOOGLE, AnimatedRegion, Marker } from \"react-native-maps\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport * as Location from 'expo-location';\nimport { getDistance } from 'geolib';\nimport { mapStyle } from \"./mapStyle\";\nimport API_URL from \"../../API_URL\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { decode } from \"@mapbox/polyline\";\nimport { LoadingContext } from \"../../context/context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar API_KEY = \"AIzaSyCQoDI7E-OJ9RCK4MN7ykJqISCjIO6DwoU\";\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar CARD_HEIGHT = 220;\nvar CARD_WIDTH = width * 0.8;\nvar SPACING_FOR_CARD_INSET = width * 0.1 - 10;\n\nvar ExploreScreen = function ExploreScreen() {\n  var Navigation = useNavigation();\n  var targetCategory = JSON.stringify(useRoute().params.category).replace('\"', '').replace('\"', '');\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      userData = _useState2[0],\n      setUserData = _useState2[1];\n\n  var _useContext = useContext(LoadingContext),\n      setIsLoading = _useContext.setIsLoading;\n\n  var _useState3 = useState(targetCategory),\n      _useState4 = _slicedToArray(_useState3, 2),\n      category = _useState4[0],\n      setCategory = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      markers = _useState6[0],\n      setMarkers = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      photo = _useState8[0],\n      setPhoto = _useState8[1];\n\n  var _useState9 = useState(null),\n      _useState10 = _slicedToArray(_useState9, 2),\n      region = _useState10[0],\n      setRegion = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      currentLocation = _useState12[0],\n      setCurrentLocation = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      search = _useState14[0],\n      setSearch = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      filteredData = _useState16[0],\n      setFilteredData = _useState16[1];\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      showPath = _useState18[0],\n      setShowPath = _useState18[1];\n\n  var _useState19 = useState(\"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      starting = _useState20[0],\n      setStarting = _useState20[1];\n\n  var _useState21 = useState(\"\"),\n      _useState22 = _slicedToArray(_useState21, 2),\n      ending = _useState22[0],\n      setEnding = _useState22[1];\n\n  var _useState23 = useState([]),\n      _useState24 = _slicedToArray(_useState23, 2),\n      coords = _useState24[0],\n      setCoords = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      modalVisible = _useState26[0],\n      setModalVisible = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      modal2Visible = _useState28[0],\n      setModal2Visible = _useState28[1];\n\n  var openModal = function openModal() {\n    setModalVisible(true);\n  };\n\n  var _map = useRef(null);\n\n  var _scrollView = useRef(null);\n\n  var markerT = useRef(null);\n\n  var getUserData = function getUserData() {\n    var value;\n    return _regeneratorRuntime.async(function getUserData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 3:\n            value = _context.sent;\n\n            if (value !== null) {\n              setUserData(JSON.parse(value));\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    getUserData();\n  }, []);\n\n  var trackCurrentLocation = function trackCurrentLocation() {\n    (function _callee() {\n      var _await$Location$reque, status, location;\n\n      return _regeneratorRuntime.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n            case 2:\n              _await$Location$reque = _context2.sent;\n              status = _await$Location$reque.status;\n\n              if (!(status !== 'granted')) {\n                _context2.next = 7;\n                break;\n              }\n\n              console.warn('Permission to access location was denied');\n              return _context2.abrupt(\"return\");\n\n            case 7:\n              _context2.next = 9;\n              return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n            case 9:\n              location = _context2.sent;\n              setRegion(location);\n              setCurrentLocation(location);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  };\n\n  useEffect(function () {\n    setIsLoading(true);\n    trackCurrentLocation();\n    var targetURL = \"\";\n\n    if (category == \"All\") {\n      targetURL = API_URL + 'collector/Approved';\n    } else {\n      targetURL = API_URL + 'collector/Approved/' + category;\n    }\n\n    fetch(targetURL, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (results) {\n      if (region) {\n        results.sort(function (a, b) {\n          var disA = getDistance({\n            latitude: region.coords.latitude,\n            longitude: region.coords.longitude\n          }, {\n            latitude: a.lat,\n            longitude: a.long\n          });\n          var disB = getDistance({\n            latitude: region.coords.latitude,\n            longitude: region.coords.longitude\n          }, {\n            latitude: b.lat,\n            longitude: b.long\n          });\n          return disA - disB;\n        });\n      }\n\n      setMarkers(results);\n      setFilteredData(results);\n      setIsLoading(false);\n    }).catch(function (err) {\n      console.warn(err);\n    });\n  }, [category]);\n  var mapIndex = 0;\n  var mapAnimation = new Animated.Value(0);\n  useEffect(function () {\n    mapAnimation.addListener(function (_ref) {\n      var value = _ref.value;\n      var index = Math.floor(value / CARD_WIDTH + 0.3);\n\n      if (index >= filteredData.length) {\n        index = filteredData.length - 1;\n      }\n\n      if (index <= 0) {\n        index = 0;\n      }\n\n      clearTimeout(regionTimeout);\n      var regionTimeout = setTimeout(function () {\n        if (mapIndex !== index) {\n          mapIndex = index;\n\n          _map.current.animateToRegion({\n            latitude: filteredData[index].lat,\n            longitude: filteredData[index].long,\n            latitudeDelta: 0.008,\n            longitudeDelta: 0.008\n          }, 350);\n        }\n      }, 10);\n    });\n  });\n  var interpolations = filteredData.map(function (marker, index) {\n    var inputRange = [(index - 1) * CARD_WIDTH, index * CARD_WIDTH, (index + 1) * CARD_WIDTH];\n    var scale = mapAnimation.interpolate({\n      inputRange: inputRange,\n      outputRange: [1, 1.5, 1],\n      extrapolate: \"clamp\"\n    });\n    return {\n      scale: scale\n    };\n  });\n\n  var onMarkerPress = function onMarkerPress(mapEventData) {\n    var markerID = mapEventData._targetInst.return.key;\n    var x = markerID * CARD_WIDTH + markerID * 20;\n\n    if (Platform.OS === 'ios') {\n      x = x - SPACING_FOR_CARD_INSET;\n    }\n\n    _scrollView.current.scrollTo({\n      x: x,\n      y: 0,\n      animated: true\n    });\n  };\n\n  var in_app_navigate = function in_app_navigate(marker) {\n    setEnding(marker.lat.toString() + \",\" + marker.long.toString());\n    setShowPath(true);\n  };\n\n  var third_party_navigate = function third_party_navigate(marker) {\n    var scheme = Platform.select({\n      ios: 'maps:0,0?q=',\n      android: 'geo:0,0?q='\n    });\n    var latLng = marker.lat + \",\" + marker.long;\n    var label = 'Custom Label';\n    var url = Platform.select({\n      ios: \"\" + scheme + label + \"@\" + latLng,\n      android: \"\" + scheme + latLng + \"(\" + label + \")\"\n    });\n    Linking.openURL(url);\n  };\n\n  var distanceFromPosition = function distanceFromPosition(marker) {\n    var dis = getDistance({\n      latitude: region.coords.latitude,\n      longitude: region.coords.longitude\n    }, {\n      latitude: marker.lat,\n      longitude: marker.long\n    });\n    return (dis / 1000).toFixed(2);\n  };\n\n  var searchFilterFunction = function searchFilterFunction(text) {\n    if (text) {\n      var newData = markers.filter(function (item) {\n        var itemData = item.name ? item.name.toUpperCase() : ''.toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setFilteredData(newData);\n      setSearch(text);\n    } else {\n      setFilteredData(markers);\n      setSearch(text);\n    }\n  };\n\n  var getDirections = function getDirections(startLoc, destinationLoc) {\n    var resp, respJson, points, _coords;\n\n    return _regeneratorRuntime.async(function getDirections$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(fetch(\"https://maps.googleapis.com/maps/api/directions/json?origin=\" + startLoc + \"&destination=\" + destinationLoc + \"&key=\" + API_KEY));\n\n          case 3:\n            resp = _context3.sent;\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(resp.json());\n\n          case 6:\n            respJson = _context3.sent;\n            points = decode(respJson.routes[0].overview_polyline.points);\n            console.log(points);\n            _coords = points.map(function (point, index) {\n              return {\n                latitude: point[0],\n                longitude: point[1]\n              };\n            });\n            return _context3.abrupt(\"return\", _coords);\n\n          case 13:\n            _context3.prev = 13;\n            _context3.t0 = _context3[\"catch\"](0);\n            return _context3.abrupt(\"return\", _context3.t0);\n\n          case 16:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 13]], Promise);\n  };\n\n  useEffect(function () {\n    setIsLoading(true);\n    var interval = setInterval(function () {\n      if (showPath) {\n        (function _callee2() {\n          var _await$Location$reque2, status, location, _location$coords, latitude, longitude, newCoordinate;\n\n          return _regeneratorRuntime.async(function _callee2$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return _regeneratorRuntime.awrap(Location.requestForegroundPermissionsAsync());\n\n                case 2:\n                  _await$Location$reque2 = _context4.sent;\n                  status = _await$Location$reque2.status;\n\n                  if (!(status !== 'granted')) {\n                    _context4.next = 7;\n                    break;\n                  }\n\n                  console.warn('Permission to access location was denied');\n                  return _context4.abrupt(\"return\");\n\n                case 7:\n                  _context4.next = 9;\n                  return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync({}));\n\n                case 9:\n                  location = _context4.sent;\n                  setRegion(location);\n                  setCurrentLocation(location);\n                  console.log(location.coords.latitude.toString() + \",\" + location.coords.longitude.toString());\n                  getDirections(location.coords.latitude.toString() + \",\" + location.coords.longitude.toString(), ending).then(function (coords) {\n                    return setCoords(coords);\n                  }).catch(function (err) {\n                    return console.log(\"Something went wrong\");\n                  });\n                  _location$coords = location.coords, latitude = _location$coords.latitude, longitude = _location$coords.longitude;\n                  newCoordinate = {\n                    latitude: latitude,\n                    longitude: longitude\n                  };\n\n                case 16:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        })();\n      }\n\n      setIsLoading(false);\n    }, 1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [showPath]);\n\n  var arrive = function arrive(marker) {\n    setShowPath(false);\n    openModal();\n  };\n\n  return _jsx(_Fragment, {\n    children: region && _jsx(_Fragment, {\n      children: _jsxs(SafeAreaView, {\n        style: styles.container,\n        children: [_jsx(Modal, {\n          animationType: \"fade\",\n          transparent: true,\n          visible: modalVisible,\n          onRequestClose: function onRequestClose() {\n            setModalVisible(!modalVisible);\n          },\n          children: _jsx(View, {\n            style: styles.centeredView,\n            children: _jsxs(View, {\n              style: styles.modalView,\n              children: [_jsx(Text, {\n                style: styles.modalText,\n                children: \"Thank you for recycling!\"\n              }), _jsx(Text, {\n                style: styles.modalText2,\n                children: \"The collector will collect the items you have dropped and process your MR points within 3 days.\"\n              }), _jsx(Pressable, {\n                style: [styles.button, styles.buttonClose],\n                onPress: function onPress() {\n                  return setModalVisible(!modalVisible);\n                },\n                children: _jsx(Text, {\n                  style: styles.textStyle,\n                  children: \"Close\"\n                })\n              })]\n            })\n          })\n        }), _jsxs(MapView, {\n          ref: _map,\n          initialRegion: {\n            latitude: region.coords.latitude,\n            longitude: region.coords.longitude,\n            latitudeDelta: 0.005,\n            longitudeDelta: 0.005\n          },\n          region: {\n            latitude: region.coords.latitude,\n            longitude: region.coords.longitude,\n            latitudeDelta: 0.005,\n            longitudeDelta: 0.005\n          },\n          style: styles.container,\n          provider: PROVIDER_GOOGLE,\n          customMapStyle: mapStyle,\n          showsUserLocation: true,\n          followsUserLocation: true,\n          loadingEnabled: true,\n          children: [coords.length > 0 && _jsx(MapView.Polyline, {\n            coordinates: coords,\n            strokeWidth: 5,\n            strokeColor: \"#fff\"\n          }), _jsx(MapView.Marker, {\n            coordinate: {\n              latitude: region.coords.latitude,\n              longitude: region.coords.longitude\n            },\n            children: _jsx(View, {\n              style: styles.youBox,\n              children: _jsx(Text, {\n                style: styles.youText,\n                children: \"You\"\n              })\n            })\n          }), filteredData.map(function (marker, index) {\n            var scaleStyle = {\n              transform: [{\n                scale: interpolations[index].scale\n              }]\n            };\n            return _jsx(MapView.Marker, {\n              coordinate: {\n                latitude: marker.lat,\n                longitude: marker.long\n              },\n              onPress: function onPress(e) {\n                return onMarkerPress(e);\n              },\n              children: _jsx(Animated.View, {\n                style: [styles.markerWrap],\n                children: _jsx(Animated.Image, {\n                  source: require(\"../../public/assets/map_marker.png\"),\n                  style: [styles.marker, scaleStyle],\n                  resizeMode: \"cover\"\n                })\n              })\n            }, index);\n          })]\n        }), _jsxs(View, {\n          style: styles.header,\n          children: [_jsxs(View, {\n            style: styles.searchBox,\n            children: [_jsx(TextInput, {\n              placeholder: \"Search here\",\n              placeholderTextColor: \"#000\",\n              autoCapitalize: \"none\",\n              style: {\n                flex: 1,\n                padding: 0\n              },\n              onChangeText: function onChangeText(text) {\n                return searchFilterFunction(text);\n              }\n            }), _jsx(Ionicons, {\n              name: \"ios-search\",\n              size: 20\n            })]\n          }), _jsx(View, {\n            style: styles.backToPositionBox,\n            children: _jsx(TouchableOpacity, {\n              onPress: trackCurrentLocation,\n              children: _jsx(Ionicons, {\n                name: \"body\",\n                size: 20\n              })\n            })\n          })]\n        }), _jsxs(ScrollView, {\n          horizontal: true,\n          scrollEventThrottle: 1,\n          showsHorizontalScrollIndicator: false,\n          height: 50,\n          style: styles.chipsScrollView,\n          contentInset: {\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 20\n          },\n          contentContainerStyle: {\n            paddingRight: Platform.OS === 'android' ? 20 : 0\n          },\n          children: [_jsx(TouchableOpacity, {\n            style: category == \"All\" ? styles.chipsItemActive : styles.chipsItem,\n            onPress: function onPress() {\n              return setCategory(\"All\");\n            },\n            children: _jsx(Text, {\n              children: \"All\"\n            })\n          }), _jsxs(TouchableOpacity, {\n            style: category == \"General Waste\" ? styles.chipsItemActive : styles.chipsItem,\n            onPress: function onPress() {\n              return setCategory(\"General Waste\");\n            },\n            children: [_jsx(MaterialCommunityIcons, {\n              style: styles.chipsIcon,\n              name: \"alpha-g-box-outline\",\n              size: 18\n            }), _jsx(Text, {\n              children: \"General Waste\"\n            })]\n          }), _jsxs(TouchableOpacity, {\n            style: category == \"E-Waste\" ? styles.chipsItemActive : styles.chipsItem,\n            onPress: function onPress() {\n              return setCategory(\"E-Waste\");\n            },\n            children: [_jsx(MaterialCommunityIcons, {\n              name: \"cellphone\",\n              style: styles.chipsIcon,\n              size: 18\n            }), _jsx(Text, {\n              children: \"E-Waste\"\n            })]\n          }), _jsxs(TouchableOpacity, {\n            style: category == \"Food Waste\" ? styles.chipsItemActive : styles.chipsItem,\n            onPress: function onPress() {\n              return setCategory(\"Food Waste\");\n            },\n            children: [_jsx(MaterialCommunityIcons, {\n              name: \"food\",\n              style: styles.chipsIcon,\n              size: 18\n            }), _jsx(Text, {\n              children: \"Food Waste\"\n            })]\n          }), _jsxs(TouchableOpacity, {\n            style: category == \"Used Cooking Oil\" ? styles.chipsItemActive : styles.chipsItem,\n            onPress: function onPress() {\n              return setCategory(\"Used Cooking Oil\");\n            },\n            children: [_jsx(Ionicons, {\n              name: \"water\",\n              style: styles.chipsIcon,\n              size: 18\n            }), _jsx(Text, {\n              children: \"Used Cooking Oil\"\n            })]\n          })]\n        }), _jsx(Animated.ScrollView, {\n          ref: _scrollView,\n          horizontal: true,\n          directionalLockEnabled: true,\n          showsVerticalScrollIndicator: false,\n          pagingEnabled: true,\n          scrollEventThrottle: 1,\n          showsHorizontalScrollIndicator: false,\n          snapToInterval: CARD_WIDTH + 20,\n          snapToAlignment: \"center\",\n          style: styles.scrollView,\n          contentInset: {\n            top: 0,\n            left: SPACING_FOR_CARD_INSET,\n            bottom: 0,\n            right: SPACING_FOR_CARD_INSET\n          },\n          contentContainerStyle: {\n            paddingHorizontal: Platform.OS === 'android' ? SPACING_FOR_CARD_INSET : 0\n          },\n          onScroll: Animated.event([{\n            nativeEvent: {\n              contentOffset: {\n                x: mapAnimation\n              }\n            }\n          }], {\n            useNativeDriver: true\n          }),\n          children: filteredData.map(function (marker, index) {\n            return _jsxs(View, {\n              style: styles.card,\n              children: [_jsx(Image, {\n                source: require(\"../../public/assets/background.jpg\"),\n                style: styles.cardImage,\n                resizeMode: \"cover\"\n              }), _jsxs(Text, {\n                style: {\n                  position: \"absolute\",\n                  top: 0,\n                  right: 0,\n                  padding: 6,\n                  margin: 8,\n                  textAlign: \"right\",\n                  backgroundColor: \"rgba(255,255,255,0.6)\"\n                },\n                children: [distanceFromPosition(marker), \" km away\"]\n              }), _jsxs(View, {\n                style: styles.textContent,\n                children: [_jsx(Text, {\n                  numberOfLines: 1,\n                  style: styles.cardtitle,\n                  children: marker.name\n                }), _jsx(Text, {\n                  style: styles.cardDescription,\n                  children: marker.alamat\n                }), _jsx(View, {\n                  style: [styles.button, {\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\"\n                  }],\n                  children: showPath ? _jsx(_Fragment, {\n                    children: parseFloat(distanceFromPosition(marker)) < 0.3 ? _jsx(TouchableOpacity, {\n                      style: [styles.signIn, {\n                        backgroundColor: \"#FC8B10\",\n                        marginTop: 6\n                      }],\n                      onPress: function onPress() {\n                        return arrive(marker);\n                      },\n                      children: _jsx(Text, {\n                        style: [styles.textSign, {\n                          color: '#fff'\n                        }],\n                        children: \"Arrived\"\n                      })\n                    }) : _jsx(TouchableOpacity, {\n                      style: [styles.signIn, {\n                        borderColor: '#1FAA8F',\n                        borderWidth: 2,\n                        backgroundColor: \"transparent\",\n                        marginTop: 6\n                      }],\n                      onPress: function onPress() {\n                        return setShowPath(false);\n                      },\n                      children: _jsx(Text, {\n                        style: [styles.textSign, {\n                          color: '#1FAA8F'\n                        }],\n                        children: \"Stop\"\n                      })\n                    })\n                  }) : _jsxs(_Fragment, {\n                    children: [_jsx(TouchableOpacity, {\n                      style: [styles.signIn, {\n                        backgroundColor: '#1FAA8F',\n                        marginTop: 6,\n                        width: \"49%\"\n                      }],\n                      onPress: function onPress() {\n                        return in_app_navigate(marker);\n                      },\n                      children: _jsx(Text, {\n                        style: [styles.textSign, {\n                          color: 'white'\n                        }],\n                        children: \"In App Navigate\"\n                      })\n                    }), _jsx(TouchableOpacity, {\n                      style: [styles.signIn, {\n                        backgroundColor: '#FC8B10',\n                        marginTop: 6,\n                        width: \"49%\"\n                      }],\n                      onPress: function onPress() {\n                        return third_party_navigate(marker);\n                      },\n                      children: _jsx(Text, {\n                        style: [styles.textSign, {\n                          color: 'white'\n                        }],\n                        children: \"Third Party App\"\n                      })\n                    })]\n                  })\n                })]\n              })]\n            }, index);\n          })\n        })]\n      })\n    })\n  });\n};\n\nexport default ExploreScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    position: 'absolute',\n    marginTop: Platform.OS === 'ios' ? 10 : 8,\n    flexDirection: \"row\",\n    width: '90%',\n    justifyContent: 'space-between',\n    alignSelf: 'center'\n  },\n  searchBox: {\n    flexDirection: \"row\",\n    backgroundColor: '#fff',\n    width: '85%',\n    borderRadius: 5,\n    padding: 10,\n    shadowColor: '#ccc',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    elevation: 10\n  },\n  backToPositionBox: {\n    flexDirection: \"row\",\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'flex-end',\n    backgroundColor: '#FC8B10',\n    height: '100%',\n    borderRadius: 5,\n    padding: 10,\n    shadowColor: '#ccc',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    elevation: 10\n  },\n  chipsScrollView: {\n    position: 'absolute',\n    top: Platform.OS === 'ios' ? 60 : 65,\n    paddingHorizontal: 10\n  },\n  chipsIcon: {\n    marginRight: 5\n  },\n  chipsItem: {\n    flexDirection: \"row\",\n    backgroundColor: '#fff',\n    borderRadius: 20,\n    padding: 8,\n    paddingHorizontal: 20,\n    marginHorizontal: 10,\n    height: 35,\n    shadowColor: '#ccc',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    elevation: 10\n  },\n  chipsItemActive: {\n    flexDirection: \"row\",\n    backgroundColor: '#1FAA8F',\n    borderRadius: 20,\n    padding: 8,\n    paddingHorizontal: 20,\n    marginHorizontal: 10,\n    height: 35,\n    shadowColor: '#ccc',\n    shadowOffset: {\n      width: 0,\n      height: 3\n    },\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    elevation: 10\n  },\n  scrollView: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    paddingVertical: 10\n  },\n  endPadding: {\n    paddingRight: width - CARD_WIDTH\n  },\n  card: {\n    elevation: 2,\n    backgroundColor: \"#FFF\",\n    borderTopLeftRadius: 5,\n    borderTopRightRadius: 5,\n    marginHorizontal: 10,\n    shadowColor: \"#000\",\n    shadowRadius: 5,\n    shadowOpacity: 0.3,\n    shadowOffset: {\n      x: 2,\n      y: -2\n    },\n    height: CARD_HEIGHT,\n    width: CARD_WIDTH,\n    overflow: \"hidden\"\n  },\n  cardImage: {\n    flex: 3,\n    width: \"100%\",\n    height: \"100%\",\n    alignSelf: \"center\"\n  },\n  textContent: {\n    flex: 2,\n    padding: 10\n  },\n  cardtitle: {\n    fontSize: 12,\n    fontWeight: \"bold\"\n  },\n  cardDescription: {\n    fontSize: 12,\n    color: \"#444\"\n  },\n  markerWrap: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 50,\n    height: 50\n  },\n  marker: {\n    width: 30,\n    height: 30\n  },\n  button: {\n    alignItems: 'center',\n    marginTop: 5\n  },\n  signIn: {\n    width: '100%',\n    padding: 5,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 3\n  },\n  textSign: {\n    fontSize: 14,\n    fontWeight: 'bold'\n  },\n  youBox: {\n    width: 40,\n    height: 40,\n    backgroundColor: \"#1FAA8F\",\n    borderRadius: 100,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  youText: {\n    color: \"#fff\",\n    fontWeight: \"600\"\n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0,0,0,0.3)\"\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 8,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  buttonClose: {\n    backgroundColor: \"#1FAA8F\",\n    padding: 10,\n    borderRadius: 4,\n    width: \"100%\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\",\n    fontSize: 16,\n    fontWeight: \"700\"\n  },\n  modalText2: {\n    marginBottom: 15,\n    textAlign: \"center\",\n    fontSize: 14\n  }\n});","map":{"version":3,"sources":["/Users/weiherr/Desktop/FYP/MyRecycle/mobile-app/screens/explore/ExploreScreen.js"],"names":["React","useEffect","useState","useRef","useContext","MapView","PROVIDER_GOOGLE","AnimatedRegion","Marker","Ionicons","MaterialCommunityIcons","Location","getDistance","mapStyle","API_URL","useNavigation","useRoute","AsyncStorage","decode","LoadingContext","API_KEY","Dimensions","get","width","height","CARD_HEIGHT","CARD_WIDTH","SPACING_FOR_CARD_INSET","ExploreScreen","Navigation","targetCategory","JSON","stringify","params","category","replace","userData","setUserData","setIsLoading","setCategory","markers","setMarkers","photo","setPhoto","region","setRegion","currentLocation","setCurrentLocation","search","setSearch","filteredData","setFilteredData","showPath","setShowPath","starting","setStarting","ending","setEnding","coords","setCoords","modalVisible","setModalVisible","modal2Visible","setModal2Visible","openModal","_map","_scrollView","markerT","getUserData","getItem","value","parse","console","log","trackCurrentLocation","requestForegroundPermissionsAsync","status","warn","getCurrentPositionAsync","location","targetURL","fetch","method","headers","then","response","json","results","sort","a","b","disA","latitude","longitude","lat","long","disB","catch","err","mapIndex","mapAnimation","Animated","Value","addListener","index","Math","floor","length","clearTimeout","regionTimeout","setTimeout","current","animateToRegion","latitudeDelta","longitudeDelta","interpolations","map","marker","inputRange","scale","interpolate","outputRange","extrapolate","onMarkerPress","mapEventData","markerID","_targetInst","return","key","x","Platform","OS","scrollTo","y","animated","in_app_navigate","toString","third_party_navigate","scheme","select","ios","android","latLng","label","url","Linking","openURL","distanceFromPosition","dis","toFixed","searchFilterFunction","text","newData","filter","item","itemData","name","toUpperCase","textData","indexOf","getDirections","startLoc","destinationLoc","resp","respJson","points","routes","overview_polyline","point","interval","setInterval","newCoordinate","clearInterval","arrive","styles","container","centeredView","modalView","modalText","modalText2","button","buttonClose","textStyle","youBox","youText","scaleStyle","transform","e","markerWrap","require","header","searchBox","flex","padding","backToPositionBox","chipsScrollView","top","left","bottom","right","paddingRight","chipsItemActive","chipsItem","chipsIcon","scrollView","paddingHorizontal","event","nativeEvent","contentOffset","useNativeDriver","card","cardImage","position","margin","textAlign","backgroundColor","textContent","cardtitle","cardDescription","alamat","flexDirection","justifyContent","parseFloat","signIn","marginTop","textSign","color","borderColor","borderWidth","StyleSheet","create","alignSelf","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","alignItems","marginRight","marginHorizontal","paddingVertical","endPadding","borderTopLeftRadius","borderTopRightRadius","overflow","fontSize","fontWeight","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, useContext } from 'react';\nimport {\n  StyleSheet,\n  Text,\n  TextInput,\n  View,\n  ScrollView,\n  Animated,\n  Image,\n  TouchableOpacity,\n  Dimensions,\n  Platform,\n  SafeAreaView,\n  Linking,\n  ActivityIndicator,\n  Modal,\n  Pressable\n} from \"react-native\";\nimport MapView, {PROVIDER_GOOGLE, AnimatedRegion, Marker} from \"react-native-maps\";\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport * as Location from 'expo-location';\nimport { getDistance } from 'geolib';\nimport { mapStyle } from './mapStyle';\nimport API_URL from '../../API_URL';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport {decode} from \"@mapbox/polyline\"; \nimport { LoadingContext } from '../../context/context';\n\n//to demostrate\n//latitude: 2.052833\n//longtitude: 102.580917\n\nconst API_KEY = \"AIzaSyCQoDI7E-OJ9RCK4MN7ykJqISCjIO6DwoU\";\n\n//stuff for sliding cards\nconst { width, height } = Dimensions.get(\"window\");\nconst CARD_HEIGHT = 220;\nconst CARD_WIDTH = width * 0.8;\nconst SPACING_FOR_CARD_INSET = width * 0.1 - 10;\n\nconst ExploreScreen = () => {\n\n  const Navigation = useNavigation(); \n  const targetCategory = JSON.stringify(useRoute().params.category).replace('\"','').replace('\"','');\n\n  const [userData, setUserData] = useState(null);\n  const { setIsLoading } = useContext(LoadingContext);\n\n  const [category, setCategory] = useState(targetCategory);\n  const [markers, setMarkers] = useState([]);\n  const [photo, setPhoto] = useState([]);\n  const [region, setRegion] = useState(null);\n  const [currentLocation, setCurrentLocation] = useState(\"\");\n  const [search, setSearch] = useState('');\n  const [filteredData, setFilteredData] = useState([]);\n\n  //for live tracking\n  const [showPath, setShowPath] = useState(false);\n  const [starting, setStarting] = useState(\"\");\n  const [ending, setEnding] = useState(\"\");\n\n  const [coords, setCoords] = useState([]);\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [modal2Visible, setModal2Visible] = useState(false);\n\n\n  const openModal = () => {\n    setModalVisible(true);\n  }\n\n  const _map = useRef(null);\n  const _scrollView = useRef(null);\n  const markerT = useRef(null);\n\n    //get user data\n    const getUserData = async () => {\n      try {\n        const value = await AsyncStorage.getItem('user');\n        if (value !== null) {\n          // We have data!!\n          setUserData(JSON.parse(value));\n        }\n      } catch (error) {\n        // Error retrieving data\n        console.log(error);\n      }\n    }; \n  \n    //get user data\n    useEffect(() => {\n      getUserData();\n    }, [])\n  \n\n  const trackCurrentLocation = () => {\n\n    //get current location\n    (async () => {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        console.warn('Permission to access location was denied');\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      setRegion(location);\n      setCurrentLocation(location);\n\n    })();\n}\n\n//load locations\n  useEffect(() => {\n\n    setIsLoading(true);\n\n    trackCurrentLocation();\n\n    //load collectors by category \n    var targetURL = \"\";\n\n    if (category == \"All\") {\n      targetURL = API_URL + 'collector/Approved';\n    } else {\n      targetURL = API_URL + 'collector/Approved/' + category;\n    }\n\n    fetch(targetURL, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(response => response.json())\n      .then(results => {\n\n        if (region) {\n          //sorting by distance ascending\n          results.sort(function(a, b) {\n\n            var disA = getDistance(\n              {latitude: region.coords.latitude, longitude: region.coords.longitude},\n              {latitude: a.lat, longitude: a.long},\n            );\n\n            var disB = getDistance(\n              {latitude: region.coords.latitude, longitude: region.coords.longitude},\n              {latitude: b.lat, longitude: b.long},\n            );\n\n            return disA - disB;\n          });\n        }\n        setMarkers(results);\n        setFilteredData(results);\n        setIsLoading(false);\n\n      })\n      .catch(err => {\n        console.warn(err);\n        // setIsLoading(false);\n        // setError(err);\n      });\n\n      // for (let index = 0; index < markers.length; index++) {\n          \n      //   var placeSearchURL = `https://maps.googleapis.com/maps/api/place/findplacefromtext/json?input=${markers[index].alamat},IL&key=${API_KEY}&inputtype=textquery&fields=name,photos`;\n      //   // //set markers google photos\n      //   fetch(placeSearchURL, {\n      //     method: 'GET',\n      //     headers: {\n      //       'Content-Type': 'application/json',\n      //     },\n      //   })\n      //     .then(response => response.json())\n      //     .then(results => {\n\n      //       let newArr = [...markers]; // copying the old datas array\n      //       newArr[index].image = `https://maps.googleapis.com/maps/api/place/photo?photoreference=${results.candidates[0].photos[0].photo_reference}&key=${API_KEY}&maxwidth=400&maxheight=400`; // replace e.target.value with whatever you want to change it to\n      //       setMarkers(newArr);\n      //       console.log(markers);\n\n      //         // markers[index].image = `https://maps.googleapis.com/maps/api/place/photo?photoreference=${results1.candidates[0].photos[0].photo_reference}&key=${API_KEY}&maxwidth=400&maxheight=400`;              \n      //     })\n      //     .catch(err => {\n      //       // console.warn(err);\n      //       // console.log(err);\n\n      //     });\n\n      // }\n\n\n\n    }, [category]);\n\n//map animation---------------------------------------------------------------------------------------------------------\n//map animation---------------------------------------------------------------------------------------------------------\n//map animation---------------------------------------------------------------------------------------------------------\n  let mapIndex = 0;\n  let mapAnimation = new Animated.Value(0);\n\n  useEffect(() => {\n    // someFunc();\n    mapAnimation.addListener(({ value }) => {\n      let index = Math.floor(value / CARD_WIDTH + 0.3); // animate 30% away from landing on the next item\n      if (index >= filteredData.length) {\n        index = filteredData.length - 1;\n      }\n      if (index <= 0) {\n        index = 0;\n      }\n\n      clearTimeout(regionTimeout);\n\n      const regionTimeout = setTimeout(() => {\n        if( mapIndex !== index ) {\n          mapIndex = index;\n\n          _map.current.animateToRegion({\n              latitude: filteredData[index].lat,\n              longitude: filteredData[index].long,\n              latitudeDelta: 0.008,\n              longitudeDelta: 0.008,\n          }, 350);\n\n        }\n      }, 10);\n\n    });\n  });\n\n  const interpolations = filteredData.map((marker, index) => {\n    const inputRange = [\n      (index - 1) * CARD_WIDTH,\n      index * CARD_WIDTH,\n      ((index + 1) * CARD_WIDTH),\n    ];\n\n    const scale = mapAnimation.interpolate({\n      inputRange,\n      outputRange: [1, 1.5, 1],\n      extrapolate: \"clamp\"\n    });\n\n    return { scale };\n  });\n\n//map animation---------------------------------------------------------------------------------------------------------\n//map animation---------------------------------------------------------------------------------------------------------\n//map animation---------------------------------------------------------------------------------------------------------\n\n  const onMarkerPress = (mapEventData) => {\n    \n    const markerID = mapEventData._targetInst.return.key;\n\n    let x = (markerID * CARD_WIDTH) + (markerID * 20); \n    if (Platform.OS === 'ios') {\n      x = x - SPACING_FOR_CARD_INSET;\n    }\n\n    _scrollView.current.scrollTo({x: x, y: 0, animated: true});\n\n  }\n\n\nconst in_app_navigate = (marker) => {\n\n  // setStarting(currentLocation.coords.latitude.toString() + \",\" + currentLocation.coords.longitude.toString());\n  setEnding(marker.lat.toString() + \",\" + marker.long.toString());\n  setShowPath(true);\n  // setRegion(currentLocation);\n\n}\n\nconst third_party_navigate = (marker) => {\n\n  const scheme = Platform.select({ ios: 'maps:0,0?q=', android: 'geo:0,0?q=' });\n  const latLng = `${marker.lat},${marker.long}`;\n  const label = 'Custom Label';\n  const url = Platform.select({\n    ios: `${scheme}${label}@${latLng}`,\n    android: `${scheme}${latLng}(${label})`\n  });\n  \n  Linking.openURL(url);   \n\n}\n\nconst distanceFromPosition = (marker) => {\n  var dis = getDistance(\n    {latitude: region.coords.latitude, longitude: region.coords.longitude},\n    {latitude: marker.lat, longitude: marker.long},\n  );\n  return((dis / 1000).toFixed(2));\n}\n\n// const getImage = (marker, index) => {\n\n//           var placeSearchURL = `https://maps.googleapis.com/maps/api/place/findplacefromtext/json?input=${marker.alamat},IL&key=${API_KEY}&inputtype=textquery&fields=name,photos`;\n//           // //set markers google photos\n//           fetch(placeSearchURL, {\n//             method: 'GET',\n//             headers: {\n//               'Content-Type': 'application/json',\n//             },\n//           })\n//             .then(response => response.json())\n//             .then(results => {\n\n//               // let newArr = [...markers];\n//               if(results.status == \"ZERO_RESULTS\"){\n//                 markers[index].image = \" \";\n//               }else{\n//                 markers[index].image = `https://maps.googleapis.com/maps/api/place/photo?photoreference=${results.candidates[0].photos[0].photo_reference}&key=${API_KEY}&maxwidth=400&maxheight=400`;\n//               }\n//             })\n//             .catch(err => {\n//               console.warn(err);\n\n//             });\n\n//             console.log(markers);\n\n//             return marker.image;\n// }\n\nconst searchFilterFunction = (text) => {\n  // Check if searched text is not blank\n  if (text) {\n    // Inserted text is not blank\n    // Filter the masterDataSource\n    // Update FilteredData\n    const newData = markers.filter(\n      function (item) {\n        const itemData = item.name\n          ? item.name.toUpperCase()\n          : ''.toUpperCase();\n        const textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n    });\n    setFilteredData(newData);\n    setSearch(text);\n  } else {\n    // Inserted text is blank\n    // Update FilteredData with masterDataSource\n    setFilteredData(markers);\n    setSearch(text);\n  }\n};\n\nconst getDirections = async (startLoc, destinationLoc) => {\n  try {\n    let resp = await fetch(\n      `https://maps.googleapis.com/maps/api/directions/json?origin=${startLoc}&destination=${destinationLoc}&key=${API_KEY}`\n    );\n    let respJson = await resp.json();\n    let points = decode(respJson.routes[0].overview_polyline.points);\n    console.log(points);\n    let coords = points.map((point, index) => {\n      return {\n        latitude: point[0],\n        longitude: point[1]\n      };\n    });\n    return coords;\n  } catch (error) {\n    return error;\n  }\n};\n\nuseEffect(() => {\n\n  setIsLoading(true);\n\n  const interval = setInterval(() => {\n\n    if(showPath){\n    //get current location\n    (async () => {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        console.warn('Permission to access location was denied');\n        return;\n      }\n\n      let location = await Location.getCurrentPositionAsync({});\n      setRegion(location);\n      setCurrentLocation(location);\n      // console.log(location);\n\n      //start drawing path\n      // setStarting(location.coords.latitude.toString() + \",\" + location.coords.longitude.toString());\n      console.log(location.coords.latitude.toString() + \",\" + location.coords.longitude.toString());\n      // console.log(ending);\n      getDirections(location.coords.latitude.toString() + \",\" + location.coords.longitude.toString(), ending)\n      .then(coords => setCoords(coords))\n      .catch(err => console.log(\"Something went wrong\"));\n\n      //get current position\n      const { latitude, longitude } = location.coords;\n      const newCoordinate = {\n        latitude,\n        longitude\n      };\n      // console.log(newCoordinate);\n\n      // if (Platform.OS === \"android\") {\n      //   if (markerT) {\n      //     markerT._component.animateMarkerToCoordinate(\n      //       newCoordinate,\n      //       500\n      //     );\n      //    }\n      //  } else {\n      //    coordinate.timing(newCoordinate).start();\n      //  }\n        //  setRouteCoordinates(routeCoordinates.concat([newCoordinate]));\n        //  console.log(routeCoordinates);\n        //  setDistanceTravelled(distanceTravelled + calcDistance(newCoordinate));\n        //  setPrevLatLng(newCoordinate);\n    })();\n  }\n\n  setIsLoading(false);\n  }, 1000);\n\n  return () => clearInterval(interval);\n}, [showPath]);\n\n\nconst arrive = (marker) => {\n  setShowPath(false);\n  openModal();\n}\n\n  return (\n      <>\n      {region && (\n      <>\n      <SafeAreaView style={styles.container}>\n      <Modal\n        animationType=\"fade\"\n        transparent={true}\n        visible={modalVisible}\n        onRequestClose={() => {\n          setModalVisible(!modalVisible);\n        }}\n      >\n        <View style={styles.centeredView}>\n          <View style={styles.modalView}>\n            <Text style={styles.modalText}>Thank you for recycling!</Text>\n            <Text style={styles.modalText2}>The collector will collect the items you have dropped and process your MR points within 3 days.</Text>\n            <Pressable\n              style={[styles.button, styles.buttonClose]}\n              onPress={() => setModalVisible(!modalVisible)}\n            >\n              <Text style={styles.textStyle}>Close</Text>\n            </Pressable>\n          </View>\n        </View>\n      </Modal>\n\n      <MapView\n        ref={_map}\n        initialRegion={{\n          latitude: region.coords.latitude,\n          longitude: region.coords.longitude,\n          latitudeDelta: 0.005,\n          longitudeDelta: 0.005,\n        }}\n        region={{\n          latitude: region.coords.latitude,\n          longitude: region.coords.longitude,\n          latitudeDelta: 0.005,\n          longitudeDelta: 0.005,\n        }}\n        style={styles.container}\n        provider={PROVIDER_GOOGLE}\n        customMapStyle={mapStyle}\n        showsUserLocation\n        followsUserLocation\n        loadingEnabled\n      >\n        {coords.length > 0 && <MapView.Polyline coordinates={coords} strokeWidth={5} strokeColor=\"#fff\"/>}\n        <MapView.Marker\n        coordinate={{ latitude: region.coords.latitude, longitude: region.coords.longitude }}>\n        <View style={styles.youBox}>\n          <Text style={styles.youText}>You</Text>\n        </View>\n        </MapView.Marker>\n        {filteredData.map((marker, index) => {\n          const scaleStyle = {\n            transform: [\n              {\n                scale: interpolations[index].scale,\n              },\n            ],\n          };\n\n          return (\n            <MapView.Marker key={index} coordinate={{latitude: marker.lat,  longitude: marker.long}} onPress={(e)=>onMarkerPress(e)}>\n              <Animated.View style={[styles.markerWrap]}>\n                <Animated.Image\n                  source={require('../../public/assets/map_marker.png')}\n                  style={[styles.marker, scaleStyle]}\n                  resizeMode=\"cover\"\n                />\n              </Animated.View>\n            </MapView.Marker>\n          );\n        })}\n      </MapView>\n      <View style={styles.header}>\n        <View style={styles.searchBox}>\n          <TextInput \n            placeholder=\"Search here\"\n            placeholderTextColor=\"#000\"\n            autoCapitalize=\"none\"\n            style={{flex:1,padding:0}}\n            onChangeText={(text) => searchFilterFunction(text)}\n          />\n          <Ionicons name=\"ios-search\" size={20} />\n        </View>\n        <View style={styles.backToPositionBox}>\n          <TouchableOpacity onPress={trackCurrentLocation}>\n            <Ionicons name=\"body\" size={20} />\n          </TouchableOpacity>\n        </View>\n      </View>\n\n\n      <ScrollView\n        horizontal\n        scrollEventThrottle={1}\n        showsHorizontalScrollIndicator={false}\n        height={50}\n        style={styles.chipsScrollView}\n        contentInset={{ // iOS only\n          top:0,\n          left:0,\n          bottom:0,\n          right:20\n        }}\n        contentContainerStyle={{\n          paddingRight: Platform.OS === 'android' ? 20 : 0\n        }}\n      >\n      \n      <TouchableOpacity style={(category==\"All\")? styles.chipsItemActive : styles.chipsItem} onPress={() => setCategory(\"All\")}>\n        <Text>All</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={(category==\"General Waste\")? styles.chipsItemActive : styles.chipsItem} onPress={() => setCategory(\"General Waste\")}>\n        <MaterialCommunityIcons style={styles.chipsIcon} name=\"alpha-g-box-outline\" size={18} />\n        <Text>General Waste</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={(category==\"E-Waste\")? styles.chipsItemActive : styles.chipsItem} onPress={() => setCategory(\"E-Waste\")}>\n        <MaterialCommunityIcons name=\"cellphone\" style={styles.chipsIcon} size={18} />\n        <Text>E-Waste</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={(category==\"Food Waste\")? styles.chipsItemActive : styles.chipsItem} onPress={() => setCategory(\"Food Waste\")}>\n        <MaterialCommunityIcons name=\"food\" style={styles.chipsIcon} size={18} />\n        <Text>Food Waste</Text>\n      </TouchableOpacity>\n      <TouchableOpacity style={(category==\"Used Cooking Oil\")? styles.chipsItemActive : styles.chipsItem} onPress={() => setCategory(\"Used Cooking Oil\")}>\n        <Ionicons name=\"water\" style={styles.chipsIcon} size={18} />\n        <Text>Used Cooking Oil</Text>\n      </TouchableOpacity>\n\n      </ScrollView>\n      <Animated.ScrollView\n        ref={_scrollView}\n        horizontal\n        directionalLockEnabled={true}\n        showsVerticalScrollIndicator={false}\n        pagingEnabled\n        scrollEventThrottle={1}\n        showsHorizontalScrollIndicator={false}\n        snapToInterval={CARD_WIDTH + 20}\n        snapToAlignment=\"center\"\n        style={styles.scrollView}\n        contentInset={{\n          top: 0,\n          left: SPACING_FOR_CARD_INSET,\n          bottom: 0,\n          right: SPACING_FOR_CARD_INSET\n        }}\n        contentContainerStyle={{\n          paddingHorizontal: Platform.OS === 'android' ? SPACING_FOR_CARD_INSET : 0\n        }}\n        onScroll={Animated.event(\n          [\n            {\n              nativeEvent: {\n                contentOffset: {\n                  x: mapAnimation,\n                }\n              },\n            },\n          ],\n          {useNativeDriver: true}\n        )}\n      >\n        {filteredData.map((marker, index) =>(\n          <View style={styles.card} key={index}>\n            <Image \n              source={require('../../public/assets/background.jpg')}\n              style={styles.cardImage}\n              resizeMode=\"cover\"\n            />\n            {/* <Image\n              style={styles.cardImage}\n              resizeMode=\"cover\"\n              source={{\n                uri: marker.image,\n              }}\n            /> */}\n            <Text style={{position:\"absolute\", top:0, right:0, padding:6, margin:8, textAlign:\"right\", backgroundColor:\"rgba(255,255,255,0.6)\"}}>{distanceFromPosition(marker)} km away</Text>\n            <View style={styles.textContent}>\n              <Text numberOfLines={1} style={styles.cardtitle}>{marker.name}</Text>\n              {/* <StarRating ratings={marker.rating} reviews={marker.reviews} /> */}\n              <Text style={styles.cardDescription}>{marker.alamat}</Text>\n              <View style={[styles.button, {flexDirection:\"row\", justifyContent:\"space-between\"}]}>\n                {showPath ? \n                  <>\n                    {parseFloat(distanceFromPosition(marker)) < 0.3 ? \n                    <TouchableOpacity\n                    style={[styles.signIn, {\n                      backgroundColor:\"#FC8B10\",\n                      marginTop:6,\n                    }]}\n                    onPress={()=>arrive(marker)}\n                  >\n                    <Text style={[styles.textSign, {\n                      color: '#fff'\n                    }]}>Arrived</Text>\n                  </TouchableOpacity>                  \n                    :\n                    <TouchableOpacity\n                    style={[styles.signIn, {\n                      borderColor: '#1FAA8F',\n                      borderWidth:2,\n                      backgroundColor:\"transparent\",\n                      marginTop:6,\n                    }]}\n                    onPress={()=>setShowPath(false)}\n                  >\n                    <Text style={[styles.textSign, {\n                      color: '#1FAA8F'\n                    }]}>Stop</Text>\n                  </TouchableOpacity>\n                  }\n                </>\n                : \n                <>\n                <TouchableOpacity\n                  style={[styles.signIn, {\n                    backgroundColor: '#1FAA8F',\n                    marginTop:6,\n                    width:\"49%\"\n                  }]}\n                  onPress={()=>in_app_navigate(marker)}\n                >\n                  <Text style={[styles.textSign, {\n                    color: 'white'\n                  }]}>In App Navigate</Text>\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={[styles.signIn, {\n                    backgroundColor: '#FC8B10',\n                    marginTop:6,\n                    width:\"49%\"\n                  }]}\n                  onPress={()=>third_party_navigate(marker)}\n                >\n                  <Text style={[styles.textSign, {\n                    color: 'white'\n                  }]}>Third Party App</Text>\n                </TouchableOpacity>\n                </>\n                }\n\n              </View>\n            </View>\n          </View>\n        ))}\n      </Animated.ScrollView>\n    </SafeAreaView>\n      </>\n      )}\n      </>\n\n  );\n};\n\nexport default ExploreScreen;\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  header: {\n    position:'absolute', \n    marginTop: Platform.OS === 'ios' ? 10 : 8,\n    flexDirection:\"row\",\n    width: '90%',\n    justifyContent:'space-between',\n    alignSelf:'center',\n  },\n  searchBox: {\n    flexDirection:\"row\",\n    backgroundColor: '#fff',\n    width: '85%',\n    borderRadius: 5,\n    padding: 10,\n    shadowColor: '#ccc',\n    shadowOffset: { width: 0, height: 3 },\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    elevation: 10,\n  },\n  backToPositionBox:{\n    flexDirection:\"row\",\n    justifyContent:'center',\n    alignItems:'center',\n    alignSelf:'flex-end',\n    backgroundColor: '#FC8B10',\n    height:'100%',\n    borderRadius: 5,\n    padding: 10,\n    shadowColor: '#ccc',\n    shadowOffset: { width: 0, height: 3 },\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    elevation: 10,\n  },\n  chipsScrollView: {\n    position:'absolute', \n    top:Platform.OS === 'ios' ? 60 : 65, \n    paddingHorizontal:10\n  },\n  chipsIcon: {\n    marginRight: 5,\n  },\n  chipsItem: {\n    flexDirection:\"row\",\n    backgroundColor:'#fff', \n    borderRadius:20,\n    padding:8,\n    paddingHorizontal:20, \n    marginHorizontal:10,\n    height:35,\n    shadowColor: '#ccc',\n    shadowOffset: { width: 0, height: 3 },\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    elevation: 10,\n  },\n  chipsItemActive: {\n    flexDirection:\"row\",\n    backgroundColor:'#1FAA8F', \n    borderRadius:20,\n    padding:8,\n    paddingHorizontal:20, \n    marginHorizontal:10,\n    height:35,\n    shadowColor: '#ccc',\n    shadowOffset: { width: 0, height: 3 },\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    elevation: 10,\n  },\n  scrollView: {\n    position: \"absolute\",\n    bottom: 0,\n    left: 0,\n    right: 0,\n    paddingVertical: 10,\n  },\n  endPadding: {\n    paddingRight: width - CARD_WIDTH,\n  },\n  card: {\n    elevation: 2,\n    backgroundColor: \"#FFF\",\n    borderTopLeftRadius: 5,\n    borderTopRightRadius: 5,\n    marginHorizontal: 10,\n    shadowColor: \"#000\",\n    shadowRadius: 5,\n    shadowOpacity: 0.3,\n    shadowOffset: { x: 2, y: -2 },\n    height: CARD_HEIGHT,\n    width: CARD_WIDTH,\n    overflow: \"hidden\",\n  },\n  cardImage: {\n    flex: 3,\n    width: \"100%\",\n    height: \"100%\",\n    alignSelf: \"center\",\n  },\n  textContent: {\n    flex: 2,\n    padding: 10,\n  },\n  cardtitle: {\n    fontSize: 12,\n    // marginTop: 5,\n    fontWeight: \"bold\",\n  },\n  cardDescription: {\n    fontSize: 12,\n    color: \"#444\",\n  },\n  markerWrap: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width:50,\n    height:50,\n  },\n  marker: {\n    width: 30,\n    height: 30,\n  },\n  button: {\n    alignItems: 'center',\n    marginTop: 5\n  },\n  signIn: {\n      width: '100%',\n      padding:5,\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: 3\n  },\n  textSign: {\n      fontSize: 14,\n      fontWeight: 'bold'\n  },\n  youBox:{\n    width:40,\n    height:40,\n    backgroundColor: \"#1FAA8F\",\n    borderRadius: 100,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  youText:{\n    color: \"#fff\",\n    fontWeight: \"600\"   \n  },\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor:\"rgba(0,0,0,0.3)\"\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius:8,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  buttonClose: {\n    backgroundColor: \"#1FAA8F\",\n    padding: 10,\n    borderRadius: 4,\n    width:\"100%\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\",\n    fontSize:16,\n    fontWeight:\"700\"\n  },\n  modalText2: {\n    marginBottom: 15,\n    textAlign: \"center\",\n    fontSize:14,\n  }\n});"]},"metadata":{},"sourceType":"module"}