{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { NativeBaseProvider, Box, Button, ScrollView, Stack, Center, Accordion, Text, Divider, List, Image, PresenceTransition, Pressable, HStack, VStack, Heading, Fab, Icon, Spinner, Skeleton, FlatList } from 'native-base';\nimport { useNavigation } from '@react-navigation/native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { AntDesign, Ionicons } from \"@expo/vector-icons\";\nimport { Video } from 'expo-av';\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport var GeneralWaste = function GeneralWaste() {\n  var Navigation = useNavigation();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(\"Paper\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      material = _useState4[0],\n      setMaterial = _useState4[1];\n\n  var _useState5 = useState(\"Recyclable\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isRecyclable = _useState6[0],\n      setIsRecyclable = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      modalVisible = _useState8[0],\n      setModalVisible = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isLoading = _useState10[0],\n      setIsLoading = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      guide = _useState14[0],\n      setGuide = _useState14[1];\n\n  var video = useRef(null);\n\n  var _useState15 = useState({}),\n      _useState16 = _slicedToArray(_useState15, 2),\n      status = _useState16[0],\n      setStatus = _useState16[1];\n\n  useEffect(function () {\n    var ac = new AbortController();\n    setIsLoading(true);\n    fetch(API_URL + 'material/category/General Waste', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (results) {\n      setData(results);\n      setIsLoading(false);\n    }).catch(function (err) {\n      setIsLoading(false);\n      setError(err);\n    });\n    return function () {\n      return ac.abort();\n    };\n  }, [material]);\n  useEffect(function () {\n    var ac = new AbortController();\n    setIsLoading(true);\n    fetch(API_URL + 'guide', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (results) {\n      setGuide(results);\n      setIsLoading(false);\n    }).catch(function (err) {\n      setIsLoading(false);\n      setError(err);\n    });\n    return function () {\n      return ac.abort();\n    };\n  }, []);\n\n  var _renderMaterials = function _renderMaterials() {\n    return data.map(function (item, index) {\n      return _jsx(TouchableOpacity, {\n        style: material == item.material ? styles.chipsItemActive : styles.chipsItem,\n        onPress: function onPress() {\n          return setMaterial(item.material);\n        },\n        children: _jsx(Text, {\n          style: material == item.material ? {\n            color: \"white\"\n          } : \"\",\n          children: item.material\n        })\n      }, \"material-\" + index);\n    });\n  };\n\n  var _renderRecyclables = function _renderRecyclables() {\n    var target = data.find(function (el) {\n      return el.material === material;\n    });\n    var itemArray = [];\n    if (isRecyclable === \"Recyclable\") itemArray = target.recyclable.split(',');else itemArray = target.non_recyclable.split(',');\n    return _jsx(FlatList, {\n      data: itemArray,\n      scrollToOverflowEnabled: false,\n      width: \"full\",\n      h: \"280\",\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsxs(HStack, {\n          backgroundColor: \"white\",\n          width: \"100%\",\n          rounded: \"lg\",\n          p: \"3\",\n          px: \"5\",\n          mb: \"2\",\n          alignItems: \"center\",\n          space: 4,\n          children: [_jsx(Image, {\n            size: \"10\",\n            source: require(\"../../public/assets/oil.png\"),\n            alt: \"Alternate Text\"\n          }), _jsx(Text, {\n            children: item\n          })]\n        });\n      },\n      keyExtractor: function keyExtractor(item) {\n        return item;\n      }\n    });\n  };\n\n  var _renderGuide = function _renderGuide() {\n    return guide.map(function (item, index) {\n      return _jsxs(HStack, {\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n        width: \"full\",\n        backgroundColor: \"white\",\n        p: \"4\",\n        rounded: \"20\",\n        space: 4,\n        children: [_jsxs(Box, {\n          backgroundColor: \"gray.100\",\n          borderRadius: \"100\",\n          size: \"20\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          children: [item.id === 1 && _jsx(Image, {\n            source: require(\"../../public/assets/recycle-steps/step_1.png\"),\n            alt: \"action-picture\",\n            size: \"20\"\n          }), item.id === 2 && _jsx(Image, {\n            source: require(\"../../public/assets/recycle-steps/step_2.png\"),\n            alt: \"action-picture\",\n            size: \"20\"\n          }), item.id === 3 && _jsx(Image, {\n            source: require(\"../../public/assets/recycle-steps/step_3.png\"),\n            alt: \"action-picture\",\n            size: \"20\"\n          }), item.id === 4 && _jsx(Image, {\n            source: require(\"../../public/assets/recycle-steps/step_4.png\"),\n            alt: \"action-picture\",\n            size: \"20\"\n          }), item.id === 5 && _jsx(Image, {\n            source: require(\"../../public/assets/recycle-steps/step_5.png\"),\n            alt: \"action-picture\",\n            size: \"20\"\n          })]\n        }), _jsx(VStack, {\n          w: \"4/6\",\n          space: 1,\n          children: _jsx(Text, {\n            fontSize: \"sm\",\n            children: item.content\n          })\n        })]\n      }, \"guide-\" + index);\n    });\n  };\n\n  return _jsx(ImageBackground, {\n    source: require(\"../../public/assets/bg-1-100.jpg\"),\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: isLoading ? _jsx(Center, {\n      w: \"full\",\n      h: \"full\",\n      children: _jsx(Spinner, {\n        size: \"lg\",\n        color: \"emerald.500\"\n      })\n    }) : _jsx(_Fragment, {\n      children: _jsxs(VStack, {\n        w: \"full\",\n        h: \"full\",\n        p: \"3\",\n        children: [_jsx(Modal, {\n          animated: true,\n          animationType: \"slide\",\n          visible: modalVisible,\n          transparent: true,\n          onRequestClose: function onRequestClose() {\n            setModalVisible(!modalVisible);\n          },\n          children: _jsx(View, {\n            style: [styles.overlay, {\n              height: 660\n            }],\n            children: _jsx(Animated.View, {\n              style: [styles.container, {\n                height: 660\n              }],\n              children: _jsx(VStack, {\n                space: 3,\n                style: {\n                  width: \"100%\",\n                  height: \"100%\",\n                  paddingHorizontal: 32,\n                  paddingVertical: 20\n                },\n                children: _jsxs(ScrollView, {\n                  children: [_jsx(Heading, {\n                    size: \"md\",\n                    textAlign: \"center\",\n                    children: \"How to recycle?\"\n                  }), _jsx(VStack, {\n                    width: \"80\",\n                    py: \"5\",\n                    space: 3,\n                    children: guide && _renderGuide()\n                  }), _jsxs(Text, {\n                    textAlign: \"center\",\n                    bold: true,\n                    py: \"2\",\n                    children: [\"How to Recycle Correctly \", _jsx(Text, {\n                      fontStyle: \"italic\",\n                      fontWeight: \"400\",\n                      children: \"by WWF UK\"\n                    })]\n                  }), _jsx(Video, {\n                    ref: video,\n                    style: {\n                      alignSelf: 'center',\n                      width: 300,\n                      height: 169,\n                      marginBottom: 16\n                    },\n                    source: require(\"../../public/assets/WWF_recycle_tips.mp4\"),\n                    useNativeControls: true,\n                    resizeMode: \"contain\",\n                    isLooping: true,\n                    onPlaybackStatusUpdate: function onPlaybackStatusUpdate(status) {\n                      return setStatus(function () {\n                        return status;\n                      });\n                    }\n                  }), _jsxs(Text, {\n                    textAlign: \"center\",\n                    mb: \"5\",\n                    w: \"xs\",\n                    children: [\"To learn more, please visit \", _jsx(Text, {\n                      style: {\n                        color: \"blue\",\n                        fontStyle: \"italic\"\n                      },\n                      onPress: function onPress() {\n                        return Linking.openURL('https://jpspn.kpkt.gov.my');\n                      },\n                      children: \"JPSPN website\"\n                    }), \" for the latest information.\"]\n                  }), _jsx(Button, {\n                    bordered: true,\n                    block: true,\n                    style: {\n                      borderRadius: 20,\n                      backgroundColor: \"transparent\",\n                      borderColor: \"#1FAA8F\",\n                      borderWidth: 2\n                    },\n                    onPress: function onPress() {\n                      return setModalVisible(false);\n                    },\n                    children: _jsx(Text, {\n                      bold: true,\n                      children: \"Close\"\n                    })\n                  })]\n                })\n              })\n            })\n          })\n        }), _jsxs(VStack, {\n          justifyContent: \"flex-start\",\n          alignItems: \"center\",\n          px: \"3\",\n          space: 5,\n          w: \"full\",\n          h: \"full\",\n          children: [_jsx(ScrollView, {\n            horizontal: true,\n            scrollEventThrottle: 1,\n            showsHorizontalScrollIndicator: false,\n            height: 50,\n            contentInset: {\n              top: 0,\n              left: 0,\n              bottom: 0,\n              right: 20\n            },\n            contentContainerStyle: {\n              paddingVertical: 10\n            },\n            style: {\n              maxHeight: 50\n            },\n            children: data && _renderMaterials()\n          }), _jsx(Box, {\n            mb: \"-1\",\n            children: _jsxs(HStack, {\n              px: \"3\",\n              py: \"2\",\n              rounded: \"full\",\n              style: isRecyclable === \"Recyclable\" ? {\n                backgroundColor: \"#1FAA8F\"\n              } : {\n                backgroundColor: \"#dc2626\"\n              },\n              children: [_jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return setIsRecyclable(\"Recyclable\");\n                },\n                children: _jsx(Box, {\n                  style: isRecyclable == \"Recyclable\" ? styles.active : styles.nonactive,\n                  width: \"32\",\n                  py: \"1\",\n                  children: _jsx(Text, {\n                    textAlign: \"center\",\n                    style: isRecyclable === \"Recyclable\" ? {\n                      color: \"black\"\n                    } : {\n                      color: \"white\"\n                    },\n                    children: \"Recyclable\"\n                  })\n                })\n              }), _jsx(TouchableOpacity, {\n                onPress: function onPress() {\n                  return setIsRecyclable(\"Non-recyclable\");\n                },\n                children: _jsx(Box, {\n                  style: isRecyclable == \"Non-recyclable\" ? styles.active : styles.nonactive,\n                  width: \"32\",\n                  py: \"1\",\n                  children: _jsx(Text, {\n                    textAlign: \"center\",\n                    style: isRecyclable === \"Non-recyclable\" ? {\n                      color: \"black\"\n                    } : {\n                      color: \"white\"\n                    },\n                    children: \"Non-recyclable\"\n                  })\n                })\n              })]\n            })\n          }), _jsx(VStack, {\n            backgroundColor: \"#000\",\n            w: \"full\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            p: \"4\",\n            space: 4,\n            borderRadius: \"12\",\n            style: isRecyclable === \"Recyclable\" ? {\n              backgroundColor: \"#1FAA8F\"\n            } : {\n              backgroundColor: \"#E1E1E1\"\n            },\n            children: data ? _renderRecyclables() : _jsx(_Fragment, {})\n          }), material === \"Plastic\" ? _jsxs(VStack, {\n            width: \"full\",\n            space: 2,\n            mt: \"-2\",\n            children: [_jsxs(HStack, {\n              space: 2,\n              style: isRecyclable == \"Recyclable\" ? {\n                display: \"flex\"\n              } : {\n                display: \"none\"\n              },\n              children: [_jsx(Box, {\n                children: _jsx(Image, {\n                  size: \"20\",\n                  source: require(\"../../public/assets/plastic1.jpg\"),\n                  alt: \"Alternate Text\"\n                })\n              }), _jsx(Box, {\n                children: _jsx(Image, {\n                  size: \"20\",\n                  source: require(\"../../public/assets/plastic2.jpg\"),\n                  alt: \"Alternate Text\"\n                })\n              }), _jsx(Box, {\n                children: _jsx(Image, {\n                  size: \"20\",\n                  source: require(\"../../public/assets/plastic5.jpg\"),\n                  alt: \"Alternate Text\"\n                })\n              })]\n            }), _jsxs(HStack, {\n              space: 2,\n              style: isRecyclable == \"Non-recyclable\" ? {\n                display: \"flex\"\n              } : {\n                display: \"none\"\n              },\n              children: [_jsx(Box, {\n                children: _jsx(Image, {\n                  size: \"20\",\n                  source: require(\"../../public/assets/plastic3.jpg\"),\n                  alt: \"Alternate Text\"\n                })\n              }), _jsx(Box, {\n                children: _jsx(Image, {\n                  size: \"20\",\n                  source: require(\"../../public/assets/plastic4.jpg\"),\n                  alt: \"Alternate Text\"\n                })\n              }), _jsx(Box, {\n                children: _jsx(Image, {\n                  size: \"20\",\n                  source: require(\"../../public/assets/plastic6.jpg\"),\n                  alt: \"Alternate Text\"\n                })\n              }), _jsx(Box, {\n                children: _jsx(Image, {\n                  size: \"20\",\n                  source: require(\"../../public/assets/plastic7.jpg\"),\n                  alt: \"Alternate Text\"\n                })\n              })]\n            })]\n          }) : _jsx(_Fragment, {}), _jsxs(VStack, {\n            style: styles.buttongroup,\n            w: \"full\",\n            space: 2,\n            children: [_jsx(Button, {\n              style: styles.button,\n              background: \"transparent\",\n              borderColor: \"#1FAA8F\",\n              onPress: function onPress() {\n                return setModalVisible(true);\n              },\n              children: _jsx(Text, {\n                bold: true,\n                color: \"#1FAA8F\",\n                children: \"How to recycle?\"\n              })\n            }), _jsx(Button, {\n              style: styles.button,\n              background: \"#FC8B10\",\n              borderColor: \"#FC8B10\",\n              onPress: function onPress(e) {\n                return Navigation.navigate('Explore', {\n                  category: \"General Waste\"\n                });\n              },\n              children: _jsx(Text, {\n                bold: true,\n                color: \"white\",\n                children: \"Search Collector\"\n              })\n            })]\n          })]\n        })]\n      })\n    })\n  });\n};\nexport default (function () {\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(Center, {\n      flex: 1,\n      children: _jsx(GeneralWaste, {})\n    })\n  });\n});\nvar styles = StyleSheet.create({\n  chipsItem: {\n    flexDirection: \"row\",\n    backgroundColor: '#e8e8e8',\n    borderRadius: 20,\n    padding: 8,\n    paddingHorizontal: 20,\n    marginHorizontal: 10,\n    height: 35,\n    elevation: 10\n  },\n  chipsItemActive: {\n    flexDirection: \"row\",\n    backgroundColor: '#1FAA8F',\n    borderRadius: 20,\n    padding: 8,\n    paddingHorizontal: 20,\n    marginHorizontal: 10,\n    height: 35,\n    elevation: 10\n  },\n  icon: {\n    position: \"absolute\"\n  },\n  buttongroup: {\n    position: 'absolute',\n    bottom: 0\n  },\n  button: {\n    borderRadius: 20,\n    borderWidth: 2\n  },\n  active: {\n    backgroundColor: \"white\",\n    borderRadius: 50\n  },\n  overlay: {\n    flex: 1,\n    justifyContent: 'flex-end'\n  },\n  container: {\n    shadowColor: '#171717',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 8,\n    elevation: 20,\n    backgroundColor: '#E9F4F1',\n    borderTopRightRadius: 40,\n    borderTopLeftRadius: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingTop: 12,\n    paddingBottom: 28\n  }\n});","map":{"version":3,"sources":["/Users/weiherr/Desktop/FYP/MyRecycle/mobile-app/screens/guide/GeneralWasteScreen.js"],"names":["React","useEffect","useRef","useState","NativeBaseProvider","Box","Button","ScrollView","Stack","Center","Accordion","Text","Divider","List","Image","PresenceTransition","Pressable","HStack","VStack","Heading","Fab","Icon","Spinner","Skeleton","FlatList","useNavigation","AntDesign","Ionicons","Video","GeneralWaste","Navigation","data","setData","material","setMaterial","isRecyclable","setIsRecyclable","modalVisible","setModalVisible","isLoading","setIsLoading","error","setError","guide","setGuide","video","status","setStatus","ac","AbortController","fetch","API_URL","method","headers","then","response","json","results","catch","err","abort","_renderMaterials","map","item","index","styles","chipsItemActive","chipsItem","color","_renderRecyclables","target","find","el","itemArray","recyclable","split","non_recyclable","require","_renderGuide","id","content","width","height","overlay","container","paddingHorizontal","paddingVertical","alignSelf","marginBottom","fontStyle","Linking","openURL","borderRadius","backgroundColor","borderColor","borderWidth","top","left","bottom","right","maxHeight","active","nonactive","display","buttongroup","button","e","navigate","category","StyleSheet","create","flexDirection","padding","marginHorizontal","elevation","icon","position","flex","justifyContent","shadowColor","shadowOffset","shadowOpacity","shadowRadius","borderTopRightRadius","borderTopLeftRadius","alignItems","paddingTop","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { NativeBaseProvider, Box, Button, ScrollView, Stack, Center, Accordion, Text, Divider, List, Image, PresenceTransition, Pressable, HStack, VStack, Heading, Fab, Icon, Spinner, Skeleton, FlatList } from 'native-base';\nimport { useNavigation } from '@react-navigation/native';\nimport { StyleSheet, TouchableOpacity, Animated, View, Modal, ImageBackground, ActivityIndicator } from \"react-native\";\nimport { AntDesign, Ionicons } from \"@expo/vector-icons\"\nimport { Video } from 'expo-av';\nimport { Linking } from \"react-native\";\n\nexport const GeneralWaste = () => {\n  \n  const Navigation = useNavigation(); \n\n  const [data, setData] = useState();\n  const [material, setMaterial] = useState(\"Paper\");\n  const [isRecyclable, setIsRecyclable] = useState(\"Recyclable\");\n  const [modalVisible, setModalVisible] = useState(false);\n  const [isLoading, setIsLoading] = useState();\n  const [error, setError] = useState();\n  const [guide, setGuide] = useState([]);\n\n  const video = useRef(null);\n  const [status, setStatus] = useState({});\n\n  //load material content\n  useEffect(() => {\n\n    const ac = new AbortController();\n\n    setIsLoading(true);\n\n    fetch(API_URL + 'material/category/General Waste', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(response => response.json())\n      .then(results => {\n        setData(results);\n        setIsLoading(false);\n      })\n      .catch(err => {\n        setIsLoading(false);\n        setError(err);\n      });\n\n      return () => ac.abort();\n\n  }, [material]);\n\n  //load recycle guide\n  useEffect(() => {\n\n    const ac = new AbortController();\n\n    setIsLoading(true);\n\n    fetch(API_URL + 'guide', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(response => response.json())\n      .then(results => {\n        setGuide(results);\n        setIsLoading(false);\n      })\n      .catch(err => {\n        setIsLoading(false);\n        setError(err);\n      });\n\n      return () => ac.abort();\n\n  }, []);  \n\n\nconst _renderMaterials = () => {\n  return data.map((item, index) => {\n    return (\n      <TouchableOpacity style={material == item.material ? styles.chipsItemActive : styles.chipsItem} onPress={()=>setMaterial(item.material)} key={`material-${index}`}>\n        <Text style={material == item.material ? {color:\"white\"} : \"\"}>{item.material}</Text>\n      </TouchableOpacity>\n    )\n  })\n}\n\nconst _renderRecyclables = () => {\n  \n  var target = data.find(el => el.material === material);\n\n  var itemArray = [];\n\n  if(isRecyclable === \"Recyclable\")itemArray = target.recyclable.split(',');\n  else itemArray = target.non_recyclable.split(',');\n\n  return (\n    <FlatList \n    data={itemArray}\n    scrollToOverflowEnabled={false}\n    width=\"full\"\n    h=\"280\"\n    renderItem={({ item }) => (\n\n      <HStack backgroundColor=\"white\" width=\"100%\" rounded=\"lg\" p=\"3\" px=\"5\" mb=\"2\" alignItems=\"center\" space={4}>\n        <Image size=\"10\" source={require('../../public/assets/oil.png')} alt=\"Alternate Text\"/>\n        <Text>{item}</Text>  \n      </HStack>\n      \n    )}\n    keyExtractor={(item) => item}/>\n  )\n\n\n  // return itemArray.map((item, index) => {\n  //   return (\n  //     <HStack backgroundColor=\"white\" width=\"90%\" rounded=\"lg\" p=\"3\" px=\"5\" alignItems=\"center\" space={4} key={`item-${index}`}>\n  //       <Image size=\"10\" source={require('../../public/assets/oil.png')} alt=\"Alternate Text\"/>\n  //       <Text>{item}</Text>  \n  //     </HStack>\n  //   )\n  // })\n}\n\nconst _renderGuide = () => {\n  return guide.map((item, index) => {\n    return (\n      <HStack alignItems=\"center\" justifyContent=\"flex-start\" width=\"full\" backgroundColor=\"white\" p=\"4\" rounded=\"20\" space={4} key={`guide-${index}`}>\n        <Box backgroundColor=\"gray.100\" borderRadius=\"100\" size=\"20\" justifyContent=\"center\" alignItems=\"center\">\n          {/* <Text bold>{item.id}</Text> */}\n          {item.id === 1 && \n            <Image source={require(\"../../public/assets/recycle-steps/step_1.png\")} alt=\"action-picture\" size=\"20\"/>\n          }\n          {item.id === 2 && \n            <Image source={require(\"../../public/assets/recycle-steps/step_2.png\")} alt=\"action-picture\" size=\"20\"/>\n          }\n          {item.id === 3 && \n            <Image source={require(\"../../public/assets/recycle-steps/step_3.png\")} alt=\"action-picture\" size=\"20\"/>\n          }\n          {item.id === 4 && \n            <Image source={require(\"../../public/assets/recycle-steps/step_4.png\")} alt=\"action-picture\" size=\"20\"/>\n          }\n          {item.id === 5 && \n            <Image source={require(\"../../public/assets/recycle-steps/step_5.png\")} alt=\"action-picture\" size=\"20\"/>\n          }\n        </Box>\n        <VStack w=\"4/6\" space={1}>\n          <Text fontSize=\"sm\">{item.content}</Text>  \n        </VStack>\n      </HStack>\n    )\n  })\n}\n  \n\n  return (\n\n    <ImageBackground source={require(\"../../public/assets/bg-1-100.jpg\")} style={{width:\"100%\", height:\"100%\"}}>\n      {isLoading ? \n      <Center w=\"full\" h=\"full\">\n        <Spinner size=\"lg\" color=\"emerald.500\"/>\n      </Center> \n      : \n      <>\n        {/* <Fab position=\"absolute\" right=\"2\" bottom=\"120\" size=\"sm\" icon={<Icon color=\"white\" as={<AntDesign name=\"plus\" />} size=\"sm\" />} /> */}\n      <VStack w=\"full\" h=\"full\" p=\"3\" >\n          <Modal\n          animated\n          animationType=\"slide\"\n          visible={modalVisible}\n          transparent\n          onRequestClose={() => {\n            setModalVisible(!modalVisible);\n          }}\n          >\n          <View style={[styles.overlay,{height:660}]}>\n          <Animated.View style={[styles.container,{height:660}]}>\n            <VStack space={3} style={{width:\"100%\", height:\"100%\",paddingHorizontal:32, paddingVertical:20}}>\n              <ScrollView>\n                <Heading size=\"md\" textAlign=\"center\">How to recycle?</Heading>\n                <VStack width=\"80\" py=\"5\" space={3}>\n                  {guide && _renderGuide()}\n                </VStack>\n                <Text textAlign=\"center\" bold py=\"2\">How to Recycle Correctly <Text fontStyle=\"italic\" fontWeight=\"400\">by WWF UK</Text></Text>\n                <Video\n                  ref={video}\n                  style={{\n                    alignSelf: 'center',\n                    width: 300,\n                    height: 169,\n                    marginBottom: 16\n                  }}\n                  source={require(\"../../public/assets/WWF_recycle_tips.mp4\")}\n                  useNativeControls\n                  resizeMode=\"contain\"\n                  isLooping\n                  onPlaybackStatusUpdate={status => setStatus(() => status)}\n                />          \n              <Text textAlign=\"center\" mb=\"5\" w=\"xs\">To learn more, please visit <Text style={{color:\"blue\", fontStyle:\"italic\"}} onPress={() => Linking.openURL('https://jpspn.kpkt.gov.my')}>JPSPN website</Text> for the latest information.</Text>\n            <Button bordered block style={{borderRadius:20, backgroundColor:\"transparent\", borderColor:\"#1FAA8F\", borderWidth:2}} onPress={() => setModalVisible(false)}>\n              <Text bold>Close</Text>\n            </Button>\n            </ScrollView>\n          </VStack>\n\n          </Animated.View>\n          </View>\n        </Modal>\n\n  <VStack justifyContent=\"flex-start\" alignItems=\"center\" px=\"3\" space={5} w=\"full\" h=\"full\">\n    <ScrollView\n        horizontal\n        scrollEventThrottle={1}\n        showsHorizontalScrollIndicator={false}\n        height={50}\n        contentInset={{ // iOS only\n          top:0,\n          left:0,\n          bottom:0,\n          right:20\n        }}\n        contentContainerStyle={{\n          paddingVertical: 10\n        }}\n        style={{ maxHeight:50 }}\n      >\n    \n        {data && _renderMaterials()}\n\n      </ScrollView>\n\n      <Box mb=\"-1\">\n        <HStack px=\"3\" py=\"2\" rounded=\"full\" style={isRecyclable === \"Recyclable\" ? {backgroundColor:\"#1FAA8F\"} : {backgroundColor:\"#dc2626\"}} >\n          <TouchableOpacity onPress={()=>setIsRecyclable(\"Recyclable\")}>\n            <Box style={(isRecyclable==\"Recyclable\")? styles.active : styles.nonactive} width=\"32\" py=\"1\" >\n              <Text textAlign=\"center\" style={isRecyclable === \"Recyclable\" ? {color:\"black\"} : {color:\"white\"}} >Recyclable</Text>\n            </Box>\n          </TouchableOpacity>\n          <TouchableOpacity onPress={()=>setIsRecyclable(\"Non-recyclable\")}>\n            <Box style={(isRecyclable==\"Non-recyclable\")? styles.active : styles.nonactive} width=\"32\" py=\"1\">\n              <Text textAlign=\"center\" style={isRecyclable === \"Non-recyclable\" ? {color:\"black\"} : {color:\"white\"}}>Non-recyclable</Text>\n            </Box>\n          </TouchableOpacity>\n        </HStack>\n      </Box>\n\n        <VStack backgroundColor=\"#000\" w=\"full\" justifyContent=\"center\" alignItems=\"center\" p=\"4\" space={4} borderRadius=\"12\" style={isRecyclable === \"Recyclable\" ? {backgroundColor:\"#1FAA8F\"} : {backgroundColor:\"#E1E1E1\"}} >\n          {data? _renderRecyclables() : <></>}\n        </VStack>\n\n        {material ===  \"Plastic\" ? \n        <VStack width=\"full\" space={2} mt=\"-2\">\n          {/* <Text>Packaging Sign</Text> */}\n          <HStack space={2} style={(isRecyclable==\"Recyclable\")? {display:\"flex\"} : {display:\"none\"}} >\n            <Box>\n              <Image size=\"20\" source={require('../../public/assets/plastic1.jpg')} alt=\"Alternate Text\"/>\n            </Box>\n            <Box>\n              <Image size=\"20\" source={require('../../public/assets/plastic2.jpg')} alt=\"Alternate Text\"/>\n            </Box>\n            <Box>\n              <Image size=\"20\" source={require('../../public/assets/plastic5.jpg')} alt=\"Alternate Text\"/>\n            </Box>\n          </HStack>\n\n          <HStack space={2} style={(isRecyclable==\"Non-recyclable\")? {display:\"flex\"} : {display:\"none\"}} >\n            <Box>\n              <Image size=\"20\" source={require('../../public/assets/plastic3.jpg')} alt=\"Alternate Text\"/>\n            </Box>\n            <Box>\n              <Image size=\"20\" source={require('../../public/assets/plastic4.jpg')} alt=\"Alternate Text\"/>\n            </Box>\n            <Box>\n              <Image size=\"20\" source={require('../../public/assets/plastic6.jpg')} alt=\"Alternate Text\"/>\n            </Box>\n            <Box>\n              <Image size=\"20\" source={require('../../public/assets/plastic7.jpg')} alt=\"Alternate Text\"/>\n            </Box>\n          </HStack>\n        </VStack>\n        :<></>}\n\n      <VStack style={styles.buttongroup} w=\"full\" space={2}>\n        <Button style={styles.button} background=\"transparent\" borderColor=\"#1FAA8F\" onPress={()=>setModalVisible(true)}>\n          <Text bold color=\"#1FAA8F\">How to recycle?</Text>\n        </Button>\n        <Button style={styles.button} background=\"#FC8B10\" borderColor=\"#FC8B10\" onPress={(e)=>Navigation.navigate('Explore', {category:\"General Waste\"})}>\n          <Text bold color=\"white\">Search Collector</Text>\n        </Button>\n      </VStack>\n\n      {/* <Button w=\"full\" backgroundColor=\"#1FAA8F\" style={styles.button} onPress={(e)=>Navigation.navigate('Explore')}>\n        <Text bold color=\"white\">Search Collector</Text>\n      </Button> */}\n  </VStack>\n      </VStack>\n      </>}\n  </ImageBackground>\n\n    // <ScrollView>\n    //   <Box m={3}>\n      // <Accordion allowMultiple defaultIndex={[2]}>\n      //   <Accordion.Item>\n      //     <Accordion.Summary>\n      //       Paper-CardBoard\n      //       <Accordion.Icon />\n      //     </Accordion.Summary>\n      //     <Accordion.Details>\n      //       <Paper/>\n      //     </Accordion.Details>\n      //   </Accordion.Item>\n      //   <Accordion.Item>\n      //     <Accordion.Summary>\n      //       Plastic\n      //       <Accordion.Icon />\n      //     </Accordion.Summary>\n      //     <Accordion.Details>\n      //       <Plastic/>\n      //     </Accordion.Details>\n      //   </Accordion.Item>\n      //   <Accordion.Item>\n      //     <Accordion.Summary>\n      //       Aluminum\n      //       <Accordion.Icon />\n      //     </Accordion.Summary>\n      //     <Accordion.Details>\n      //       <Aluminium/>\n      //     </Accordion.Details>\n      //   </Accordion.Item>\n      //   <Accordion.Item>\n      //     <Accordion.Summary>\n      //       Glass\n      //       <Accordion.Icon />\n      //     </Accordion.Summary>\n      //     <Accordion.Details>\n      //       <Glass/>\n      //     </Accordion.Details>\n      //   </Accordion.Item>\n      //   <Accordion.Item>\n      //     <Accordion.Summary>\n      //       Metal\n      //       <Accordion.Icon />\n      //     </Accordion.Summary>\n      //     <Accordion.Details>\n      //       <Metal/>\n      //     </Accordion.Details>\n      //   </Accordion.Item>\n      //   <Accordion.Item>\n      //     <Accordion.Summary>\n      //       Textile\n      //       <Accordion.Icon />\n      //     </Accordion.Summary>\n      //     <Accordion.Details>\n      //       <Textile/>\n      //     </Accordion.Details>\n      //   </Accordion.Item>\n      // </Accordion>\n    // </Box>\n    //     <Button mx=\"5\" mb=\"10\" onPress={()=>navigation.navigate('Explore')}>Search Collector</Button>\n    //     </ScrollView>\n\n  );\n};\n\n\nexport default () => {\n    return (\n      <NativeBaseProvider>\n        <Center flex={1}>\n          <GeneralWaste/>\n        </Center>\n      </NativeBaseProvider>\n    )\n};\n\nconst styles = StyleSheet.create({\n  chipsItem: {\n    flexDirection:\"row\",\n    backgroundColor:'#e8e8e8', \n    borderRadius:20,\n    padding:8,\n    paddingHorizontal:20, \n    marginHorizontal:10,\n    height:35,\n    elevation: 10,\n  },\n  chipsItemActive: {\n    flexDirection:\"row\",\n    backgroundColor:'#1FAA8F', \n    borderRadius:20,\n    padding:8,\n    paddingHorizontal:20, \n    marginHorizontal:10,\n    height:35,\n    elevation: 10,\n  },\n  icon:{\n    position: \"absolute\",\n  },\n  buttongroup: {\n    position: 'absolute',\n    bottom:0,\n  },\n  button:{\n    borderRadius:20, \n    borderWidth:2,\n  },\n  active:{\n    backgroundColor:\"white\",\n    borderRadius:50\n  },\n  overlay: {\n    // backgroundColor: 'rgba(0,0,0,0.2)',\n    flex: 1,\n    justifyContent: 'flex-end',\n  },\n  container: {\n    shadowColor: '#171717',\n    shadowOffset: {width: 0, height: 0},\n    shadowOpacity: 0.2,\n    shadowRadius: 8,\n    elevation: 20,\n    backgroundColor: '#E9F4F1',\n    borderTopRightRadius: 40,\n    borderTopLeftRadius: 40,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingTop: 12,\n    paddingBottom: 28,\n  }\n});\n"]},"metadata":{},"sourceType":"module"}