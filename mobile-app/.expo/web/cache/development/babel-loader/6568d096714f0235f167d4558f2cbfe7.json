{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { SliderContext } from \"./Context\";\nimport Box from \"../Box\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar SliderFilledTrack = function SliderFilledTrack(props, ref) {\n  var _React$useContext = React.useContext(SliderContext),\n      isReversed = _React$useContext.isReversed,\n      colorScheme = _React$useContext.colorScheme,\n      state = _React$useContext.state,\n      trackLayout = _React$useContext.trackLayout,\n      orientation = _React$useContext.orientation,\n      isDisabled = _React$useContext.isDisabled,\n      sliderSize = _React$useContext.sliderSize,\n      isReadOnly = _React$useContext.isReadOnly;\n\n  var sliderTrackPosition = isReversed ? orientation === 'vertical' ? trackLayout.height - trackLayout.height * state.getThumbPercent(0) : trackLayout.width - trackLayout.width * state.getThumbPercent(0) : state.getThumbPercent(0) * 100 + '%';\n  var resolvedProps = usePropsResolution('SliderFilledTrack', _objectSpread({\n    size: sliderSize,\n    colorScheme: colorScheme,\n    isReversed: isReversed,\n    orientation: orientation,\n    sliderTrackPosition: sliderTrackPosition\n  }, props), {\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly\n  });\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends({\n    position: \"absolute\"\n  }, resolvedProps, {\n    ref: ref\n  }));\n};\n\nexport default React.forwardRef(SliderFilledTrack);","map":{"version":3,"sources":["SliderFilledTrack.tsx"],"names":["SliderFilledTrack","isReadOnly","React","sliderTrackPosition","isReversed","orientation","trackLayout","state","resolvedProps","usePropsResolution","size","colorScheme","props","isDisabled","useHasResponsiveProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,aAAA;AACA,OAAA,GAAA;AAEA,SAAA,kBAAA;AACA,SAAA,qBAAA;;AAEA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,KAAA,EAAA,GAAA,EAA+C;AACvE,0BASIE,KAAK,CAALA,UAAAA,CATJ,aASIA,CATJ;AAAA,MAAM,UAAN,qBAAM,UAAN;AAAA,MAAM,WAAN,qBAAM,WAAN;AAAA,MAAM,KAAN,qBAAM,KAAN;AAAA,MAAM,WAAN,qBAAM,WAAN;AAAA,MAAM,WAAN,qBAAM,WAAN;AAAA,MAAM,UAAN,qBAAM,UAAN;AAAA,MAAM,UAAN,qBAAM,UAAN;AAAA,MAQED,UARF,qBAQEA,UARF;;AAWA,MAAME,mBAAmB,GAAGC,UAAU,GAClCC,WAAW,KAAXA,UAAAA,GACEC,WAAW,CAAXA,MAAAA,GAAqBA,WAAW,CAAXA,MAAAA,GAAqBC,KAAK,CAALA,eAAAA,CAD5CF,CAC4CE,CAD5CF,GAEEC,WAAW,CAAXA,KAAAA,GAAoBA,WAAW,CAAXA,KAAAA,GAAoBC,KAAK,CAALA,eAAAA,CAHR,CAGQA,CAHR,GAIlCA,KAAK,CAALA,eAAAA,CAAAA,CAAAA,IAAAA,GAAAA,GAJJ,GAAA;AAMA,MAAMC,aAAa,GAAGC,kBAAkB,CAAA,mBAAA;AAGpCC,IAAAA,IAAI,EADN,UAFsC;AAIpCC,IAAAA,WAFF,EAEEA,WAJoC;AAKpCP,IAAAA,UAHF,EAGEA,UALoC;AAMpCC,IAAAA,WAJF,EAIEA,WANoC;AAOpCF,IAAAA,mBALF,EAKEA;AAPoC,KAQjCS,KARiC,GAUtC;AAAEC,IAAAA,UAAF,EAAEA,UAAF;AAAcZ,IAAAA,UAAAA,EAAAA;AAAd,GAVsC,CAAxC;;AAcA,MAAIa,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AACD;;AAED,SACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA;AACE,IAAA,QAAQ,EAAC;AADX,GAAA,EAAA,aAAA,EAAA;AAGE,IAAA,GAAG,EAHL;AAAA,GAAA,CAAA,CADF;AApCF,CAAA;;AA+CA,eAAeZ,KAAK,CAALA,UAAAA,CAAf,iBAAeA,CAAf","sourcesContent":["import React from 'react';\nimport { SliderContext } from './Context';\nimport Box from '../Box';\nimport type { ISliderTrackFilledProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst SliderFilledTrack = (props: ISliderTrackFilledProps, ref?: any) => {\n  const {\n    isReversed,\n    colorScheme,\n    state,\n    trackLayout,\n    orientation,\n    isDisabled,\n    sliderSize,\n    isReadOnly,\n  } = React.useContext(SliderContext);\n\n  const sliderTrackPosition = isReversed\n    ? orientation === 'vertical'\n      ? trackLayout.height - trackLayout.height * state.getThumbPercent(0)\n      : trackLayout.width - trackLayout.width * state.getThumbPercent(0)\n    : state.getThumbPercent(0) * 100 + '%';\n\n  const resolvedProps = usePropsResolution(\n    'SliderFilledTrack',\n    {\n      size: sliderSize,\n      colorScheme,\n      isReversed,\n      orientation,\n      sliderTrackPosition,\n      ...props,\n    },\n    { isDisabled, isReadOnly }\n  );\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Box\n      position=\"absolute\"\n      {...resolvedProps}\n      ref={ref}\n      // {...(isReadOnly && _readOnly)}\n      // {...(isDisabled && _disabled)}\n    />\n  );\n};\n\nexport default React.forwardRef(SliderFilledTrack);\n"]},"metadata":{},"sourceType":"module"}