{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { NativeBaseProvider, Button, FormControl, Input, VStack, Center, Image, HStack, Select, CheckIcon, WarningOutlineIcon, TextArea, Text, Icon, ScrollView, Modal, AspectRatio } from \"native-base\";\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport DatePicker from \"react-datepicker\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { AntDesign, Ionicons, Entypo } from \"@expo/vector-icons\";\nimport MapView, { PROVIDER_GOOGLE } from \"react-native-maps\";\nimport Geocoder from 'react-native-geocoding';\nimport * as ImagePicker from 'expo-image-picker';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport API_URL from \"../../API_URL\";\nimport { LoadingContext } from \"../../context/context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nGeocoder.init(\"AIzaSyCQoDI7E-OJ9RCK4MN7ykJqISCjIO6DwoU\");\n\nvar SubmitProduct = function SubmitProduct() {\n  var productgtin = JSON.stringify(useRoute().params.productgtin).replace('\"', '').replace('\"', '');\n  var Navigation = useNavigation();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      userData = _useState2[0],\n      setUserData = _useState2[1];\n\n  var _useContext = useContext(LoadingContext),\n      setIsLoading = _useContext.setIsLoading;\n\n  var _useState3 = useState({\n    gtin: productgtin,\n    productName: \"\",\n    material: \"\",\n    recyclable: \"\",\n    status: \"Pending\",\n    submit_email: \"\"\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formData = _useState4[0],\n      setFormData = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errors = _useState6[0],\n      setErrors = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      image = _useState8[0],\n      setImage = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selection = _useState10[0],\n      setSelection = _useState10[1];\n\n  var getUserData = function getUserData() {\n    var value;\n    return _regeneratorRuntime.async(function getUserData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setIsLoading(true);\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 4:\n            value = _context.sent;\n\n            if (value !== null) {\n              setUserData(JSON.parse(value));\n              setFormData(function (prevState) {\n                return _objectSpread(_objectSpread({}, prevState), {}, {\n                  submit_email: JSON.parse(value).email\n                });\n              });\n            }\n\n            setIsLoading(false);\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 9]], Promise);\n  };\n\n  useEffect(function () {\n    getUserData();\n  }, []);\n  useEffect(function () {\n    var ac = new AbortController();\n    setIsLoading(true);\n    fetch(API_URL + \"material\", {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (results) {\n      var temp = [];\n\n      for (var index = 0; index < results.length; index++) {\n        temp[index] = results[index].material;\n      }\n\n      setSelection(temp);\n      setIsLoading(false);\n    }).catch(function (err) {\n      setErrors(err);\n    });\n    return function () {\n      return ac.abort();\n    };\n  }, []);\n\n  var _renderSelection = function _renderSelection() {\n    return selection.map(function (item, index) {\n      return _jsx(Select.Item, {\n        label: item,\n        value: item\n      }, \"selection-\" + index);\n    });\n  };\n\n  var validate = function validate() {\n    if (formData.productName === \"\") {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        name: 'Product name is required'\n      }));\n      return false;\n    }\n\n    if (formData.material === \"\") {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        category: 'Material is required'\n      }));\n      return false;\n    }\n\n    if (formData.recyclable === \"\") {\n      setErrors(_objectSpread(_objectSpread({}, errors), {}, {\n        location: 'Recyclable is required'\n      }));\n      return false;\n    }\n\n    return true;\n  };\n\n  var onSubmit = function onSubmit() {\n    var ac = new AbortController();\n\n    if (validate) {\n      setIsLoading(true);\n      var formdata = new FormData();\n      formdata.append(\"gtin\", formData.gtin);\n      formdata.append(\"productName\", formData.productName);\n      formdata.append(\"material\", formData.material);\n      formdata.append(\"recyclable\", formData.recyclable);\n      formdata.append(\"location\", formData.location);\n      formdata.append(\"status\", \"Pending\");\n      formdata.append(\"submit_email\", formData.submit_email);\n      formdata.append(\"media\", {\n        uri: image,\n        name: 'image.jpg',\n        type: 'image/jpg'\n      });\n      fetch(API_URL + 'product', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        body: formdata\n      }).then(function (response) {\n        return response.json();\n      }).then(function (results) {\n        console.log(results);\n        alert(\"Thank you for submitting the product to us. We will verify it and update it in the product database.\");\n        Navigation.pop(3);\n        setIsLoading(false);\n      }).catch(function (err) {\n        console.log(err);\n        setIsLoading(false);\n      });\n    } else {\n      alert('Validation Failed');\n    }\n\n    return function () {\n      return ac.abort();\n    };\n  };\n\n  var takePhoto = function takePhoto() {\n    var result;\n    return _regeneratorRuntime.async(function takePhoto$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n              allowsEditing: true,\n              aspect: [1, 1]\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              _context2.next = 5;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 5:\n            setImage(result.uri);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(ScrollView, {\n    width: \"100%\",\n    children: _jsxs(VStack, {\n      width: \"100%\",\n      p: \"5\",\n      space: 5,\n      children: [image ? _jsx(AspectRatio, {\n        w: \"100%\",\n        ratio: 1 / 1,\n        children: _jsx(Image, {\n          source: {\n            uri: image\n          },\n          alt: \"image\"\n        })\n      }) : _jsx(Button, {\n        w: \"100%\",\n        h: \"140\",\n        backgroundColor: \"#e8e8e8\",\n        onPress: takePhoto,\n        children: _jsx(Center, {\n          backgroundColor: \"transparent\",\n          children: _jsx(Text, {\n            children: \"Take Photo\"\n          })\n        })\n      }), _jsxs(FormControl, {\n        isRequired: true,\n        children: [_jsx(FormControl.Label, {\n          _text: {\n            bold: true\n          },\n          children: \"GTIN\"\n        }), _jsx(Input, {\n          style: styles.input,\n          backgroundColor: \"#EAEAEA\",\n          p: \"3\",\n          placeholder: \"GTIN\",\n          value: productgtin,\n          isReadOnly: true\n        })]\n      }), _jsxs(FormControl, {\n        isRequired: true,\n        isInvalid: 'productName' in errors,\n        children: [_jsx(FormControl.Label, {\n          _text: {\n            bold: true\n          },\n          children: \"Product Name\"\n        }), _jsx(Input, {\n          style: styles.input,\n          backgroundColor: \"#EAEAEA\",\n          p: \"3\",\n          placeholder: \"Product Name\",\n          onChangeText: function onChangeText(value) {\n            return setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n              productName: value\n            }));\n          }\n        })]\n      }), _jsxs(FormControl, {\n        isRequired: true,\n        isInvalid: 'material' in errors,\n        children: [_jsx(FormControl.Label, {\n          _text: {\n            bold: true\n          },\n          children: \"Material\"\n        }), _jsxs(Select, {\n          accessibilityLabel: \"Choose Material\",\n          placeholder: \"Choose Material\",\n          _selectedItem: {\n            bg: \"teal.600\",\n            endIcon: _jsx(CheckIcon, {\n              size: 5\n            })\n          },\n          onValueChange: function onValueChange(value) {\n            return setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n              material: value\n            }));\n          },\n          children: [_renderSelection(), _jsx(Select.Item, {\n            label: \"Others\",\n            value: \"Others\"\n          })]\n        }), _jsx(FormControl.ErrorMessage, {\n          leftIcon: _jsx(WarningOutlineIcon, {\n            size: \"xs\"\n          }),\n          children: \"Please make a selection!\"\n        })]\n      }), _jsxs(FormControl, {\n        isRequired: true,\n        isInvalid: 'recyclable' in errors,\n        children: [_jsx(FormControl.Label, {\n          _text: {\n            bold: true\n          },\n          children: \"Recyclable?\"\n        }), _jsxs(Select, {\n          accessibilityLabel: \"Choose\",\n          placeholder: \"Choose\",\n          _selectedItem: {\n            bg: \"teal.600\",\n            endIcon: _jsx(CheckIcon, {\n              size: 5\n            })\n          },\n          onValueChange: function onValueChange(value) {\n            return setFormData(_objectSpread(_objectSpread({}, formData), {}, {\n              recyclable: value\n            }));\n          },\n          children: [_jsx(Select.Item, {\n            label: \"Yes\",\n            value: \"yes\"\n          }), _jsx(Select.Item, {\n            label: \"No\",\n            value: \"no\"\n          }), _jsx(Select.Item, {\n            label: \"Partly\",\n            value: \"partly\"\n          })]\n        })]\n      }), _jsx(Button, {\n        block: true,\n        mt: \"5\",\n        backgroundColor: \"#1FAA8F\",\n        style: styles.button,\n        onPress: onSubmit,\n        children: _jsx(Text, {\n          bold: true,\n          color: \"white\",\n          children: \"Submit\"\n        })\n      })]\n    })\n  });\n};\n\nexport default (function () {\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(Center, {\n      flex: 1,\n      p: \"3\",\n      children: _jsx(SubmitProduct, {})\n    })\n  });\n});\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  button: {\n    borderRadius: 20,\n    borderColor: \"#1FAA8F\",\n    borderWidth: 2\n  },\n  input: {\n    borderRadius: 20,\n    fontSize: 14\n  },\n  datepicker: {\n    width: 130,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-start'\n  },\n  map: {\n    width: 400,\n    height: 500\n  }\n});","map":{"version":3,"sources":["/Users/weiherr/Desktop/FYP/MyRecycle/mobile-app/screens/product/SubmitProduct.js"],"names":["NativeBaseProvider","Button","FormControl","Input","VStack","Center","Image","HStack","Select","CheckIcon","WarningOutlineIcon","TextArea","Text","Icon","ScrollView","Modal","AspectRatio","React","useState","useRef","useEffect","useContext","DateTimePicker","DatePicker","useNavigation","useRoute","AntDesign","Ionicons","Entypo","MapView","PROVIDER_GOOGLE","Geocoder","ImagePicker","AsyncStorage","API_URL","LoadingContext","init","SubmitProduct","productgtin","JSON","stringify","params","replace","Navigation","userData","setUserData","setIsLoading","gtin","productName","material","recyclable","status","submit_email","formData","setFormData","errors","setErrors","image","setImage","selection","setSelection","getUserData","getItem","value","parse","prevState","email","console","log","ac","AbortController","fetch","method","headers","then","response","json","results","temp","index","length","catch","err","abort","_renderSelection","map","item","validate","name","category","location","onSubmit","formdata","FormData","append","uri","type","body","alert","pop","takePhoto","launchCameraAsync","allowsEditing","aspect","result","cancelled","bold","styles","input","bg","endIcon","button","StyleSheet","create","flex","justifyContent","borderRadius","borderColor","borderWidth","fontSize","datepicker","width","display","alignItems","height"],"mappings":"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","sourcesContent":["import { NativeBaseProvider, Button, FormControl, Input, VStack, Center, Image, HStack, Select, CheckIcon, WarningOutlineIcon, TextArea, Text, Icon, ScrollView, Modal, AspectRatio } from \"native-base\";\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport { View, StyleSheet, ImageBackground, TouchableOpacity, Dimensions, Picker } from \"react-native\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport DatePicker from \"react-datepicker\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { AntDesign, Ionicons, Entypo } from \"@expo/vector-icons\"\nimport MapView, {PROVIDER_GOOGLE} from \"react-native-maps\";\nimport Geocoder from 'react-native-geocoding';\nimport * as ImagePicker from 'expo-image-picker';\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport API_URL from '../../API_URL';\nimport { LoadingContext } from \"../../context/context\";\n\nGeocoder.init(\"AIzaSyCQoDI7E-OJ9RCK4MN7ykJqISCjIO6DwoU\");\n\nconst SubmitProduct = () => {\n\n  const productgtin = JSON.stringify(useRoute().params.productgtin).replace('\"','').replace('\"','');\n\n  const Navigation = useNavigation(); \n\n  const [userData, setUserData] = useState(null);\n\n  const { setIsLoading } = useContext(LoadingContext);\n\n  const [formData, setFormData] = useState({\n    gtin:productgtin,\n    productName:\"\",\n    material: \"\",\n    recyclable: \"\",\n    status:\"Pending\",\n    submit_email: \"\"\n  });\n\n  const [errors, setErrors] = useState({});\n  const [image, setImage] = useState(null);\n  const [selection, setSelection] = useState([]);\n\n  //get user data\n  const getUserData = async () => {\n    setIsLoading(true);\n    try {\n      const value = await AsyncStorage.getItem('user');\n      if (value !== null) {\n        // We have data!!\n        setUserData(JSON.parse(value));\n        setFormData((prevState)=>({...prevState, submit_email:JSON.parse(value).email}));\n      }\n      setIsLoading(false);\n    } catch (error) {\n      // Error retrieving data\n      console.log(error);\n    }\n  }; \n\n  //get name and email\n  useEffect(() => {\n    getUserData();\n  }, [])\n\n\nuseEffect(() => {\n\n  const ac = new AbortController();\n\n  setIsLoading(true);\n\n  fetch(API_URL + \"material\", {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n    .then(response => response.json())\n    .then(results => {\n      var temp = [];\n      for (let index = 0; index < results.length; index++) {\n        temp[index] = results[index].material;\n      }\n      setSelection(temp);\n      setIsLoading(false);\n    })\n    .catch(err => {\n      setErrors(err);\n    });\n    return () => ac.abort();\n\n}, [])\n\nconst _renderSelection = () => {\n  return selection.map((item, index) => {\n    return (\n      <Select.Item label={item} value={item} key={`selection-${index}`}/>\n    )\n  })\n}\n\n  //validation\n  const validate = () => {\n    if (formData.productName === \"\") {\n      setErrors({ ...errors,\n        name: 'Product name is required'\n      });\n      return false;\n    } \n    if (formData.material === \"\") {\n      setErrors({ ...errors,\n        category: 'Material is required'\n      });\n      return false;\n    }\n    if (formData.recyclable === \"\") {\n      setErrors({ ...errors,\n        location: 'Recyclable is required'\n      });\n      return false;\n    }\n    return true;\n  };\n\n  const onSubmit = () => {\n\n    const ac = new AbortController();\n\n    if(validate){\n\n      setIsLoading(true);\n\n      let formdata = new FormData();\n      formdata.append(\"gtin\", formData.gtin)\n      formdata.append(\"productName\", formData.productName)\n      formdata.append(\"material\", formData.material)\n      formdata.append(\"recyclable\", formData.recyclable)\n      formdata.append(\"location\", formData.location)\n      formdata.append(\"status\", \"Pending\")\n      formdata.append(\"submit_email\", formData.submit_email)\n      formdata.append(\"media\", {uri: image, name: 'image.jpg', type: 'image/jpg'});\n      \n\n      fetch( API_URL + 'product', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'multipart/form-data',\n          },\n          body: formdata,\n      })\n      .then(response => response.json())\n      .then(results => { \n        console.log(results);\n          alert(\"Thank you for submitting the product to us. We will verify it and update it in the product database.\");   \n          Navigation.pop(3);  \n          setIsLoading(false);\n      })\n      .catch(err => {\n          console.log(err);\n          setIsLoading(false);\n      });\n    }else{\n      alert('Validation Failed');\n    }\n    return () => ac.abort();\n\n  };\n\n  const takePhoto = async () => {\n\n    let result = await ImagePicker.launchCameraAsync({\n      allowsEditing: true,\n      aspect: [1, 1],\n    });\n  \n    if (result.cancelled) {\n      return;\n    }\n  \n    setImage(result.uri);\n  \n  };\n\n\n  return (\n    <ScrollView width=\"100%\">\n    <VStack width=\"100%\" p=\"5\" space={5}>\n        {image ? \n          <AspectRatio w=\"100%\" ratio={1 / 1}>\n            <Image source={{uri: image}} alt=\"image\" />\n          </AspectRatio>\n        : \n          <Button w=\"100%\" h=\"140\" backgroundColor=\"#e8e8e8\" onPress={takePhoto}>\n            <Center backgroundColor=\"transparent\">\n              <Text>Take Photo</Text>\n            </Center>\n          </Button>\n        }\n      <FormControl isRequired>\n        <FormControl.Label _text={{bold: true}}>GTIN</FormControl.Label>\n          <Input style={styles.input} backgroundColor=\"#EAEAEA\" p=\"3\" placeholder=\"GTIN\" value={productgtin} isReadOnly={true}/>\n      </FormControl>\n      <FormControl isRequired isInvalid={'productName' in errors}>\n        <FormControl.Label _text={{bold: true}}>Product Name</FormControl.Label>\n        <Input style={styles.input} backgroundColor=\"#EAEAEA\" p=\"3\" placeholder=\"Product Name\" onChangeText={value => setFormData({ ...formData,\n        productName: value\n      })} />\n      </FormControl>\n\n      <FormControl isRequired isInvalid={'material' in errors}>\n        <FormControl.Label _text={{bold: true}}>Material</FormControl.Label>\n        <Select accessibilityLabel=\"Choose Material\" placeholder=\"Choose Material\" _selectedItem={{\n        bg: \"teal.600\",\n        endIcon: <CheckIcon size={5} />\n        }}\n        onValueChange={value => setFormData({ ...formData,material: value})}>\n          {_renderSelection()}\n          <Select.Item label=\"Others\" value=\"Others\" />\n        </Select>\n        <FormControl.ErrorMessage leftIcon={<WarningOutlineIcon size=\"xs\" />}>\n          Please make a selection!\n        </FormControl.ErrorMessage>\n      </FormControl>\n\n      <FormControl isRequired isInvalid={'recyclable' in errors}>\n        <FormControl.Label _text={{bold: true}}>Recyclable?</FormControl.Label>\n        <Select accessibilityLabel=\"Choose\" placeholder=\"Choose\" _selectedItem={{\n        bg: \"teal.600\",\n        endIcon: <CheckIcon size={5} />\n        }}\n        onValueChange={value => setFormData({ ...formData,recyclable: value})}>\n          <Select.Item label=\"Yes\" value=\"yes\" />\n          <Select.Item label=\"No\" value=\"no\" />\n          <Select.Item label=\"Partly\" value=\"partly\" />\n        </Select>\n        \n      </FormControl>\n\n      <Button block mt=\"5\" backgroundColor=\"#1FAA8F\" style={styles.button} onPress={onSubmit}>\n          <Text bold color=\"white\">Submit</Text>\n        </Button>\n\n    </VStack>     \n    </ScrollView>\n  );\n};\n\nexport default () => {\n  return (\n    <NativeBaseProvider>\n      <Center flex={1} p=\"3\">\n        <SubmitProduct/>\n      </Center>\n    </NativeBaseProvider>\n  )\n};\n\nconst styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  button: {\n    borderRadius:20, \n    borderColor:\"#1FAA8F\", \n    borderWidth:2,\n  },\n  input: {\n    borderRadius:20, \n    fontSize:14,\n  },\n  datepicker: {\n    width:130,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  map: {\n    width: 400,\n    height: 500,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}