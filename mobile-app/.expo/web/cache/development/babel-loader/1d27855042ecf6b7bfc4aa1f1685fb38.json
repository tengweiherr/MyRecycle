{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"descriptors\", \"state\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport DrawerContentScrollView from \"./DrawerContentScrollView\";\nimport DrawerItemList from \"./DrawerItemList\";\nexport default function DrawerContent(_ref) {\n  var descriptors = _ref.descriptors,\n      state = _ref.state,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var focusedRoute = state.routes[state.index];\n  var focusedDescriptor = descriptors[focusedRoute.key];\n  var focusedOptions = focusedDescriptor.options;\n  var drawerContentStyle = focusedOptions.drawerContentStyle,\n      drawerContentContainerStyle = focusedOptions.drawerContentContainerStyle;\n  return React.createElement(DrawerContentScrollView, _extends({}, rest, {\n    contentContainerStyle: drawerContentContainerStyle,\n    style: drawerContentStyle\n  }), React.createElement(DrawerItemList, _extends({\n    descriptors: descriptors,\n    state: state\n  }, rest)));\n}","map":{"version":3,"sources":["DrawerContent.tsx"],"names":["rest","focusedRoute","state","focusedDescriptor","descriptors","focusedOptions","drawerContentContainerStyle","drawerContentStyle"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AAGA,OAAA,uBAAA;AACA,OAAA,cAAA;AAEA,eAAe,SAAA,aAAA,CAAA,IAAA,EAIiB;AAJM,MAAA,WAAA,GAIN,IAJM,CAAA,WAAA;AAAA,MAAA,KAAA,GAIN,IAJM,CAAA,KAAA;AAAA,MAGjCA,IAHiC,4BAIN,IAJM;;AAKpC,MAAMC,YAAY,GAAGC,KAAK,CAALA,MAAAA,CAAaA,KAAK,CAAvC,KAAqBA,CAArB;AACA,MAAMC,iBAAiB,GAAGC,WAAW,CAACH,YAAY,CAAlD,GAAqC,CAArC;AACA,MAAMI,cAAc,GAAGF,iBAAiB,CAAxC,OAAA;AAEA,MAAM,kBAAN,GAAA,cAAA,CAAM,kBAAN;AAAA,MAA4BG,2BAA5B,GAAA,cAAA,CAA4BA,2BAA5B;AAEA,SACE,KAAA,CAAA,aAAA,CAAA,uBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,IAAA,EAAA;AAEE,IAAA,qBAAqB,EAFvB,2BAAA;AAGE,IAAA,KAAK,EAAEC;AAHT,GAAA,CAAA,EAKE,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,QAAA,CAAA;AAAgB,IAAA,WAAW,EAA3B,WAAA;AAA0C,IAAA,KAAK,EAAEL;AAAjD,GAAA,EANJ,IAMI,CAAA,CALF,CADF;AASD","sourcesContent":["import * as React from 'react';\n\nimport type { DrawerContentComponentProps } from '../types';\nimport DrawerContentScrollView from './DrawerContentScrollView';\nimport DrawerItemList from './DrawerItemList';\n\nexport default function DrawerContent({\n  descriptors,\n  state,\n  ...rest\n}: DrawerContentComponentProps) {\n  const focusedRoute = state.routes[state.index];\n  const focusedDescriptor = descriptors[focusedRoute.key];\n  const focusedOptions = focusedDescriptor.options;\n\n  const { drawerContentStyle, drawerContentContainerStyle } = focusedOptions;\n\n  return (\n    <DrawerContentScrollView\n      {...rest}\n      contentContainerStyle={drawerContentContainerStyle}\n      style={drawerContentStyle}\n    >\n      <DrawerItemList descriptors={descriptors} state={state} {...rest} />\n    </DrawerContentScrollView>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}