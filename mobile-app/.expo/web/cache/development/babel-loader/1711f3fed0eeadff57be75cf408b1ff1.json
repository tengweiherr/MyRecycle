{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"source\", \"src\", \"fallbackElement\", \"alt\", \"fallbackSource\", \"ignoreFallback\", \"_alt\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useState, memo, forwardRef, useCallback, useRef } from 'react';\nimport RNImage from \"react-native-web/dist/exports/Image\";\nimport Text from \"../Text\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { makeStyledComponent } from \"../../../utils/styled\";\nvar StyledImage = makeStyledComponent(RNImage);\nvar Image = memo(forwardRef(function (props, ref) {\n  var _usePropsResolution = usePropsResolution('Image', props),\n      source = _usePropsResolution.source,\n      src = _usePropsResolution.src,\n      fallbackElement = _usePropsResolution.fallbackElement,\n      alt = _usePropsResolution.alt,\n      fallbackSource = _usePropsResolution.fallbackSource,\n      ignoreFallback = _usePropsResolution.ignoreFallback,\n      _alt = _usePropsResolution._alt,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded);\n\n  var finalSource = useRef(null);\n  var getSource = useCallback(function () {\n    if (source) {\n      finalSource.current = source;\n    } else if (src) {\n      finalSource.current = {\n        uri: src\n      };\n    }\n\n    return finalSource.current;\n  }, [source === null || source === void 0 ? void 0 : source.uri, src]);\n\n  var _useState = useState(getSource()),\n      _useState2 = _slicedToArray(_useState, 2),\n      renderedSource = _useState2[0],\n      setSource = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      alternate = _useState4[0],\n      setAlternate = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fallbackSourceFlag = _useState6[0],\n      setfallbackSourceFlag = _useState6[1];\n\n  React.useEffect(function () {\n    setSource(getSource());\n    return function () {\n      finalSource.current = null;\n    };\n  }, [source === null || source === void 0 ? void 0 : source.uri, src, getSource]);\n  var onImageLoadError = useCallback(function (event) {\n    props.onError && props.onError(event);\n    console.warn(event.nativeEvent.error);\n\n    if (!ignoreFallback && fallbackSource && fallbackSource !== renderedSource && fallbackSourceFlag) {\n      setfallbackSourceFlag(false);\n      setSource(fallbackSource);\n    } else {\n      setAlternate(true);\n    }\n  }, [fallbackSource, fallbackSourceFlag, ignoreFallback, props, renderedSource]);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (!alt) {\n    console.warn('Please pass alt prop to Image component');\n  }\n\n  if (alternate) {\n    if (fallbackElement) {\n      if (React.isValidElement(fallbackElement)) {\n        return fallbackElement;\n      }\n    } else return React.createElement(Text, _alt, alt);\n  }\n\n  return React.createElement(StyledImage, _extends({\n    source: renderedSource,\n    accessibilityLabel: alt,\n    alt: alt\n  }, resolvedProps, {\n    onError: onImageLoadError,\n    ref: ref\n  }));\n}));\n\nvar ImageWithStatics = _objectSpread(_objectSpread({}, Image), {}, {\n  getSize: RNImage.getSize,\n  prefetch: RNImage.prefetch,\n  queryCache: RNImage.queryCache\n});\n\nexport default ImageWithStatics;","map":{"version":3,"sources":["index.tsx"],"names":["StyledImage","makeStyledComponent","Image","memo","forwardRef","resolvedProps","usePropsResolution","finalSource","useRef","getSource","useCallback","uri","src","source","useState","React","setSource","onImageLoadError","event","props","console","fallbackSource","setfallbackSourceFlag","setAlternate","useHasResponsiveProps","alt","ref","ImageWithStatics","getSize","RNImage","prefetch","queryCache"],"mappings":"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","sourcesContent":["import React, { useState, memo, forwardRef, useCallback, useRef } from 'react';\nimport { Image as RNImage } from 'react-native';\nimport Text from '../Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IImageProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { makeStyledComponent } from '../../../utils/styled';\n\nconst StyledImage = makeStyledComponent(RNImage);\n\nconst Image = memo(\n  forwardRef((props: IImageProps, ref: any) => {\n    const {\n      source,\n      src,\n      fallbackElement,\n      alt,\n      fallbackSource,\n      ignoreFallback,\n      _alt,\n      ...resolvedProps\n    } = usePropsResolution('Image', props);\n\n    const finalSource: any = useRef(null);\n    const getSource = useCallback(() => {\n      if (source) {\n        finalSource.current = source;\n      } else if (src) {\n        finalSource.current = { uri: src };\n      }\n      return finalSource.current;\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [source?.uri, src]);\n\n    const [renderedSource, setSource] = useState(getSource());\n    const [alternate, setAlternate] = useState(false);\n    const [fallbackSourceFlag, setfallbackSourceFlag] = useState(true);\n\n    React.useEffect(() => {\n      setSource(getSource());\n      return () => {\n        finalSource.current = null;\n      };\n    }, [source?.uri, src, getSource]);\n\n    const onImageLoadError = useCallback(\n      (event: any) => {\n        props.onError && props.onError(event);\n        console.warn(event.nativeEvent.error);\n        if (\n          !ignoreFallback &&\n          fallbackSource &&\n          fallbackSource !== renderedSource &&\n          fallbackSourceFlag\n        ) {\n          setfallbackSourceFlag(false);\n          setSource(fallbackSource);\n        } else {\n          setAlternate(true);\n        }\n      },\n      [\n        fallbackSource,\n        fallbackSourceFlag,\n        ignoreFallback,\n        props,\n        renderedSource,\n      ]\n    );\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    if (!alt) {\n      console.warn('Please pass alt prop to Image component');\n    }\n\n    if (alternate) {\n      if (fallbackElement) {\n        if (React.isValidElement(fallbackElement)) {\n          return fallbackElement;\n        }\n      } else return <Text {..._alt}>{alt}</Text>;\n    }\n    return (\n      <StyledImage\n        source={renderedSource}\n        accessibilityLabel={alt}\n        alt={alt}\n        {...resolvedProps}\n        onError={onImageLoadError}\n        ref={ref}\n      />\n    );\n  })\n);\n\ninterface ImageStatics {\n  getSize: typeof RNImage.prefetch;\n  prefetch: typeof RNImage.prefetch;\n  queryCache: typeof RNImage.queryCache;\n}\nconst ImageWithStatics: typeof Image & ImageStatics = {\n  ...Image,\n  //@ts-ignore\n  getSize: RNImage.getSize,\n  prefetch: RNImage.prefetch,\n  queryCache: RNImage.queryCache,\n};\n\nexport default ImageWithStatics;\nexport type { IImageProps };\n"]},"metadata":{},"sourceType":"module"}