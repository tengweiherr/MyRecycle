{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _INITIAL_PROP_SPECIFI;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport merge from 'lodash.merge';\nvar SPECIFICITY_1000 = 1000;\nvar SPECIFICITY_110 = 110;\nvar SPECIFICITY_100 = 100;\nvar SPECIFICITY_70 = 70;\nvar SPECIFICITY_60 = 60;\nvar SPECIFICITY_55 = 55;\nvar SPECIFICITY_50 = 50;\nvar SPECIFICITY_40 = 40;\nvar SPECIFICITY_30 = 30;\nvar SPECIFICITY_20 = 20;\nvar SPECIFICITY_10 = 10;\nvar specificityPrecedence = [SPECIFICITY_1000, SPECIFICITY_110, SPECIFICITY_100, SPECIFICITY_70, SPECIFICITY_60, SPECIFICITY_55, SPECIFICITY_50, SPECIFICITY_40, SPECIFICITY_30, SPECIFICITY_20, SPECIFICITY_10];\nvar INITIAL_PROP_SPECIFICITY = (_INITIAL_PROP_SPECIFI = {}, _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_1000, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_110, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_100, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_70, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_60, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_50, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_55, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_40, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_30, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_20, 0), _defineProperty(_INITIAL_PROP_SPECIFI, SPECIFICITY_10, 0), _INITIAL_PROP_SPECIFI);\nvar pseudoPropsMap = {\n  _web: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _ios: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _android: {\n    dependentOn: 'platform',\n    priority: SPECIFICITY_10\n  },\n  _light: {\n    dependentOn: 'colormode',\n    priority: SPECIFICITY_10\n  },\n  _dark: {\n    dependentOn: 'colormode',\n    priority: SPECIFICITY_10\n  },\n  _indeterminate: {\n    dependentOn: 'state',\n    respondTo: 'isIndeterminate',\n    priority: SPECIFICITY_30\n  },\n  _checked: {\n    dependentOn: 'state',\n    respondTo: 'isChecked',\n    priority: SPECIFICITY_30\n  },\n  _readOnly: {\n    dependentOn: 'state',\n    respondTo: 'isReadOnly',\n    priority: SPECIFICITY_30\n  },\n  _invalid: {\n    dependentOn: 'state',\n    respondTo: 'isInvalid',\n    priority: SPECIFICITY_40\n  },\n  _focus: {\n    dependentOn: 'state',\n    respondTo: 'isFocused',\n    priority: SPECIFICITY_50\n  },\n  _focusVisible: {\n    dependentOn: 'state',\n    respondTo: 'isFocusVisible',\n    priority: SPECIFICITY_55\n  },\n  _hover: {\n    dependentOn: 'state',\n    respondTo: 'isHovered',\n    priority: SPECIFICITY_60\n  },\n  _pressed: {\n    dependentOn: 'state',\n    respondTo: 'isPressed',\n    priority: SPECIFICITY_70\n  },\n  _disabled: {\n    dependentOn: 'state',\n    respondTo: 'isDisabled',\n    priority: SPECIFICITY_100\n  },\n  _loading: {\n    dependentOn: 'state',\n    respondTo: 'isLoading',\n    priority: SPECIFICITY_110\n  },\n  _important: {\n    dependentOn: null,\n    priority: SPECIFICITY_1000\n  }\n};\nexport var compareSpecificity = function compareSpecificity(exisiting, upcoming, ignorebaseTheme) {\n  if (!exisiting) return true;\n  if (!upcoming) return false;\n  var condition = ignorebaseTheme ? specificityPrecedence.length - 1 : specificityPrecedence.length;\n\n  for (var index = 0; index < condition; index++) {\n    if (exisiting[specificityPrecedence[index]] > upcoming[specificityPrecedence[index]]) {\n      return false;\n    } else if (exisiting[specificityPrecedence[index]] < upcoming[specificityPrecedence[index]]) {\n      return true;\n    }\n  }\n\n  return true;\n};\n\nvar shouldResolvePseudoProp = function shouldResolvePseudoProp(_ref) {\n  var property = _ref.property,\n      state = _ref.state,\n      platform = _ref.platform,\n      colormode = _ref.colormode;\n\n  if (pseudoPropsMap[property].dependentOn === 'platform') {\n    return property === \"_\".concat(platform);\n  } else if (pseudoPropsMap[property].dependentOn === 'colormode') {\n    return property === \"_\".concat(colormode);\n  } else if (pseudoPropsMap[property].dependentOn === 'state') {\n    return state[pseudoPropsMap[property].respondTo];\n  } else if (pseudoPropsMap[property].dependentOn === null) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nvar simplifyProps = function simplifyProps(_ref2) {\n  var props = _ref2.props,\n      colormode = _ref2.colormode,\n      platform = _ref2.platform,\n      state = _ref2.state,\n      currentSpecificity = _ref2.currentSpecificity,\n      previouslyFlattenProps = _ref2.previouslyFlattenProps,\n      cascadePseudoProps = _ref2.cascadePseudoProps;\n  var flattenProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var specificityMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var priority = arguments.length > 3 ? arguments[3] : undefined;\n\n  var mergePsuedoProps = function mergePsuedoProps(property, propertySpecity) {\n    if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        console.log(\"%c \".concat(property), 'color: #818cf8;', 'updated as internal prop with higher specificity');\n      }\n\n      specificityMap[property] = propertySpecity;\n      flattenProps[property] = merge({}, flattenProps[property], props[property]);\n    } else {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        console.log(\"%c \".concat(property), 'color: #818cf8;', 'updated as internal prop with lower specificity');\n      }\n\n      flattenProps[property] = merge({}, props[property], flattenProps[property]);\n    }\n  };\n\n  for (var property in props) {\n    var _pseudoPropsMap$prope;\n\n    var propertySpecity = currentSpecificity ? _objectSpread({}, currentSpecificity) : _objectSpread(_objectSpread({}, INITIAL_PROP_SPECIFICITY), {}, _defineProperty({}, SPECIFICITY_20, priority));\n\n    if (state[(_pseudoPropsMap$prope = pseudoPropsMap[property]) === null || _pseudoPropsMap$prope === void 0 ? void 0 : _pseudoPropsMap$prope.respondTo] || ['_dark', '_light', '_web', '_ios', '_android', '_important'].includes(property)) {\n      if (shouldResolvePseudoProp({\n        property: property,\n        state: state,\n        platform: platform,\n        colormode: colormode\n      })) {\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          console.log(\"%c \".concat(property), 'color: #818cf8;', 'recursively resolving');\n        }\n\n        propertySpecity[pseudoPropsMap[property].priority]++;\n        simplifyProps({\n          props: props[property],\n          colormode: colormode,\n          platform: platform,\n          state: state,\n          currentSpecificity: propertySpecity,\n          previouslyFlattenProps: previouslyFlattenProps,\n          cascadePseudoProps: cascadePseudoProps\n        }, flattenProps, specificityMap, priority);\n      }\n    } else if (pseudoPropsMap[property] === undefined) {\n      if (property.startsWith('_')) {\n        mergePsuedoProps(property, propertySpecity);\n      } else {\n        if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            console.log(\"%c \".concat(property), 'color: #818cf8;', 'updated as simple prop');\n          }\n\n          specificityMap[property] = propertySpecity;\n          flattenProps[property] = props[property];\n        } else {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            console.log(\"%c \".concat(property), 'color: #818cf8;', 'ignored');\n          }\n        }\n      }\n    } else {\n      if (!cascadePseudoProps) {\n        delete flattenProps[property];\n\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          console.log(\"%c \".concat(property), 'color: #818cf8;', 'deleted');\n        }\n      } else {\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          console.log(\"%c \".concat(property), 'color: #818cf8;', 'cascaded');\n        }\n\n        mergePsuedoProps(property, propertySpecity);\n      }\n    }\n  }\n};\n\nexport var propsFlattener = function propsFlattener(_ref3, priority) {\n  var props = _ref3.props,\n      colormode = _ref3.colormode,\n      platform = _ref3.platform,\n      state = _ref3.state,\n      currentSpecificityMap = _ref3.currentSpecificityMap,\n      previouslyFlattenProps = _ref3.previouslyFlattenProps,\n      cascadePseudoProps = _ref3.cascadePseudoProps;\n  var flattenProps = {};\n\n  for (var property in props) {\n    var _pseudoPropsMap$prope2;\n\n    if (state[(_pseudoPropsMap$prope2 = pseudoPropsMap[property]) === null || _pseudoPropsMap$prope2 === void 0 ? void 0 : _pseudoPropsMap$prope2.respondTo] === undefined && property.startsWith('_')) {\n      flattenProps[property] = previouslyFlattenProps[property];\n    }\n  }\n\n  var specificityMap = currentSpecificityMap || {};\n  simplifyProps({\n    props: props,\n    colormode: colormode,\n    platform: platform,\n    state: state,\n    currentSpecificityMap: currentSpecificityMap,\n    previouslyFlattenProps: previouslyFlattenProps,\n    cascadePseudoProps: cascadePseudoProps\n  }, flattenProps, specificityMap, priority);\n  return [flattenProps, specificityMap];\n};","map":{"version":3,"sources":["propsFlattener.tsx"],"names":["SPECIFICITY_1000","SPECIFICITY_110","SPECIFICITY_100","SPECIFICITY_70","SPECIFICITY_60","SPECIFICITY_55","SPECIFICITY_50","SPECIFICITY_40","SPECIFICITY_30","SPECIFICITY_20","SPECIFICITY_10","specificityPrecedence","INITIAL_PROP_SPECIFICITY","pseudoPropsMap","_web","dependentOn","priority","_ios","_android","_light","_dark","_indeterminate","respondTo","_checked","_readOnly","_invalid","_focus","_focusVisible","_hover","_pressed","_disabled","_loading","_important","compareSpecificity","condition","ignorebaseTheme","index","exisiting","upcoming","shouldResolvePseudoProp","colormode","property","state","simplifyProps","cascadePseudoProps","flattenProps","specificityMap","mergePsuedoProps","process","props","console","merge","propertySpecity","currentSpecificity","platform","previouslyFlattenProps","propsFlattener","currentSpecificityMap"],"mappings":"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","sourcesContent":["import merge from 'lodash.merge';\n\nconst SPECIFICITY_1000 = 1000;\nconst SPECIFICITY_110 = 110;\nconst SPECIFICITY_100 = 100;\nconst SPECIFICITY_70 = 70;\nconst SPECIFICITY_60 = 60;\nconst SPECIFICITY_55 = 55;\nconst SPECIFICITY_50 = 50;\nconst SPECIFICITY_40 = 40;\nconst SPECIFICITY_30 = 30;\n// SPECIFICITY_20 is being user for defferentiating between User Props and Theme Props. So any specificity less than SPECIFICITY_20 will be ovridable by user props.\nconst SPECIFICITY_20 = 20;\nconst SPECIFICITY_10 = 10;\nconst specificityPrecedence = [\n  SPECIFICITY_1000,\n  SPECIFICITY_110,\n  SPECIFICITY_100,\n  SPECIFICITY_70,\n  SPECIFICITY_60,\n  SPECIFICITY_55,\n  SPECIFICITY_50,\n  SPECIFICITY_40,\n  SPECIFICITY_30,\n  SPECIFICITY_20,\n  SPECIFICITY_10,\n];\nconst INITIAL_PROP_SPECIFICITY = {\n  [SPECIFICITY_1000]: 0,\n  [SPECIFICITY_110]: 0,\n  [SPECIFICITY_100]: 0,\n  [SPECIFICITY_70]: 0,\n  [SPECIFICITY_60]: 0,\n  [SPECIFICITY_50]: 0,\n  [SPECIFICITY_55]: 0,\n  [SPECIFICITY_40]: 0,\n  [SPECIFICITY_30]: 0,\n  [SPECIFICITY_20]: 0,\n  [SPECIFICITY_10]: 0,\n};\n\nconst pseudoPropsMap = {\n  _web: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n  _ios: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n  _android: { dependentOn: 'platform', priority: SPECIFICITY_10 },\n\n  _light: { dependentOn: 'colormode', priority: SPECIFICITY_10 },\n  _dark: { dependentOn: 'colormode', priority: SPECIFICITY_10 },\n\n  // TODO: have to add more interactionProps and stateProps\n  _indeterminate: {\n    dependentOn: 'state',\n    respondTo: 'isIndeterminate',\n    priority: SPECIFICITY_30,\n  },\n  _checked: {\n    dependentOn: 'state',\n    respondTo: 'isChecked',\n    priority: SPECIFICITY_30,\n  },\n  // Add new pseudeo props in between -------\n  _readOnly: {\n    dependentOn: 'state',\n    respondTo: 'isReadOnly',\n    priority: SPECIFICITY_30,\n  },\n  // Add new pseudeo props in between -------\n  _invalid: {\n    dependentOn: 'state',\n    respondTo: 'isInvalid',\n    priority: SPECIFICITY_40,\n  },\n  _focus: {\n    dependentOn: 'state',\n    respondTo: 'isFocused',\n    priority: SPECIFICITY_50,\n  },\n  _focusVisible: {\n    dependentOn: 'state',\n    respondTo: 'isFocusVisible',\n    priority: SPECIFICITY_55,\n  },\n  _hover: {\n    dependentOn: 'state',\n    respondTo: 'isHovered',\n    priority: SPECIFICITY_60,\n  },\n  _pressed: {\n    dependentOn: 'state',\n    respondTo: 'isPressed',\n    priority: SPECIFICITY_70,\n  },\n  _disabled: {\n    dependentOn: 'state',\n    respondTo: 'isDisabled',\n    priority: SPECIFICITY_100,\n  },\n  _loading: {\n    dependentOn: 'state',\n    respondTo: 'isLoading',\n    priority: SPECIFICITY_110,\n  },\n  _important: {\n    dependentOn: null,\n    priority: SPECIFICITY_1000,\n  },\n} as const;\n\ntype IPseudoPropsMap = typeof pseudoPropsMap;\ntype ExtractState<T extends IPseudoPropsMap> = {\n  // @ts-ignore\n  [P in keyof T as T[P]['respondTo']]?: boolean;\n};\nexport type IStateProps = ExtractState<IPseudoPropsMap>;\n\nexport const compareSpecificity = (\n  exisiting: any,\n  upcoming: any,\n  ignorebaseTheme?: boolean\n  // property?: any\n) => {\n  if (!exisiting) return true;\n  if (!upcoming) return false;\n  const condition = ignorebaseTheme\n    ? specificityPrecedence.length - 1\n    : specificityPrecedence.length;\n  for (let index = 0; index < condition; index++) {\n    if (\n      exisiting[specificityPrecedence[index]] >\n      upcoming[specificityPrecedence[index]]\n    ) {\n      return false;\n    } else if (\n      exisiting[specificityPrecedence[index]] <\n      upcoming[specificityPrecedence[index]]\n    ) {\n      return true;\n    }\n  }\n  return true;\n};\n\nconst shouldResolvePseudoProp = ({\n  property,\n  state,\n  platform,\n  colormode,\n}: {\n  property: keyof IPseudoPropsMap;\n  state: IStateProps;\n  platform: any;\n  colormode: any;\n}) => {\n  if (pseudoPropsMap[property].dependentOn === 'platform') {\n    return property === `_${platform}`;\n  } else if (pseudoPropsMap[property].dependentOn === 'colormode') {\n    return property === `_${colormode}`;\n  } else if (pseudoPropsMap[property].dependentOn === 'state') {\n    // @ts-ignore\n    return state[pseudoPropsMap[property].respondTo];\n  } else if (pseudoPropsMap[property].dependentOn === null) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nconst simplifyProps = (\n  {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificity,\n    previouslyFlattenProps,\n    cascadePseudoProps,\n  }: any,\n  flattenProps: any = {},\n  specificityMap: any = {},\n  priority: number\n) => {\n  const mergePsuedoProps = (property: string, propertySpecity: object) => {\n    if (compareSpecificity(specificityMap[property], propertySpecity, false)) {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        /* eslint-disable-next-line */\n        console.log(\n          `%c ${property}`,\n          'color: #818cf8;',\n          'updated as internal prop with higher specificity'\n        );\n      }\n      specificityMap[property] = propertySpecity;\n      // merging internal props (like, _text, _stack ...)\n      flattenProps[property] = merge(\n        {},\n        flattenProps[property],\n        props[property]\n      );\n    } else {\n      if (process.env.NODE_ENV === 'development' && props.debug) {\n        /* eslint-disable-next-line */\n        console.log(\n          `%c ${property}`,\n          'color: #818cf8;',\n          'updated as internal prop with lower specificity'\n        );\n      }\n      flattenProps[property] = merge(\n        {},\n        props[property],\n        flattenProps[property]\n      );\n    }\n  };\n  for (const property in props) {\n    // NOTE: the order is important here. Keep in mind while specificity breakpoints.\n    const propertySpecity = currentSpecificity\n      ? { ...currentSpecificity }\n      : {\n          ...INITIAL_PROP_SPECIFICITY,\n          [SPECIFICITY_20]: priority,\n        };\n\n    if (\n      // @ts-ignore\n      state[pseudoPropsMap[property]?.respondTo] ||\n      ['_dark', '_light', '_web', '_ios', '_android', '_important'].includes(\n        property\n      )\n    ) {\n      // @ts-ignore\n      if (shouldResolvePseudoProp({ property, state, platform, colormode })) {\n        // NOTE: Handling (state driven) props like _important, _web, _ios, _android, _dark, _light, _disabled, _focus, _focusVisible, _hover, _pressed, _readOnly, _invalid, .... Only when they are true.\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(\n            `%c ${property}`,\n            'color: #818cf8;',\n            'recursively resolving'\n          );\n        }\n        // @ts-ignore\n        propertySpecity[pseudoPropsMap[property].priority]++;\n        simplifyProps(\n          {\n            props: props[property],\n            colormode,\n            platform,\n            state,\n            currentSpecificity: propertySpecity,\n            previouslyFlattenProps: previouslyFlattenProps,\n            cascadePseudoProps,\n          },\n          flattenProps,\n          specificityMap,\n          priority\n        );\n      }\n      // @ts-ignore\n    } else if (pseudoPropsMap[property] === undefined) {\n      if (property.startsWith('_')) {\n        // NOTE: Handling (internal) props like _text, _stack, ....\n        mergePsuedoProps(property, propertySpecity);\n      } else {\n        if (\n          compareSpecificity(specificityMap[property], propertySpecity, false)\n        ) {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            /* eslint-disable-next-line */\n            console.log(\n              `%c ${property}`,\n              'color: #818cf8;',\n              'updated as simple prop'\n            );\n          }\n          specificityMap[property] = propertySpecity;\n          // replacing simple props (like, p, m, bg, color, ...)\n          flattenProps[property] = props[property];\n        } else {\n          if (process.env.NODE_ENV === 'development' && props.debug) {\n            /* eslint-disable-next-line */\n            console.log(`%c ${property}`, 'color: #818cf8;', 'ignored');\n          }\n        }\n      }\n    } else {\n      // Can delete unused props\n      if (!cascadePseudoProps) {\n        delete flattenProps[property];\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(`%c ${property}`, 'color: #818cf8;', 'deleted');\n        }\n      } else {\n        if (process.env.NODE_ENV === 'development' && props.debug) {\n          /* eslint-disable-next-line */\n          console.log(`%c ${property}`, 'color: #818cf8;', 'cascaded');\n        }\n        mergePsuedoProps(property, propertySpecity);\n      }\n    }\n  }\n};\n\nexport const propsFlattener = (\n  {\n    props,\n    colormode,\n    platform,\n    state,\n    currentSpecificityMap,\n    previouslyFlattenProps,\n    cascadePseudoProps,\n  }: any,\n  priority: number\n) => {\n  const flattenProps: any = {};\n\n  for (const property in props) {\n    if (\n      // @ts-ignore\n      state[pseudoPropsMap[property]?.respondTo] === undefined &&\n      property.startsWith('_')\n    ) {\n      flattenProps[property] = previouslyFlattenProps[property];\n    }\n  }\n\n  const specificityMap = currentSpecificityMap || {};\n\n  simplifyProps(\n    {\n      props,\n      colormode,\n      platform,\n      state,\n      currentSpecificityMap,\n      previouslyFlattenProps,\n      cascadePseudoProps,\n    },\n    flattenProps,\n    specificityMap,\n    priority\n  );\n\n  return [flattenProps, specificityMap];\n};\n"]},"metadata":{},"sourceType":"module"}