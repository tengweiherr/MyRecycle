{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { Stack, Center, Heading, VStack, Divider, Pressable, NativeBaseProvider, Text, Container, Box, HStack, FlatList, Image, ScrollView, Button, CheckCircleIcon, CloseIcon, Modal } from \"native-base\";\nimport { useIsFocused, useNavigation } from '@react-navigation/native';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { UserContext, LoadingContext } from \"../../context/context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Game = function Game(_ref) {\n  var navigation = _ref.navigation;\n  var Navigation = useNavigation();\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var _useContext2 = useContext(LoadingContext),\n      setIsLoading = _useContext2.setIsLoading;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      start = _useState4[0],\n      isStart = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      score = _useState6[0],\n      setScore = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      queue = _useState8[0],\n      setQueue = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      answered = _useState10[0],\n      isAnswered = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      correct = _useState12[0],\n      isCorrect = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      buffing = _useState14[0],\n      isBuffing = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      gameover = _useState16[0],\n      isGameover = _useState16[1];\n\n  var _useState17 = useState(1),\n      _useState18 = _slicedToArray(_useState17, 2),\n      level = _useState18[0],\n      setLevel = _useState18[1];\n\n  var _useState19 = useState(false),\n      _useState20 = _slicedToArray(_useState19, 2),\n      showTips = _useState20[0],\n      setShowTips = _useState20[1];\n\n  var _useState21 = useState(true),\n      _useState22 = _slicedToArray(_useState21, 2),\n      showIntro = _useState22[0],\n      setShowIntro = _useState22[1];\n\n  useEffect(function () {\n    var ac = new AbortController();\n    setIsLoading(true);\n    fetch(\"http://192.168.100.31:3000/\" + 'game', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (results) {\n      setData(results);\n      setIsLoading(false);\n    }).catch(function (err) {\n      setIsLoading(false);\n      console.log(err);\n    });\n    return function () {\n      return ac.abort();\n    };\n  }, []);\n\n  var gameOverEvent = function gameOverEvent() {\n    setIsLoading(true);\n    var payload = {\n      user_id: user.id,\n      points_given: score,\n      time: new Date(),\n      event: \"game\"\n    };\n    fetch(\"http://192.168.100.31:3000/\" + \"mrpoint\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    }).then(function (response) {\n      return response.json();\n    }).then(function (results) {\n      var finalpoints = parseInt(score) + parseInt(user.mr_points);\n      setUser(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          mr_points: finalpoints,\n          last_played: payload.time\n        });\n      });\n      setIsLoading(false);\n    }).catch(function (err) {\n      console.warn(err);\n    });\n    Navigation.pop();\n  };\n\n  var startGame = function startGame(level) {\n    isStart(\"true\");\n    setLevel(level);\n  };\n\n  var _renderQuestions = function _renderQuestions(number) {\n    var questions = [];\n\n    switch (level) {\n      case 1:\n        questions = data.filter(function (val) {\n          return val.level === 0;\n        });\n        break;\n\n      case 2:\n        questions = data.filter(function (val) {\n          return val.level === 1;\n        });\n        break;\n\n      default:\n        break;\n    }\n\n    var answerID = questions[number].answer;\n\n    var checkAnswer = function checkAnswer(index) {\n      isAnswered(true);\n\n      if (index === answerID) {\n        setScore(parseInt(score) + parseInt(questions[number].point));\n        isCorrect(true);\n      } else {\n        isCorrect(false);\n      }\n\n      setShowTips(true);\n    };\n\n    var closeTips = function closeTips() {\n      setShowTips(false);\n      if (queue + 1 === questions.length) isGameover(true);else setQueue(queue + 1);\n      isAnswered(false);\n    };\n\n    return _jsxs(_Fragment, {\n      children: [_jsx(Center, {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        w: \"250\",\n        h: \"250\",\n        children: _jsx(ImageBackground, {\n          source: require(\"../../public/assets/question_container.png\"),\n          style: {\n            width: 350,\n            height: 430\n          },\n          children: _jsxs(VStack, {\n            p: \"5\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: [answered && _jsx(_Fragment, {\n              children: correct ? _jsx(_Fragment, {\n                children: _jsx(CheckCircleIcon, {\n                  color: \"green.600\",\n                  size: \"10\",\n                  position: \"absolute\",\n                  style: {\n                    top: 16\n                  }\n                })\n              }) : _jsx(_Fragment, {\n                children: _jsx(CloseIcon, {\n                  color: \"danger.600\",\n                  size: \"10\",\n                  position: \"absolute\",\n                  style: {\n                    top: 16\n                  }\n                })\n              })\n            }), _jsx(Heading, {\n              color: \"white\",\n              textAlign: \"center\",\n              position: \"relative\",\n              fontSize: \"xl\",\n              style: {\n                top: 100,\n                width: \"90%\"\n              },\n              children: questions[number].question\n            }), _jsx(VStack, {\n              h: \"full\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              space: 5,\n              children: questions[number].options.map(function (option, index) {\n                return _jsx(TouchableOpacity, {\n                  onPress: function onPress() {\n                    return checkAnswer(index);\n                  },\n                  children: _jsx(ImageBackground, {\n                    source: require(\"../../public/assets/answer_container.png\"),\n                    alt: \"Play Button\",\n                    style: {\n                      width: 160,\n                      height: 39\n                    },\n                    children: _jsx(Center, {\n                      children: _jsx(Text, {\n                        bold: true,\n                        fontSize: \"lg\",\n                        mt: \"1\",\n                        children: option\n                      })\n                    })\n                  })\n                }, index);\n              })\n            })]\n          })\n        })\n      }), _jsx(Modal, {\n        isOpen: showTips,\n        onClose: function onClose() {\n          return setShowTips(false);\n        },\n        children: _jsxs(Center, {\n          position: \"absolute\",\n          h: \"full\",\n          children: [_jsx(ImageBackground, {\n            source: require(\"../../public/assets/game_container.png\"),\n            style: {\n              width: 360,\n              height: 290\n            },\n            children: _jsxs(Center, {\n              position: \"relative\",\n              p: \"10\",\n              pt: \"0\",\n              style: {\n                width: 360,\n                height: 290\n              },\n              children: [_jsx(Text, {\n                color: \"white\",\n                bold: true,\n                fontSize: \"2xl\",\n                pb: \"2\",\n                children: \"Tips\"\n              }), _jsx(Text, {\n                color: \"white\",\n                fontSize: \"md\",\n                textAlign: \"center\",\n                children: questions[number].tips\n              }), _jsxs(Text, {\n                color: \"gray.300\",\n                fontSize: \"xs\",\n                fontStyle: \"italic\",\n                position: \"absolute\",\n                style: {\n                  bottom: 38\n                },\n                children: [\"From: \", questions[number].origin]\n              })]\n            })\n          }), _jsx(TouchableOpacity, {\n            position: \"relative\",\n            style: {\n              bottom: 38\n            },\n            onPress: closeTips,\n            children: _jsx(Image, {\n              source: require(\"../../public/assets/close_button_1.png\"),\n              alt: \"Close Button\",\n              size: \"12\"\n            })\n          })]\n        })\n      })]\n    });\n  };\n\n  return _jsxs(ImageBackground, {\n    source: require(\"../../public/assets/ingame_bg.png\"),\n    style: styles.image,\n    children: [gameover ? _jsx(Box, {\n      w: \"full\",\n      h: \"full\",\n      p: \"3\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      children: _jsxs(VStack, {\n        h: \"380\",\n        justifyContent: \"flex-start\",\n        alignItems: \"center\",\n        space: 5,\n        children: [_jsx(Heading, {\n          fontSize: \"3xl\",\n          children: \"Game Over!\"\n        }), _jsx(Box, {\n          children: _jsx(ImageBackground, {\n            source: require(\"../../public/assets/ingame_score_container.png\"),\n            style: {\n              width: 180,\n              height: 72\n            },\n            children: _jsx(Center, {\n              position: \"relative\",\n              left: \"4\",\n              top: \"3\",\n              children: _jsx(Text, {\n                color: \"white\",\n                bold: true,\n                fontSize: \"3xl\",\n                children: score\n              })\n            })\n          })\n        }), _jsx(Text, {\n          bold: true,\n          fontSize: \"md\",\n          textAlign: \"center\",\n          children: \"The points will be added to your MR Wallet.\"\n        }), _jsxs(Text, {\n          textAlign: \"center\",\n          mt: \"-2\",\n          mb: \"5\",\n          w: \"xs\",\n          children: [\"To learn more, please visit \", _jsx(Text, {\n            style: {\n              color: \"blue\",\n              fontStyle: \"italic\"\n            },\n            onPress: function onPress() {\n              return Linking.openURL('https://jpspn.kpkt.gov.my');\n            },\n            children: \"JPSPN website\"\n          }), \" for the latest information.\"]\n        }), _jsx(TouchableOpacity, {\n          backgroundColor: \"transparent\",\n          onPress: gameOverEvent,\n          children: _jsx(Image, {\n            source: require(\"../../public/assets/quit_button.png\"),\n            alt: \"Quit Button\",\n            style: {\n              width: 180,\n              height: 44\n            }\n          })\n        })]\n      })\n    }) : _jsxs(_Fragment, {\n      children: [_jsx(Box, {\n        position: \"absolute\",\n        left: \"4\",\n        top: \"4\",\n        children: _jsx(ImageBackground, {\n          source: require(\"../../public/assets/ingame_score_container.png\"),\n          style: {\n            width: 120,\n            height: 48\n          },\n          children: _jsx(Center, {\n            position: \"relative\",\n            left: \"4\",\n            top: \"3\",\n            children: _jsx(Text, {\n              color: \"white\",\n              bold: true,\n              fontSize: \"md\",\n              children: score\n            })\n          })\n        })\n      }), _jsx(Box, {\n        w: \"full\",\n        h: \"full\",\n        p: \"3\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        children: start ? _renderQuestions(queue) : _jsx(Center, {\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          w: \"250\",\n          h: \"250\",\n          children: _jsxs(VStack, {\n            h: \"full\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            space: 5,\n            children: [_jsx(TouchableOpacity, {\n              backgroundColor: \"transparent\",\n              onPress: function onPress() {\n                return startGame(1);\n              },\n              children: _jsx(Image, {\n                source: require(\"../../public/assets/level_2.png\"),\n                alt: \"Play Button\",\n                style: {\n                  width: 210,\n                  height: 51\n                }\n              })\n            }), _jsx(TouchableOpacity, {\n              backgroundColor: \"transparent\",\n              onPress: function onPress() {\n                return startGame(2);\n              },\n              children: _jsx(Image, {\n                source: require(\"../../public/assets/level_1.png\"),\n                alt: \"Quit Button\",\n                style: {\n                  width: 210,\n                  height: 51\n                }\n              })\n            })]\n          })\n        })\n      })]\n    }), _jsx(Modal, {\n      isOpen: showIntro,\n      onClose: function onClose() {\n        return setShowIntro(false);\n      },\n      children: _jsxs(Center, {\n        position: \"absolute\",\n        h: \"full\",\n        children: [_jsx(ImageBackground, {\n          source: require(\"../../public/assets/game_container.png\"),\n          style: {\n            width: 360,\n            height: 290\n          },\n          children: _jsxs(Center, {\n            position: \"relative\",\n            p: \"10\",\n            style: {\n              width: 360,\n              height: 290\n            },\n            children: [_jsx(Text, {\n              color: \"white\",\n              bold: true,\n              fontSize: \"xl\",\n              pb: \"5\",\n              textAlign: \"center\",\n              children: \"MyRecycle's Mini Game\"\n            }), _jsx(Text, {\n              color: \"white\",\n              fontSize: \"md\",\n              textAlign: \"center\",\n              children: \"This game is aimed to educate the recyclers about recycling knowledge, beside earning MR Points in order to redeem rewards.\"\n            })]\n          })\n        }), _jsx(TouchableOpacity, {\n          position: \"relative\",\n          style: {\n            bottom: 38\n          },\n          onPress: function onPress() {\n            return setShowIntro(false);\n          },\n          children: _jsx(Image, {\n            source: require(\"../../public/assets/close_button_1.png\"),\n            alt: \"Close Button\",\n            size: \"12\"\n          })\n        })]\n      })\n    })]\n  });\n};\nexport default (function () {\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(Center, {\n      flex: 1,\n      children: _jsx(Game, {})\n    })\n  });\n});\nvar styles = StyleSheet.create({\n  image: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center'\n  },\n  box: {\n    width: '100%'\n  },\n  icon: {\n    position: \"absolute\"\n  },\n  container: {\n    shadowColor: '#171717',\n    shadowOffset: {\n      width: 0,\n      height: 0\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 8,\n    elevation: 20,\n    backgroundColor: 'white',\n    borderRadius: 14\n  }\n});","map":{"version":3,"sources":["/Users/weiherr/Desktop/FYP/MyRecycle/mobile-app/screens/game/Game.js"],"names":["React","useContext","useEffect","useState","Stack","Center","Heading","VStack","Divider","Pressable","NativeBaseProvider","Text","Container","Box","HStack","FlatList","Image","ScrollView","Button","CheckCircleIcon","CloseIcon","Modal","useIsFocused","useNavigation","AsyncStorage","UserContext","LoadingContext","Game","navigation","Navigation","user","setUser","setIsLoading","data","setData","start","isStart","score","setScore","queue","setQueue","answered","isAnswered","correct","isCorrect","buffing","isBuffing","gameover","isGameover","level","setLevel","showTips","setShowTips","showIntro","setShowIntro","ac","AbortController","fetch","method","headers","then","response","json","results","catch","err","console","log","abort","gameOverEvent","payload","user_id","id","points_given","time","Date","event","body","JSON","stringify","finalpoints","parseInt","mr_points","prevState","last_played","warn","pop","startGame","_renderQuestions","number","questions","filter","val","answerID","answer","checkAnswer","index","point","closeTips","length","require","width","height","top","question","options","map","option","tips","bottom","origin","styles","image","color","fontStyle","Linking","openURL","StyleSheet","create","flex","alignItems","box","icon","position","container","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","backgroundColor","borderRadius"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Stack,\n  Center,\n  Heading,\n  VStack,\n  Divider,\n  Pressable,\n  NativeBaseProvider,\n  Text,\n  Container,\n  Box,\n  HStack,\n  FlatList,\n  Image,\n  ScrollView,\n  Button,\n  CheckCircleIcon,\n  CloseIcon,\n  Modal\n} from \"native-base\";\nimport { useIsFocused, useNavigation } from '@react-navigation/native';\nimport { ImageBackground, StyleSheet, TouchableOpacity } from \"react-native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { API_URL } from \"@env\";\n\nimport { Linking } from \"react-native\";\nimport { UserContext, LoadingContext } from \"../../context/context\";\n\n\nexport const Game = ({ navigation }) => {\n\n  const Navigation = useNavigation(); \n\n  const { user,setUser } = useContext(UserContext);\n  const { setIsLoading } = useContext(LoadingContext);\n\n  const [data, setData] = useState(null);\n  const [start, isStart] = useState(false);\n  const [score, setScore] = useState(0);\n  const [queue, setQueue] = useState(0);\n  const [answered, isAnswered] = useState(false);\n  const [correct, isCorrect] = useState(false);\n  const [buffing, isBuffing] = useState(false);\n  const [gameover, isGameover] = useState(false);\n  const [level, setLevel] = useState(1);\n\n  const [showTips, setShowTips] = useState(false);\n  const [showIntro, setShowIntro] = useState(true);\n\n  useEffect(() => {\n    const ac = new AbortController();\n\n    setIsLoading(true);\n\n    fetch(API_URL + 'game', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(response => response.json())\n      .then(results => {\n        setData(results);\n        setIsLoading(false);\n      })\n      .catch(err => {\n        setIsLoading(false);\n        console.log(err);\n      });\n\n      return () => ac.abort();\n    \n  }, [])\n  \n\n  //triggered when gameover\n  const gameOverEvent = () => {\n\n    setIsLoading(true);\n\n    const payload = {\n        user_id: user.id,\n        points_given: score,\n        time: new Date(),\n        event: \"game\"\n      };\n    \n      fetch(API_URL + \"mrpoint\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body:JSON.stringify(payload)\n      })\n        .then(response => response.json())\n        .then(results => {\n          const finalpoints = parseInt(score) + parseInt(user.mr_points);\n          setUser((prevState)=>({...prevState,mr_points:finalpoints, last_played: payload.time}));\n          setIsLoading(false);\n        })\n        .catch(err => {\n          console.warn(err);\n        });\n\n    Navigation.pop();\n  }\n\n const startGame = (level) => {\n    isStart(\"true\");\n    setLevel(level);\n }\n\n  const _renderQuestions = (number) => {\n\n    let questions = [];\n    switch (level) {\n      case 1:\n        questions = data.filter((val)=>{return val.level === 0});\n        break;\n      case 2:\n        questions = data.filter((val)=>{return val.level === 1});\n        break;    \n      default:\n        break;\n    }\n\n      const answerID = questions[number].answer;\n\n      //func to check answer\n      const checkAnswer = (index) => {\n\n        // if(buffing) return \"\";\n        isAnswered(true);\n        if(index === answerID){\n            setScore(parseInt(score) + parseInt(questions[number].point));\n            isCorrect(true);\n            // isBuffing(true);\n        } else {\n            isCorrect(false);\n        }\n        setShowTips(true);\n        // setTimeout(() => {\n        //   //check game over\n        //   if(queue+1 === questions.length ) isGameover(true);                \n        //   else setQueue(queue+1);\n        //   isAnswered(false);\n        //   isBuffing(false);\n        // }, 1000);\n\n      }\n\n      const closeTips = () => {\n        setShowTips(false);\n        if(queue+1 === questions.length ) isGameover(true);                \n        else setQueue(queue+1);\n        isAnswered(false);\n      }\n\n  \n\n      return (\n        <>\n        <Center justifyContent=\"center\" alignItems=\"center\" w=\"250\" h=\"250\">\n            <ImageBackground source={require('../../public/assets/question_container.png')} style={{width:350, height:430}}>\n                <VStack p=\"5\" justifyContent=\"center\" alignItems=\"center\">\n                {answered && \n                <>\n                    {correct ? \n                    <>\n                    {/* <Image source={require('../../public/assets/ingame_correct.png')} alt=\"Correct\" position=\"relative\" style={{width:50, height:40, top:27}}/> */}\n                    <CheckCircleIcon color=\"green.600\" size=\"10\" position=\"absolute\" style={{top:16}}/>\n                    </>\n                    :\n                    <>\n                    {/* <Image source={require('../../public/assets/ingame_incorrect.png')} alt=\"Incorrect\" position=\"relative\" style={{width:50, height:40, top:27}}/> */}\n                    <CloseIcon color=\"danger.600\" size=\"10\" position=\"absolute\" style={{top:16}}/>\n                    </>\n                    }\n                </>}\n                    <Heading color=\"white\" textAlign=\"center\" position=\"relative\" fontSize=\"xl\" style={{top:100, width:\"90%\"}}>{questions[number].question}</Heading>\n                    <VStack h=\"full\" justifyContent=\"center\" alignItems=\"center\" space={5}>\n                        {questions[number].options.map((option, index)=>{\n                            return (\n                            <TouchableOpacity key={index} onPress={()=>checkAnswer(index)}>\n                                <ImageBackground source={require('../../public/assets/answer_container.png')} alt=\"Play Button\" style={{width:160, height:39}}>\n                                    <Center>\n                                        <Text bold fontSize=\"lg\" mt=\"1\">{option}</Text>\n                                    </Center>\n                                </ImageBackground>\n                            </TouchableOpacity>\n                            )\n                        })}\n                    </VStack>\n                </VStack>\n            </ImageBackground>\n        </Center>\n        <Modal isOpen={showTips} onClose={() => setShowTips(false)}>\n          <Center position=\"absolute\" h=\"full\">\n            <ImageBackground source={require('../../public/assets/game_container.png')} style={{width:360, height:290}}>\n                <Center position=\"relative\" p=\"10\" pt=\"0\" style={{width:360, height:290}}>\n                  <Text color=\"white\" bold fontSize=\"2xl\" pb=\"2\">Tips</Text>\n                  <Text color=\"white\" fontSize=\"md\" textAlign=\"center\">{questions[number].tips}</Text>\n                  <Text color=\"gray.300\" fontSize=\"xs\" fontStyle=\"italic\" position=\"absolute\" style={{bottom:38}}>From: {questions[number].origin}</Text>\n                </Center>\n            </ImageBackground>\n            <TouchableOpacity position=\"relative\" style={{bottom:38}} onPress={closeTips}>\n              <Image source={require('../../public/assets/close_button_1.png')} alt=\"Close Button\" size=\"12\"/>\n            </TouchableOpacity>   \n          </Center>\n        </Modal>\n        </>\n      )\n      \n  }\n\n\n  return (\n    <ImageBackground source={require('../../public/assets/ingame_bg.png')} style={styles.image}>\n    {gameover ? \n    <Box w=\"full\" h=\"full\" p=\"3\" justifyContent=\"center\" alignItems=\"center\">\n        <VStack h=\"380\" justifyContent=\"flex-start\" alignItems=\"center\" space={5}>\n            <Heading fontSize=\"3xl\">Game Over!</Heading>\n            <Box>\n                <ImageBackground source={require('../../public/assets/ingame_score_container.png')} style={{width:180, height:72}}>\n                    <Center position=\"relative\" left=\"4\" top=\"3\">\n                        <Text color=\"white\" bold fontSize=\"3xl\">{score}</Text>\n                    </Center>\n                </ImageBackground>\n            </Box>\n            <Text bold fontSize=\"md\" textAlign=\"center\">The points will be added to your MR Wallet.</Text>\n            <Text textAlign=\"center\" mt=\"-2\" mb=\"5\" w=\"xs\">To learn more, please visit <Text style={{color:\"blue\", fontStyle:\"italic\"}} onPress={() => Linking.openURL('https://jpspn.kpkt.gov.my')}>JPSPN website</Text> for the latest information.</Text>\n            <TouchableOpacity backgroundColor=\"transparent\" onPress={gameOverEvent}>\n                <Image source={require('../../public/assets/quit_button.png')} alt=\"Quit Button\" style={{width:180, height:44}}/>\n            </TouchableOpacity>\n        </VStack>\n    </Box> \n    : \n    <>\n        <Box position=\"absolute\" left=\"4\" top=\"4\">\n            <ImageBackground source={require('../../public/assets/ingame_score_container.png')} style={{width:120, height:48}}>\n                <Center position=\"relative\" left=\"4\" top=\"3\">\n                    <Text color=\"white\" bold fontSize=\"md\">{score}</Text>\n                </Center>\n            </ImageBackground>\n        </Box>\n        <Box w=\"full\" h=\"full\" p=\"3\" justifyContent=\"center\" alignItems=\"center\">\n            {start ? \n                (_renderQuestions(queue))\n            :\n            <Center justifyContent=\"center\" alignItems=\"center\" w=\"250\" h=\"250\">\n                <VStack h=\"full\" justifyContent=\"center\" alignItems=\"center\" space={5}>\n                    <TouchableOpacity backgroundColor=\"transparent\" onPress={()=>startGame(1)}>\n                        <Image source={require('../../public/assets/level_2.png')} alt=\"Play Button\" style={{width:210, height:51}}/>\n                    </TouchableOpacity>\n                    <TouchableOpacity backgroundColor=\"transparent\" onPress={()=>startGame(2)}>\n                        <Image source={require('../../public/assets/level_1.png')} alt=\"Quit Button\" style={{width:210, height:51}}/>\n                    </TouchableOpacity>\n                </VStack>\n            </Center>\n            }\n        </Box>\n    </>}\n            <Modal isOpen={showIntro} onClose={() => setShowIntro(false)}>\n              <Center position=\"absolute\" h=\"full\">\n                <ImageBackground source={require('../../public/assets/game_container.png')} style={{width:360, height:290}}>\n                    <Center position=\"relative\" p=\"10\" style={{width:360, height:290}}>\n                      <Text color=\"white\" bold fontSize=\"xl\" pb=\"5\" textAlign=\"center\">MyRecycle's Mini Game</Text>\n                      <Text color=\"white\" fontSize=\"md\" textAlign=\"center\">This game is aimed to educate the recyclers about recycling knowledge, beside earning MR Points in order to redeem rewards.</Text>\n                    </Center>\n                </ImageBackground>\n                <TouchableOpacity position=\"relative\" style={{bottom:38}} onPress={() => setShowIntro(false)}>\n                  <Image source={require('../../public/assets/close_button_1.png')} alt=\"Close Button\" size=\"12\"/>\n                </TouchableOpacity>   \n              </Center>\n            </Modal>\n      </ImageBackground>\n  );\n};\n\nexport default () => {\n  return (\n    <NativeBaseProvider>\n      <Center flex={1}>\n        <Game />\n      </Center>\n    </NativeBaseProvider>\n  )\n};\n\nconst styles = StyleSheet.create({\n  image: {\n      flex: 1,\n      width: '100%',\n      alignItems: 'center',\n  },\n  box:{\n    width:'100%',\n  },\n  icon:{\n    position: \"absolute\",\n  },\n  container:{\n    shadowColor: '#171717',\n    shadowOffset: {width: 0, height: 0},\n    shadowOpacity: 0.2,\n    shadowRadius: 8,\n    elevation: 20,\n    backgroundColor: 'white',\n    borderRadius:14\n  }\n});\n"]},"metadata":{},"sourceType":"module"}