{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { DrawerContentScrollView, DrawerItem } from \"@react-navigation/drawer\";\nimport { Avatar, Title, Caption, Paragraph, Drawer, Text, TouchableRipple, Switch } from 'react-native-paper';\nimport Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\nimport { AuthContext } from \"../../context/context\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar DrawerContent = function DrawerContent(props) {\n  var _React$useContext = React.useContext(AuthContext),\n      signOut = _React$useContext.signOut;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      userData = _useState2[0],\n      setUserData = _useState2[1];\n\n  var getUserData = function getUserData() {\n    var value;\n    return _regeneratorRuntime.async(function getUserData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 3:\n            value = _context.sent;\n\n            if (value !== null) {\n              setUserData(JSON.parse(value));\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    getUserData();\n  }, []);\n  return _jsx(_Fragment, {\n    children: userData && _jsxs(View, {\n      style: {\n        flex: 1\n      },\n      children: [_jsx(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n        children: _jsxs(View, {\n          style: styles.drawerContent,\n          children: [_jsx(View, {\n            style: styles.userInfoSection,\n            children: _jsx(View, {\n              style: {\n                flexDirection: 'row',\n                marginTop: 15\n              },\n              children: _jsxs(View, {\n                style: {\n                  marginLeft: 15,\n                  flexDirection: 'column'\n                },\n                children: [_jsx(Title, {\n                  style: styles.title,\n                  children: userData.name\n                }), _jsx(Caption, {\n                  style: styles.caption,\n                  children: userData.email\n                })]\n              })\n            })\n          }), _jsxs(Drawer.Section, {\n            style: styles.drawerSection,\n            children: [_jsx(DrawerItem, {\n              icon: function icon(_ref) {\n                var color = _ref.color,\n                    size = _ref.size;\n                return _jsx(Icon, {\n                  name: \"home-outline\",\n                  color: color,\n                  size: size\n                });\n              },\n              label: \"Home\",\n              onPress: function onPress() {\n                props.navigation.navigate('Home');\n              }\n            }), _jsx(DrawerItem, {\n              icon: function icon(_ref2) {\n                var color = _ref2.color,\n                    size = _ref2.size;\n                return _jsx(Icon, {\n                  name: \"gift-outline\",\n                  color: color,\n                  size: size\n                });\n              },\n              label: \"MR Wallet\",\n              onPress: function onPress() {\n                props.navigation.navigate('Reward');\n              }\n            }), _jsx(DrawerItem, {\n              icon: function icon(_ref3) {\n                var color = _ref3.color,\n                    size = _ref3.size;\n                return _jsx(Icon, {\n                  name: \"bell-outline\",\n                  color: color,\n                  size: size\n                });\n              },\n              label: \"Notification\",\n              onPress: function onPress() {\n                props.navigation.navigate('Notification');\n              }\n            }), _jsx(DrawerItem, {\n              icon: function icon(_ref4) {\n                var color = _ref4.color,\n                    size = _ref4.size;\n                return _jsx(Icon, {\n                  name: \"account-outline\",\n                  color: color,\n                  size: size\n                });\n              },\n              label: \"Profile\",\n              onPress: function onPress() {\n                props.navigation.navigate('Profile');\n              }\n            }), _jsx(DrawerItem, {\n              icon: function icon(_ref5) {\n                var color = _ref5.color,\n                    size = _ref5.size;\n                return _jsx(Icon, {\n                  name: \"cog-outline\",\n                  color: color,\n                  size: size\n                });\n              },\n              label: \"Settings\",\n              onPress: function onPress() {\n                props.navigation.navigate('Settings');\n              }\n            })]\n          })]\n        })\n      })), _jsx(Drawer.Section, {\n        style: styles.bottomDrawerSection,\n        children: _jsx(DrawerItem, {\n          icon: function icon(_ref6) {\n            var color = _ref6.color,\n                size = _ref6.size;\n            return _jsx(Icon, {\n              name: \"exit-to-app\",\n              color: color,\n              size: size\n            });\n          },\n          label: \"Sign Out\",\n          onPress: function onPress() {\n            signOut();\n          }\n        })\n      })]\n    })\n  });\n};\n\nexport default DrawerContent;\nvar styles = StyleSheet.create({\n  drawerContent: {\n    flex: 1\n  },\n  userInfoSection: {\n    paddingLeft: 20\n  },\n  title: {\n    fontSize: 16,\n    marginTop: 3,\n    fontWeight: 'bold'\n  },\n  caption: {\n    fontSize: 14,\n    lineHeight: 14\n  },\n  row: {\n    marginTop: 20,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  section: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginRight: 15\n  },\n  paragraph: {\n    fontWeight: 'bold',\n    marginRight: 3\n  },\n  drawerSection: {\n    marginTop: 15\n  },\n  bottomDrawerSection: {\n    marginBottom: 15,\n    borderTopColor: '#f4f4f4',\n    borderTopWidth: 1\n  },\n  preference: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    paddingVertical: 12,\n    paddingHorizontal: 16\n  }\n});","map":{"version":3,"sources":["/Users/weiherr/Desktop/FYP/MyRecycle/mobile-app/screens/navigations/DrawerContent.js"],"names":["React","useEffect","useState","DrawerContentScrollView","DrawerItem","Avatar","Title","Caption","Paragraph","Drawer","Text","TouchableRipple","Switch","Icon","AuthContext","AsyncStorage","DrawerContent","props","useContext","signOut","userData","setUserData","getUserData","getItem","value","JSON","parse","console","log","flex","styles","drawerContent","userInfoSection","flexDirection","marginTop","marginLeft","title","name","caption","email","drawerSection","color","size","navigation","navigate","bottomDrawerSection","StyleSheet","create","paddingLeft","fontSize","fontWeight","lineHeight","row","alignItems","section","marginRight","paragraph","marginBottom","borderTopColor","borderTopWidth","preference","justifyContent","paddingVertical","paddingHorizontal"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { View, StyleSheet } from \"react-native\";\nimport { DrawerContentScrollView, DrawerItem } from \"@react-navigation/drawer\";\nimport {\n    Avatar,\n    Title,\n    Caption,\n    Paragraph,\n    Drawer,\n    Text,\n    TouchableRipple,\n    Switch\n} from 'react-native-paper';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { AuthContext } from \"../../context/context\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst DrawerContent = (props) => {\n\n    const { signOut } = React.useContext(AuthContext);\n\n    const [userData, setUserData] = useState(null);\n\n  //get user data\n  const getUserData = async () => {\n    try {\n      const value = await AsyncStorage.getItem('user');\n      if (value !== null) {\n        // We have data!!\n        setUserData(JSON.parse(value));\n      }\n    } catch (error) {\n      // Error retrieving data\n      console.log(error);\n    }\n  }; \n\n  //get name and email\n  useEffect(() => {\n    getUserData();\n  }, [])\n  \n    return(\n      <>\n      {userData && \n          <View style={{flex:1}}>\n            <DrawerContentScrollView {...props}>\n                <View style={styles.drawerContent}>\n                    <View style={styles.userInfoSection}>\n                        <View style={{flexDirection:'row',marginTop: 15}}>\n                            <View style={{marginLeft:15, flexDirection:'column'}}>\n                                <Title style={styles.title}>{userData.name}</Title>\n                                <Caption style={styles.caption}>{userData.email}</Caption>\n                            </View>\n                        </View>\n                    </View>\n\n                    <Drawer.Section style={styles.drawerSection}>\n                        <DrawerItem \n                            icon={({color, size}) => (\n                                <Icon \n                                name=\"home-outline\" \n                                color={color}\n                                size={size}\n                                />\n                            )}\n                            label=\"Home\"\n                            onPress={() => {props.navigation.navigate('Home')}}\n                        />\n                        <DrawerItem \n                            icon={({color, size}) => (\n                                <Icon \n                                name=\"gift-outline\" \n                                color={color}\n                                size={size}\n                                />\n                            )}\n                            label=\"MR Wallet\"\n                            onPress={() => {props.navigation.navigate('Reward')}}\n                        />\n                        <DrawerItem \n                            icon={({color, size}) => (\n                                <Icon \n                                name=\"bell-outline\" \n                                color={color}\n                                size={size}\n                                />\n                            )}\n                            label=\"Notification\"\n                            onPress={() => {props.navigation.navigate('Notification')}}\n                        />\n                        <DrawerItem \n                            icon={({color, size}) => (\n                                <Icon \n                                name=\"account-outline\" \n                                color={color}\n                                size={size}\n                                />\n                            )}\n                            label=\"Profile\"\n                            onPress={() => {props.navigation.navigate('Profile')}}\n                        />\n                        <DrawerItem \n                            icon={({color, size}) => (\n                                <Icon \n                                name=\"cog-outline\" \n                                color={color}\n                                size={size}\n                                />\n                            )}\n                            label=\"Settings\"\n                            onPress={() => {props.navigation.navigate('Settings')}}\n                        />\n                    </Drawer.Section>\n                </View>\n            </DrawerContentScrollView>\n            <Drawer.Section style={styles.bottomDrawerSection}>\n                <DrawerItem \n                    icon={({color, size}) => (\n                        <Icon \n                        name=\"exit-to-app\" \n                        color={color}\n                        size={size}\n                        />\n                    )}\n                    label=\"Sign Out\"\n                    onPress={() => {signOut()}}\n                />\n            </Drawer.Section>\n        </View>\n      }\n      </>\n    )\n}\n\nexport default DrawerContent;\n\nconst styles = StyleSheet.create({\n    drawerContent: {\n      flex: 1,\n    },\n    userInfoSection: {\n      paddingLeft: 20,\n    },\n    title: {\n      fontSize: 16,\n      marginTop: 3,\n      fontWeight: 'bold',\n    },\n    caption: {\n      fontSize: 14,\n      lineHeight: 14,\n    },\n    row: {\n      marginTop: 20,\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n    section: {\n      flexDirection: 'row',\n      alignItems: 'center',\n      marginRight: 15,\n    },\n    paragraph: {\n      fontWeight: 'bold',\n      marginRight: 3,\n    },\n    drawerSection: {\n      marginTop: 15,\n    },\n    bottomDrawerSection: {\n        marginBottom: 15,\n        borderTopColor: '#f4f4f4',\n        borderTopWidth: 1\n    },\n    preference: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      paddingVertical: 12,\n      paddingHorizontal: 16,\n    },\n  });"]},"metadata":{},"sourceType":"module"}