{"ast":null,"code":"import React from 'react';\nimport { useNativeBaseConfig } from \"../core/NativeBaseContext\";\nimport { resolveValueWithBreakpoint } from \"./useThemeProps/utils\";\nimport { useTheme } from \"./../hooks/useTheme\";\nexport var useBreakpointResolvedProps = function useBreakpointResolvedProps(props) {\n  var currentBreakpoint = useNativeBaseConfig('useBreakpointResolvedProps').currentBreakpoint;\n  var theme = useTheme();\n  var newProps = React.useMemo(function () {\n    var newProps = {};\n\n    for (var key in props) {\n      var rawValue = props[key];\n      var value = resolveValueWithBreakpoint(rawValue, theme.breakpoints, currentBreakpoint, key);\n      newProps[key] = value;\n    }\n\n    return newProps;\n  }, [props, currentBreakpoint, theme.breakpoints]);\n  return newProps;\n};","map":{"version":3,"sources":["useBreakpointResolvedProps.ts"],"names":["useBreakpointResolvedProps","props","currentBreakpoint","useNativeBaseConfig","theme","useTheme","newProps","rawValue","value","resolveValueWithBreakpoint"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA;AAEA,SAAA,mBAAA;AACA,SAAA,0BAAA;AACA,SAAA,QAAA;AAUA,OAAO,IAAMA,0BAA0B,GAAIC,SAA9BD,0BAA8BC,CAAAA,KAAD,EAAmB;AAC3D,MAAMC,iBAAiB,GAAGC,mBAAmB,CAAnBA,4BAAmB,CAAnBA,CAA1B,iBAAA;AAEA,MAAMC,KAAK,GAAGC,QAAd,EAAA;AACA,MAAMC,QAAmB,GAAG,KAAK,CAAL,OAAA,CAAc,YAAM;AAC9C,QAAIA,QAAmB,GAAvB,EAAA;;AACA,SAAK,IAAL,GAAA,IAAA,KAAA,EAAuB;AACrB,UAAMC,QAAQ,GAAGN,KAAK,CAAtB,GAAsB,CAAtB;AACA,UAAMO,KAAK,GAAGC,0BAA0B,CAAA,QAAA,EAEtCL,KAAK,CAFiC,WAAA,EAAA,iBAAA,EAAxC,GAAwC,CAAxC;AAMAE,MAAAA,QAAQ,CAARA,GAAQ,CAARA,GAAAA,KAAAA;AACD;;AACD,WAAA,QAAA;AAZ0B,GAAA,EAazB,CAAA,KAAA,EAAA,iBAAA,EAA2BF,KAAK,CAbnC,WAaG,CAbyB,CAA5B;AAeA,SAAA,QAAA;AAnBK,CAAA","sourcesContent":["import React from 'react';\nimport type { ResponsiveValue } from '../components/types';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { resolveValueWithBreakpoint } from './useThemeProps/utils';\nimport { useTheme } from './../hooks/useTheme';\n\ntype IProps = {\n  [key: string]: ResponsiveValue<number | string>;\n};\n\ntype INewProps = {\n  [key: string]: number | string;\n};\n\nexport const useBreakpointResolvedProps = (props: IProps) => {\n  const currentBreakpoint = useNativeBaseConfig('useBreakpointResolvedProps')\n    .currentBreakpoint;\n  const theme = useTheme();\n  const newProps: INewProps = React.useMemo(() => {\n    let newProps: INewProps = {};\n    for (let key in props) {\n      const rawValue = props[key];\n      const value = resolveValueWithBreakpoint(\n        rawValue,\n        theme.breakpoints,\n        currentBreakpoint,\n        key\n      );\n      newProps[key] = value;\n    }\n    return newProps;\n  }, [props, currentBreakpoint, theme.breakpoints]);\n\n  return newProps;\n};\n"]},"metadata":{},"sourceType":"module"}