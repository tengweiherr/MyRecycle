{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { NativeBaseProvider, Button, FormControl, Input, VStack, Center, Image, HStack, Select, CheckIcon, WarningOutlineIcon, TextArea, Text, Icon, ScrollView, Modal, Box, Heading } from \"native-base\";\nimport SelectDropdown from 'react-native-select-dropdown';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNavigation } from \"@react-navigation/native\";\nimport { LoadingContext } from \"../context/context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Profile = function Profile() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      userData = _useState2[0],\n      setUserData = _useState2[1];\n\n  var _useContext = useContext(LoadingContext),\n      setIsLoading = _useContext.setIsLoading;\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      email = _useState4[0],\n      setEmail = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      name = _useState6[0],\n      setName = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      state = _useState8[0],\n      setState = _useState8[1];\n\n  var _useState9 = useState(\"recycler\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      role = _useState10[0],\n      setRole = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      password = _useState12[0],\n      setPassword = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      password2 = _useState14[0],\n      setPassword2 = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      isChangePassword = _useState16[0],\n      setIsChangePassword = _useState16[1];\n\n  var _useState17 = useState(''),\n      _useState18 = _slicedToArray(_useState17, 2),\n      emailValidation = _useState18[0],\n      setEmailValidation = _useState18[1];\n\n  var _useState19 = useState(''),\n      _useState20 = _slicedToArray(_useState19, 2),\n      passwordValidation = _useState20[0],\n      setPasswordValidation = _useState20[1];\n\n  var Navigation = useNavigation();\n  var states = ['Johor', 'Kedah', 'Kelantan', 'Malacca', 'N9', 'Pahang', 'Penang', 'Perak', 'Perlis', 'Sabah', 'Sarawak', 'Selangor', 'Terengganu', 'Kuala Lumpur', 'Labuan', 'Putrajaya'];\n\n  var getUserData = function getUserData() {\n    var value;\n    return _regeneratorRuntime.async(function getUserData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 3:\n            value = _context.sent;\n\n            if (value !== null) {\n              setUserData(JSON.parse(value));\n              setEmail(JSON.parse(value).email);\n              setName(JSON.parse(value).name);\n              setState(JSON.parse(value).state);\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 7]], Promise);\n  };\n\n  useEffect(function () {\n    getUserData();\n  }, []);\n\n  var updateUserData = function updateUserData(newUserData) {\n    return _regeneratorRuntime.async(function updateUserData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('user', JSON.stringify(newUserData)));\n\n          case 3:\n            _context2.next = 8;\n            break;\n\n          case 5:\n            _context2.prev = 5;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(_context2.t0);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 5]], Promise);\n  };\n\n  var validateEmail = function validateEmail(text) {\n    var reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\n\n    if (reg.test(text) === false) {\n      setEmailValidation(\"Incorrect email format\");\n      return false;\n    } else {\n      setEmail(text);\n      setEmailValidation(\"\");\n    }\n  };\n\n  var validatePassword = function validatePassword(text, whichpassword) {\n    if (whichpassword === 1) {\n      var reg = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\n\n      if (reg.test(text) === false) {\n        setPasswordValidation(\"Password must contain at least 8 characters, including at least 1 number, 1 lowercase and 1 uppercase character.\");\n        return false;\n      } else {\n        setPassword(text);\n        setPasswordValidation(\"\");\n      }\n    } else setPassword2(text);\n  };\n\n  var onSubmitHandler = function onSubmitHandler() {\n    var ac = new AbortController();\n    setIsLoading(true);\n\n    if (password === password2 && userData) {\n      var payload = {\n        id: userData.id,\n        email: email,\n        name: name,\n        password: password,\n        role: role,\n        state: state,\n        mr_points: userData.mr_points\n      };\n      fetch(\"http://192.168.100.31:3000/\" + 'user/' + payload.id, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      }).then(function (response) {\n        return response.json();\n      }).then(function (results) {\n        setEmail(results.email);\n        setName(results.name);\n        setState(results.state);\n        updateUserData(payload);\n        alert(\"Update success\");\n        setIsLoading(false);\n        Navigation.goBack();\n      }).catch(function (err) {\n        console.log(err);\n        setIsLoading(false);\n      });\n    }\n\n    return function () {\n      return ac.abort();\n    };\n  };\n\n  return _jsx(ImageBackground, {\n    source: require(\"../public/assets/bg-1-100.jpg\"),\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: _jsxs(VStack, {\n      w: \"full\",\n      h: \"full\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      p: \"5\",\n      space: 5,\n      children: [_jsx(Heading, {\n        fontSize: 24,\n        bold: true,\n        textAlign: \"center\",\n        children: \"Update Account\"\n      }), _jsxs(VStack, {\n        w: \"full\",\n        p: \"5\",\n        space: 2,\n        children: [_jsxs(FormControl, {\n          isRequired: true,\n          isInvalid: emailValidation !== \"\",\n          children: [_jsx(Input, {\n            variant: \"unstyled\",\n            style: styles.input,\n            placeholder: \"Email\",\n            autoCapitalize: \"none\",\n            value: email,\n            onChangeText: function onChangeText(text) {\n              return validateEmail(text);\n            }\n          }), emailValidation !== \"\" && _jsx(FormControl.ErrorMessage, {\n            style: {\n              fontSize: 12,\n              height: 22,\n              alignSelf: \"flex-start\",\n              marginLeft: 10,\n              color: \"red\"\n            },\n            children: emailValidation\n          })]\n        }), _jsx(FormControl, {\n          isRequired: true,\n          children: _jsx(Input, {\n            variant: \"unstyled\",\n            style: styles.input,\n            placeholder: \"Name\",\n            value: name,\n            onChangeText: setName\n          })\n        }), isChangePassword && _jsxs(_Fragment, {\n          children: [_jsxs(FormControl, {\n            isRequired: true,\n            isInvalid: passwordValidation !== \"\",\n            children: [_jsx(Input, {\n              variant: \"unstyled\",\n              secureTextEntry: true,\n              style: styles.input,\n              placeholder: \"New Password\",\n              onChangeText: function onChangeText(text) {\n                return validatePassword(text, 1);\n              }\n            }), passwordValidation !== \"\" && _jsx(FormControl.ErrorMessage, {\n              style: {\n                fontSize: 12,\n                alignSelf: \"flex-start\",\n                marginLeft: 10,\n                color: \"red\"\n              },\n              children: passwordValidation\n            })]\n          }), _jsxs(FormControl, {\n            isRequired: true,\n            isInvalid: password !== password2,\n            children: [_jsx(Input, {\n              variant: \"unstyled\",\n              secureTextEntry: true,\n              style: styles.input,\n              placeholder: \"Enter New Password Again\",\n              onChangeText: function onChangeText(text) {\n                return validatePassword(text, 2);\n              }\n            }), password !== password2 && _jsx(FormControl.ErrorMessage, {\n              style: {\n                fontSize: 12,\n                alignSelf: \"flex-start\",\n                marginLeft: 10,\n                color: \"red\"\n              },\n              children: \"Password not matched.\"\n            })]\n          })]\n        }), _jsx(SelectDropdown, {\n          data: states,\n          onSelect: function onSelect(selectedItem, index) {\n            setState(selectedItem);\n          },\n          buttonTextAfterSelection: function buttonTextAfterSelection(selectedItem, index) {\n            return selectedItem;\n          },\n          rowTextForSelection: function rowTextForSelection(item, index) {\n            return item;\n          },\n          defaultValue: state,\n          buttonStyle: styles.input,\n          buttonTextStyle: {\n            textAlign: \"left\",\n            height: 22\n          }\n        })]\n      }), _jsxs(VStack, {\n        w: \"full\",\n        p: \"5\",\n        children: [_jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: onSubmitHandler,\n          children: _jsx(Text, {\n            fontSize: 20,\n            bold: true,\n            color: \"#fff\",\n            children: \"Update\"\n          })\n        }), _jsx(TouchableOpacity, {\n          style: styles.buttonAlt,\n          onPress: function onPress() {\n            return setIsChangePassword(!isChangePassword);\n          },\n          children: _jsx(Text, {\n            fontSize: 20,\n            bold: true,\n            children: isChangePassword ? \"Cancel\" : \"Change Password\"\n          })\n        })]\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  input: {\n    width: '100%',\n    borderWidth: 1.5,\n    borderColor: '#1FAA8F',\n    borderRadius: 30,\n    padding: 16,\n    fontSize: 16,\n    minHeight: 54\n  },\n  button: {\n    width: '100%',\n    backgroundColor: '#1FAA8F',\n    height: 40,\n    borderRadius: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 5\n  },\n  buttonAlt: {\n    width: '100%',\n    borderWidth: 1.5,\n    height: 40,\n    borderRadius: 50,\n    borderColor: '#E9F4F1',\n    backgroundColor: '#E9F4F1',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginVertical: 5\n  }\n});\nexport default (function () {\n  return _jsx(NativeBaseProvider, {\n    children: _jsx(Center, {\n      flex: 1,\n      children: _jsx(Profile, {})\n    })\n  });\n});","map":{"version":3,"sources":["/Users/weiherr/Desktop/FYP/MyRecycle/mobile-app/screens/ProfileScreen.js"],"names":["React","useContext","useEffect","useState","NativeBaseProvider","Button","FormControl","Input","VStack","Center","Image","HStack","Select","CheckIcon","WarningOutlineIcon","TextArea","Text","Icon","ScrollView","Modal","Box","Heading","SelectDropdown","AsyncStorage","useNavigation","LoadingContext","Profile","userData","setUserData","setIsLoading","email","setEmail","name","setName","state","setState","role","setRole","password","setPassword","password2","setPassword2","isChangePassword","setIsChangePassword","emailValidation","setEmailValidation","passwordValidation","setPasswordValidation","Navigation","states","getUserData","getItem","value","JSON","parse","console","log","updateUserData","newUserData","setItem","stringify","validateEmail","text","reg","test","validatePassword","whichpassword","onSubmitHandler","ac","AbortController","payload","id","mr_points","fetch","method","headers","body","then","response","json","results","alert","goBack","catch","err","abort","require","width","height","styles","input","fontSize","alignSelf","marginLeft","color","selectedItem","index","item","textAlign","button","buttonAlt","StyleSheet","create","borderWidth","borderColor","borderRadius","padding","minHeight","backgroundColor","justifyContent","alignItems","marginVertical"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport { ImageBackground, StyleSheet, TouchableOpacity } from 'react-native';\nimport { NativeBaseProvider, Button, FormControl, Input, VStack, Center, Image, HStack, Select, CheckIcon, WarningOutlineIcon, TextArea, Text, Icon, ScrollView, Modal, Box, Heading } from \"native-base\";\nimport { API_URL } from \"@env\";\nimport SelectDropdown from 'react-native-select-dropdown'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport { useNavigation } from \"@react-navigation/native\";\nimport { LoadingContext } from \"../context/context\";\n\nconst Profile = () => {\n\n  const [userData, setUserData] = useState(null);\n  const { setIsLoading } = useContext(LoadingContext);\n\n  //formData\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [state, setState] = useState('');\n  const [role, setRole] = useState(\"recycler\");\n  const [password, setPassword] = useState('');\n  const [password2, setPassword2] = useState('');\n\n  const [isChangePassword, setIsChangePassword] = useState(false);\n\n  const [emailValidation, setEmailValidation] = useState('');\n  const [passwordValidation, setPasswordValidation] = useState('');\n\n  const Navigation = useNavigation(); \n\n  const states = ['Johor', 'Kedah', 'Kelantan', 'Malacca', 'N9', 'Pahang', 'Penang', 'Perak', 'Perlis', 'Sabah', 'Sarawak', 'Selangor', 'Terengganu', 'Kuala Lumpur', 'Labuan', 'Putrajaya'];\n\n    //get user data\n    const getUserData = async () => {\n      try {\n        const value = await AsyncStorage.getItem('user');\n        if (value !== null) {\n          // We have data!!\n          setUserData(JSON.parse(value));\n          setEmail(JSON.parse(value).email);\n          setName(JSON.parse(value).name);\n          setState(JSON.parse(value).state);\n\n        }\n      } catch (error) {\n        // Error retrieving data\n        console.log(error);\n      }\n    }; \n  \n    //get user data\n    useEffect(() => {\n      getUserData();\n    }, [])\n\n  //get user data\n  const updateUserData = async (newUserData) => {\n    try {\n      await AsyncStorage.setItem('user', JSON.stringify(newUserData));\n    } catch (error) {\n      // Error retrieving data\n      console.log(error);\n    }\n  }; \n    \n  const validateEmail = (text) => {\n    let reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w\\w+)+$/;\n    if (reg.test(text) === false) {\n      setEmailValidation(\"Incorrect email format\");\n    //   setEmail(text);\n      return false;\n    }\n    else {\n      setEmail(text);\n      setEmailValidation(\"\");\n    }\n}\n\nconst validatePassword = (text, whichpassword) => {\n\n  if(whichpassword === 1){\n    let reg = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/;\n    if (reg.test(text) === false) {\n      setPasswordValidation(\"Password must contain at least 8 characters, including at least 1 number, 1 lowercase and 1 uppercase character.\");\n      return false;\n    }\n    else {\n      setPassword(text);\n      setPasswordValidation(\"\");\n    }\n  }\n  else setPassword2(text);\n}\n\n  const onSubmitHandler = () => {\n\n    const ac = new AbortController();\n\n    setIsLoading(true);\n\n    if((password === password2) && userData){\n\n      const payload = {\n          id: userData.id,\n          email,\n          name,\n          password,\n          role,\n          state,\n          mr_points: userData.mr_points\n      };\n\n      fetch(API_URL + 'user/' + payload.id, {\n          method: 'POST',\n          headers: {\n              'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(payload),\n        })\n        .then(response => response.json())\n        .then(results => {\n          setEmail(results.email);\n          setName(results.name);\n          setState(results.state);\n          updateUserData(payload);\n          alert(\"Update success\");\n          setIsLoading(false);\n          Navigation.goBack();\n        })\n        .catch(err => {\n          console.log(err);\n          setIsLoading(false);\n        });   \n\n      }  \n\n    return () => ac.abort();\n};\n\n  return (\n      <ImageBackground source={require('../public/assets/bg-1-100.jpg')} style={{width:\"100%\", height:\"100%\"}}>\n        <VStack w=\"full\" h=\"full\" justifyContent=\"center\" alignItems=\"center\" p=\"5\" space={5}>\n          <Heading fontSize={24} bold textAlign=\"center\">Update Account</Heading>\n          <VStack w=\"full\" p=\"5\" space={2}>\n            <FormControl isRequired isInvalid={emailValidation !== \"\"}>\n              <Input variant=\"unstyled\" style={styles.input} placeholder=\"Email\" autoCapitalize=\"none\" value={email} onChangeText={(text)=>validateEmail(text)} />\n              {emailValidation !== \"\" && \n              <FormControl.ErrorMessage style={{fontSize:12, height:22, alignSelf:\"flex-start\", marginLeft:10, color:\"red\"}}>{emailValidation}</FormControl.ErrorMessage>}\n            </FormControl>\n\n            <FormControl isRequired>\n              <Input variant=\"unstyled\" style={styles.input} placeholder=\"Name\" value={name} onChangeText={setName} />\n            </FormControl>\n\n            {isChangePassword && \n            <>\n            <FormControl isRequired isInvalid={passwordValidation !== \"\"}>\n              <Input variant=\"unstyled\" secureTextEntry={true} style={styles.input} placeholder=\"New Password\" onChangeText={(text)=>validatePassword(text,1)}></Input>\n              {passwordValidation !== \"\" && \n                <FormControl.ErrorMessage style={{fontSize:12, alignSelf:\"flex-start\", marginLeft:10, color:\"red\"}}>{passwordValidation}</FormControl.ErrorMessage>}\n            </FormControl>\n            <FormControl isRequired isInvalid={password !== password2}>\n              <Input variant=\"unstyled\" secureTextEntry={true} style={styles.input} placeholder=\"Enter New Password Again\" onChangeText={(text)=>validatePassword(text,2)}></Input>\n              {password !== password2 && \n                <FormControl.ErrorMessage style={{fontSize:12, alignSelf:\"flex-start\", marginLeft:10, color:\"red\"}}>Password not matched.</FormControl.ErrorMessage>\n              }\n            </FormControl>\n            </>\n            }\n\n                <SelectDropdown\n                    data={states}\n                    onSelect={(selectedItem, index) => {\n                        setState(selectedItem);\n                    }}\n                    buttonTextAfterSelection={(selectedItem, index) => {\n                        return selectedItem\n                    }}\n                    rowTextForSelection={(item, index) => {\n                        return item\n                    }}\n                    defaultValue={state}\n                    buttonStyle={styles.input}\n                    buttonTextStyle={{textAlign:\"left\", height:22}}\n                />\n\n            </VStack>\n\n            <VStack w=\"full\" p=\"5\">\n              <TouchableOpacity style={styles.button} onPress={onSubmitHandler}>\n                <Text fontSize={20} bold color=\"#fff\">Update</Text>\n              </TouchableOpacity>\n              <TouchableOpacity style={styles.buttonAlt} onPress={()=>setIsChangePassword(!isChangePassword)}>\n                <Text fontSize={20} bold>{isChangePassword ? \"Cancel\" : \"Change Password\"}</Text>\n              </TouchableOpacity>\n            </VStack>\n          </VStack>\n        </ImageBackground>\n  );\n};\n\nconst styles = StyleSheet.create({\n  input: {\n      width: '100%',\n      borderWidth: 1.5,\n      borderColor: '#1FAA8F',\n      borderRadius: 30,\n      padding: 16,\n      fontSize: 16, \n      minHeight: 54,\n  },\n  button: {\n      width: '100%',\n      backgroundColor: '#1FAA8F',\n      height: 40,\n      borderRadius: 50,\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginVertical: 5,\n  },\n  buttonAlt: {\n      width: '100%',\n      borderWidth: 1.5,\n      height: 40,\n      borderRadius: 50,\n      borderColor: '#E9F4F1',\n      backgroundColor: '#E9F4F1',\n      justifyContent: 'center',\n      alignItems: 'center',\n      marginVertical: 5,\n  }\n});\n\nexport default () => {\n  return (\n    <NativeBaseProvider>\n      <Center flex={1}>\n        <Profile />\n      </Center>\n    </NativeBaseProvider>\n  )\n};"]},"metadata":{},"sourceType":"module"}