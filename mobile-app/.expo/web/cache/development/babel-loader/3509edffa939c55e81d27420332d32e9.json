{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useReducer, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport MainTabNavigator from \"./screens/navigations/MainTabNavigator\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { AuthScreen } from \"./screens\";\nimport { AuthContext, LoadingContext, UserContext } from \"./context/context\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport DrawerContent from \"./screens/navigations/DrawerContent\";\nimport Notification from \"./screens/NotificationScreen\";\nimport Profile from \"./screens/ProfileScreen\";\nimport Settings from \"./screens/SettingsScreen\";\nimport LogBox from \"react-native-web/dist/exports/LogBox\";\nimport LoadingScreen from \"./components/LoadingScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Drawer = createDrawerNavigator();\nexport default function App() {\n  LogBox.ignoreLogs([\"NativeBase:\"]);\n  LogBox.ignoreLogs([\"Found screens\"]);\n  LogBox.ignoreLogs([\"Encountered two children with the same key\"]);\n  var initialLoginState = {\n    isLoading: true,\n    userToken: null\n  };\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var _useState3 = useState({\n    id: null,\n    name: null,\n    email: null\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      user = _useState4[0],\n      setUser = _useState4[1];\n\n  var loginReducer = function loginReducer(prevState, action) {\n    switch (action.type) {\n      case \"RETRIEVE_TOKEN\":\n        if (action.userData) {\n          fetch(\"http://192.168.100.31:3000/\" + 'user/' + action.userData.id, {\n            method: 'GET',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          }).then(function (response) {\n            return response.json();\n          }).then(function (results) {\n            setUser(results);\n            setIsLoading(false);\n          }).catch(function (err) {\n            console.log(err);\n          });\n        } else {\n          setIsLoading(false);\n        }\n\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.userData ? action.userData.token : null,\n          isLoading: false\n        });\n\n      case \"LOGIN\":\n        setIsLoading(false);\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.userData ? action.userData.token : null,\n          isLoading: false\n        });\n\n      case \"LOGOUT\":\n        setIsLoading(false);\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: null,\n          isLoading: false\n        });\n\n      default:\n        break;\n    }\n  };\n\n  var _useReducer = useReducer(loginReducer, initialLoginState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      loginState = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(userData) {\n        return _regeneratorRuntime.async(function signIn$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.setItem('user', JSON.stringify(userData)));\n\n              case 3:\n                _context.next = 8;\n                break;\n\n              case 5:\n                _context.prev = 5;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 8:\n                setUser(userData);\n                dispatch({\n                  type: \"LOGIN\",\n                  userData: userData\n                });\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      },\n      signOut: function signOut() {\n        return _regeneratorRuntime.async(function signOut$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return _regeneratorRuntime.awrap(AsyncStorage.removeItem('user'));\n\n              case 3:\n                _context2.next = 8;\n                break;\n\n              case 5:\n                _context2.prev = 5;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 8:\n                dispatch({\n                  type: \"LOGOUT\"\n                });\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[0, 5]], Promise);\n      }\n    };\n  }, []);\n  useEffect(function () {\n    setTimeout(function _callee() {\n      var userData;\n      return _regeneratorRuntime.async(function _callee$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              userData = null;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n            case 4:\n              userData = _context3.sent;\n              _context3.next = 10;\n              break;\n\n            case 7:\n              _context3.prev = 7;\n              _context3.t0 = _context3[\"catch\"](1);\n              console.log(_context3.t0);\n\n            case 10:\n              userData = JSON.parse(userData);\n              userData ? setUser(userData) : setUser(null);\n              dispatch({\n                type: \"RETRIEVE_TOKEN\",\n                userData: userData\n              });\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[1, 7]], Promise);\n    }, 1000);\n  }, []);\n  return _jsx(AuthContext.Provider, {\n    value: authContext,\n    children: _jsx(UserContext.Provider, {\n      value: {\n        user: user,\n        setUser: setUser\n      },\n      children: _jsx(LoadingContext.Provider, {\n        value: {\n          isLoading: isLoading,\n          setIsLoading: setIsLoading\n        },\n        children: _jsxs(NavigationContainer, {\n          children: [loginState.userToken !== null ? _jsxs(Drawer.Navigator, {\n            initialRouteName: \"HomeDrawer\",\n            drawerContent: function drawerContent(props) {\n              return _jsx(DrawerContent, _objectSpread({}, props));\n            },\n            children: [_jsx(Drawer.Screen, {\n              name: \"Home\",\n              component: MainTabNavigator,\n              options: {\n                headerShown: false\n              }\n            }), _jsx(Drawer.Screen, {\n              name: \"Notification\",\n              component: Notification\n            }), _jsx(Drawer.Screen, {\n              name: \"Profile\",\n              component: Profile\n            }), _jsx(Drawer.Screen, {\n              name: \"Settings\",\n              component: Settings\n            })]\n          }) : _jsxs(View, {\n            style: styles.container,\n            children: [_jsx(AuthScreen, {}), _jsx(StatusBar, {\n              style: \"auto\"\n            })]\n          }), isLoading && _jsx(View, {\n            style: {\n              width: \"100%\",\n              height: \"100%\",\n              position: \"absolute\",\n              backgroundColor: \"rgba(0,0,0,0.6)\"\n            },\n            children: _jsx(LoadingScreen, {})\n          })]\n        })\n      })\n    })\n  });\n}\n;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    justifyContent: \"center\",\n    width: \"100%\"\n  }\n});","map":{"version":3,"sources":["/Users/weiherr/Desktop/FYP/MyRecycle/mobile-app/App.js"],"names":["StatusBar","React","useEffect","useReducer","useState","NavigationContainer","MainTabNavigator","createDrawerNavigator","AuthScreen","AuthContext","LoadingContext","UserContext","AsyncStorage","DrawerContent","Notification","Profile","Settings","LoadingScreen","Drawer","App","LogBox","ignoreLogs","initialLoginState","isLoading","userToken","setIsLoading","id","name","email","user","setUser","loginReducer","prevState","action","type","userData","fetch","method","headers","then","response","json","results","catch","err","console","log","token","loginState","dispatch","authContext","useMemo","signIn","setItem","JSON","stringify","signOut","removeItem","setTimeout","getItem","parse","props","headerShown","styles","container","width","height","position","backgroundColor","StyleSheet","create","flex","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useReducer, useState } from 'react';\nimport { StyleSheet, Text, View, ActivityIndicator } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport MainTabNavigator from \"./screens/navigations/MainTabNavigator\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { AuthScreen } from './screens';\nimport { AuthContext, LoadingContext, UserContext } from './context/context';\nimport AsyncStorage from '@react-native-async-storage/async-storage'\nimport DrawerContent from './screens/navigations/DrawerContent';\nimport Notification from './screens/NotificationScreen';\nimport Profile from './screens/ProfileScreen';\nimport Settings from './screens/SettingsScreen';\nimport { LogBox } from 'react-native';\nimport LoadingScreen from './components/LoadingScreen';\nimport { API_URL } from \"@env\";\n\nconst Drawer = createDrawerNavigator();\n\nexport default function App() {\n\n  //disable nativebase contrast warning\n  LogBox.ignoreLogs([\"NativeBase:\"])\n  LogBox.ignoreLogs([\"Found screens\"])\n  LogBox.ignoreLogs([\"Encountered two children with the same key\"])\n\n  const initialLoginState = {\n    isLoading: true,\n    userToken: null,\n  };\n\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState({\n    id:null,\n    name:null,\n    email:null\n  });\n\n  //reducer function\n  const loginReducer = (prevState, action) => {\n    switch (action.type) {\n      case \"RETRIEVE_TOKEN\":\n\n        if(action.userData){\n\n        fetch(API_URL + 'user/' + action.userData.id, {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        })\n          .then(response => response.json())\n          .then(results => {\n            setUser(results);\n            setIsLoading(false);\n          })\n          .catch(err => {\n            console.log(err);\n          });\n\n        } else {\n          setIsLoading(false);\n        }\n        \n        return {\n          ...prevState,\n          userToken: action.userData ? action.userData.token : null,\n          isLoading: false,\n        };\n      case \"LOGIN\":\n        setIsLoading(false);\n        return {\n          ...prevState,\n          userToken: action.userData ? action.userData.token : null,\n          isLoading: false,\n        };\n      case \"LOGOUT\":\n        setIsLoading(false);\n        return {\n          ...prevState,\n          userToken: null,\n          isLoading: false,\n        };\n\n      default:\n        break;\n    }\n  }\n\n  const [loginState, dispatch] = useReducer(loginReducer, initialLoginState);\n\n  //setup context\n  const authContext = React.useMemo(() => ({\n    signIn: async (userData) => {\n      try {\n        await AsyncStorage.setItem('user', JSON.stringify(userData));\n      } catch (e) {\n        console.log(e);\n      }\n      setUser(userData);\n      dispatch({ type: \"LOGIN\", userData: userData });\n    },\n    signOut: async () => {\n      try {\n        await AsyncStorage.removeItem('user');\n      } catch (e) {\n        console.log(e);\n      }\n      dispatch({ type: \"LOGOUT\" });\n    },\n\n  }), []);\n\n  useEffect(() => {\n    setTimeout(async () => {\n      let userData = null;\n      try {\n        userData = await AsyncStorage.getItem('user');\n      } catch (e) {\n        console.log(e);\n      }\n      userData = JSON.parse(userData);\n      userData ? setUser(userData) : setUser(null);\n      dispatch({ type: \"RETRIEVE_TOKEN\", userData: userData });\n    }, 1000);\n  }, [])\n\n  return (\n    <AuthContext.Provider value={authContext}>\n      <UserContext.Provider value={{user,setUser}}>\n        <LoadingContext.Provider value={{ isLoading, setIsLoading }}>\n          <NavigationContainer>\n            {loginState.userToken !== null ? (\n              <Drawer.Navigator initialRouteName=\"HomeDrawer\" drawerContent={props => <DrawerContent {...props} />}>\n                <Drawer.Screen name=\"Home\" component={MainTabNavigator} options={{ headerShown: false }} />\n                <Drawer.Screen name=\"Notification\" component={Notification} />\n                <Drawer.Screen name=\"Profile\" component={Profile} />\n                <Drawer.Screen name=\"Settings\" component={Settings} />\n              </Drawer.Navigator>\n            ) :\n              <View style={styles.container}>\n                <AuthScreen />\n                <StatusBar style=\"auto\" />\n              </View>\n            }\n\n            {isLoading &&\n              <View style={{ width: \"100%\", height: \"100%\", position: \"absolute\", backgroundColor: \"rgba(0,0,0,0.6)\" }}>\n                <LoadingScreen />\n              </View>\n            }\n\n          </NavigationContainer>\n        </LoadingContext.Provider>\n      </UserContext.Provider>\n    </AuthContext.Provider>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: 'white',\n    justifyContent: \"center\",\n    width: \"100%\"\n  },\n});\n\n"]},"metadata":{},"sourceType":"module"}