{"ast":null,"code":"import _extends2 from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"index\", \"isDisabled\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport Box from \"../../primitives/Box\";\nimport { AccordionContext, AccordionItemContext } from \"./Context\";\nimport { useThemeProps } from \"../../../hooks\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar AccordionItem = function AccordionItem(_ref, ref) {\n  var children = _ref.children,\n      _ref$index = _ref.index,\n      pIndex = _ref$index === void 0 ? 0 : _ref$index,\n      isDisabled = _ref.isDisabled,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useContext = React.useContext(AccordionContext),\n      cIndex = _React$useContext.index,\n      changeHandler = _React$useContext.changeHandler;\n\n  var _useThemeProps = useThemeProps('AccordionItem', props),\n      newProps = _extends2({}, _useThemeProps);\n\n  var isOpen = cIndex === null || cIndex === void 0 ? void 0 : cIndex.includes(pIndex);\n\n  var onClose = function onClose(cb) {\n    changeHandler && changeHandler(false, pIndex);\n    cb && cb();\n  };\n\n  var onOpen = function onOpen(cb) {\n    changeHandler && changeHandler(true, pIndex);\n    cb && cb();\n  };\n\n  var childSetter = function childSetter() {\n    if (typeof children === 'function') return children({\n      isExpanded: isOpen,\n      isDisabled: isDisabled\n    });\n    return children;\n  };\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(AccordionItemContext.Provider, {\n    value: {\n      index: pIndex,\n      isOpen: isOpen,\n      isDisabled: isDisabled,\n      onClose: onClose,\n      onOpen: onOpen\n    }\n  }, React.createElement(Box, _extends({}, newProps, {\n    ref: ref\n  }), childSetter()));\n};\n\nexport default React.memo(React.forwardRef(AccordionItem));","map":{"version":3,"sources":["AccordionItem.tsx"],"names":["AccordionItem","index","pIndex","props","changeHandler","React","newProps","useThemeProps","isOpen","cIndex","onClose","cb","onOpen","childSetter","children","isExpanded","isDisabled","useHasResponsiveProps","ref"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,GAAA;AACA,SAAA,gBAAA,EAAA,oBAAA;AAEA,SAAA,aAAA;AACA,SAAA,qBAAA;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,OAAA,GAAA,EAGjB;AAAA,MAFH,QAEG,QAFH,QAEG;AAAA,wBAFSC,KAET;AAAA,MAFgBC,MAEhB,2BAFH,CAEG;AAAA,MAFH,UAEG,QAFH,UAEG;AAAA,MAF2CC,KAE3C;;AACH,0BAG4BE,KAAK,CAALA,UAAAA,CAH5B,gBAG4BA,CAH5B;AAAA,MAAM,MAAN,qBACEJ,KADF;AAAA,MAEEG,aAFF,qBAEEA,aAFF;;AAIA,uBAAwBG,aAAa,CAAA,eAAA,EAArC,KAAqC,CAArC;AAAA,MAAWD,QAAX;;AAEA,MAAME,MAAM,GAAGC,MAAH,KAAA,IAAGA,IAAAA,MAAH,KAAA,KAAA,CAAGA,GAAH,KAAA,CAAGA,GAAAA,MAAM,CAANA,QAAAA,CAAf,MAAeA,CAAf;;AACA,MAAMC,OAAO,GAAIC,SAAXD,OAAWC,CAAAA,EAAD,EAAqB;AACnCP,IAAAA,aAAa,IAAIA,aAAa,CAAA,KAAA,EAA9BA,MAA8B,CAA9BA;AACAO,IAAAA,EAAE,IAAIA,EAANA,EAAAA;AAFF,GAAA;;AAIA,MAAMC,MAAM,GAAID,SAAVC,MAAUD,CAAAA,EAAD,EAAqB;AAClCP,IAAAA,aAAa,IAAIA,aAAa,CAAA,IAAA,EAA9BA,MAA8B,CAA9BA;AACAO,IAAAA,EAAE,IAAIA,EAANA,EAAAA;AAFF,GAAA;;AAIA,MAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAI,OAAA,QAAA,KAAJ,UAAA,EACE,OAAOC,QAAQ,CAAC;AAAEC,MAAAA,UAAU,EAAZ,MAAA;AAAsBC,MAAAA,UAAAA,EAAAA;AAAtB,KAAD,CAAf;AACF,WAAA,QAAA;AAnBC,GAgBH;;AAMA,MAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;AAChC,WAAA,IAAA;AACD;;AACD,SACE,KAAA,CAAA,aAAA,CAAC,oBAAD,CAAA,QAAA,EAAA;AACE,IAAA,KAAK,EAAE;AACLhB,MAAAA,KAAK,EADA,MAAA;AAELO,MAAAA,MAFK,EAELA,MAFK;AAGLQ,MAAAA,UAHK,EAGLA,UAHK;AAILN,MAAAA,OAJK,EAILA,OAJK;AAKLE,MAAAA,MAAAA,EAAAA;AALK;AADT,GAAA,EASE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,EAAA;AAAmB,IAAA,GAAG,EAAEM;AAAxB,GAAA,CAAA,EACGL,WAXP,EAUI,CATF,CADF;AA5BF,CAAA;;AA6CA,eAAeR,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,aAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { AccordionContext, AccordionItemContext } from './Context';\nimport type { IAccordionItemProps, IAccordionContextProps } from './types';\nimport { useThemeProps } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AccordionItem = (\n  { children, index: pIndex = 0, isDisabled, ...props }: IAccordionItemProps,\n  ref?: any\n) => {\n  const {\n    index: cIndex,\n    changeHandler,\n  }: IAccordionContextProps = React.useContext(AccordionContext);\n  const { ...newProps } = useThemeProps('AccordionItem', props);\n\n  const isOpen = cIndex?.includes(pIndex);\n  const onClose = (cb?: () => void) => {\n    changeHandler && changeHandler(false, pIndex);\n    cb && cb();\n  };\n  const onOpen = (cb?: () => void) => {\n    changeHandler && changeHandler(true, pIndex);\n    cb && cb();\n  };\n  const childSetter = () => {\n    if (typeof children === 'function')\n      return children({ isExpanded: isOpen, isDisabled });\n    return children;\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <AccordionItemContext.Provider\n      value={{\n        index: pIndex,\n        isOpen,\n        isDisabled,\n        onClose,\n        onOpen,\n      }}\n    >\n      <Box {...newProps} ref={ref}>\n        {childSetter()}\n      </Box>\n    </AccordionItemContext.Provider>\n  );\n};\n\nexport default React.memo(React.forwardRef(AccordionItem));\n"]},"metadata":{},"sourceType":"module"}