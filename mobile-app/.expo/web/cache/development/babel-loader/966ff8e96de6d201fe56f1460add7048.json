{"ast":null,"code":"import AsyncStorage from \"./AsyncStorage\";\nexport function useAsyncStorage(key) {\n  return {\n    getItem: function getItem() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return AsyncStorage.getItem.apply(AsyncStorage, [key].concat(args));\n    },\n    setItem: function setItem() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return AsyncStorage.setItem.apply(AsyncStorage, [key].concat(args));\n    },\n    mergeItem: function mergeItem() {\n      var _AsyncStorage$mergeIt3;\n\n      var _AsyncStorage$mergeIt, _AsyncStorage$mergeIt2;\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return (_AsyncStorage$mergeIt = (_AsyncStorage$mergeIt2 = AsyncStorage.mergeItem) === null || _AsyncStorage$mergeIt2 === void 0 ? void 0 : (_AsyncStorage$mergeIt3 = _AsyncStorage$mergeIt2).call.apply(_AsyncStorage$mergeIt3, [AsyncStorage, key].concat(args))) !== null && _AsyncStorage$mergeIt !== void 0 ? _AsyncStorage$mergeIt : Promise.reject('Not implemented');\n    },\n    removeItem: function removeItem() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return AsyncStorage.removeItem.apply(AsyncStorage, [key].concat(args));\n    }\n  };\n}","map":{"version":3,"sources":["hooks.ts"],"names":["getItem","args","AsyncStorage","setItem","mergeItem","Promise","removeItem"],"mappings":"AAAA,OAAA,YAAA;AAGA,OAAO,SAAA,eAAA,CAAA,GAAA,EAAwD;AAC7D,SAAO;AACLA,IAAAA,OAAO,EAAE,mBAAA;AAAA,WAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAIC,IAAJ,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAIA,QAAAA,IAAJ,CAAA,IAAA,CAAIA,GAAJ,SAAA,CAAA,IAAA,CAAIA;AAAJ;;AAAA,aAAaC,YAAY,CAAZA,OAAAA,OAAAA,YAAY,GAAZA,GAAY,SAAzB,IAAyB,EAAzB;AADJ,KAAA;AAELC,IAAAA,OAAO,EAAE,mBAAA;AAAA,WAAA,IAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EAAIF,IAAJ,GAAA,IAAA,KAAA,CAAA,KAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AAAIA,QAAAA,IAAJ,CAAA,KAAA,CAAIA,GAAJ,SAAA,CAAA,KAAA,CAAIA;AAAJ;;AAAA,aAAaC,YAAY,CAAZA,OAAAA,OAAAA,YAAY,GAAZA,GAAY,SAAzB,IAAyB,EAAzB;AAFJ,KAAA;AAGLE,IAAAA,SAAS,EAAE,qBAAA;AAAA;;AAAA,UAAA,qBAAA,EAAA,sBAAA;;AAAA,WAAA,IAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EAAIH,IAAJ,GAAA,IAAA,KAAA,CAAA,KAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AAAIA,QAAAA,IAAJ,CAAA,KAAA,CAAIA,GAAJ,SAAA,CAAA,KAAA,CAAIA;AAAJ;;AAAA,aAAA,CAAA,qBAAA,GAAA,CAAA,sBAAA,GACTC,YAAY,CADH,SAAA,MAAA,IAAA,IAAA,sBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GACTA,0BAAAA,sBAAAA,EAAAA,IAAAA,gCAAAA,YAAAA,EAAY,GAAZA,SADS,IACTA,EADS,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAETG,OAAO,CAAPA,MAAAA,CAFS,iBAETA,CAFS;AAHN,KAAA;AAMLC,IAAAA,UAAU,EAAE,sBAAA;AAAA,WAAA,IAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EAAIL,IAAJ,GAAA,IAAA,KAAA,CAAA,KAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AAAIA,QAAAA,IAAJ,CAAA,KAAA,CAAIA,GAAJ,SAAA,CAAA,KAAA,CAAIA;AAAJ;;AAAA,aAAaC,YAAY,CAAZA,UAAAA,OAAAA,YAAY,GAAZA,GAAY,SAAzB,IAAyB,EAAzB;AAAA;AANP,GAAP;AAQD","sourcesContent":["import AsyncStorage from './AsyncStorage';\nimport type { AsyncStorageHook } from './types';\n\nexport function useAsyncStorage(key: string): AsyncStorageHook {\n  return {\n    getItem: (...args) => AsyncStorage.getItem(key, ...args),\n    setItem: (...args) => AsyncStorage.setItem(key, ...args),\n    mergeItem: (...args) =>\n      AsyncStorage.mergeItem?.(key, ...args) ??\n      Promise.reject('Not implemented'),\n    removeItem: (...args) => AsyncStorage.removeItem(key, ...args),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}